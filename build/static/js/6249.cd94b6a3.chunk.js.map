{"version":3,"file":"static/js/6249.cd94b6a3.chunk.js","mappings":"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","sources":["utility/api.js","views/ownComponent/DataTable.js","views/ownComponent/FormsCustom.js","views/ownComponent/UploadImage.js","views/question/ExcelUploadComponent.js","views/question/Question.js"],"sourcesContent":["import axios from 'axios'\nimport Cookies from 'js-cookie'\n\n// const BASE_URL = 'http://localhost:5000'\nconst BASE_URL = 'http://66.179.250.128:5000'\n\n\nexport const axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n})\n\n// Add the token to the headers if it exists in cookies\nconst setAuthorizationHeader = () => {\n  const bearerToken = Cookies.get('accessToken')\n  if (bearerToken) {\n    axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${bearerToken}`\n  }\n}\n\n// Call this function to set the Authorization header\nsetAuthorizationHeader()\n\n// Add a response interceptor\naxiosInstance.interceptors.response.use(\n  response => response,\n  error => {\n    if (error.response && error.response.status === 401) {\n      window.location.href = '/admin-login'\n    }\n    return Promise.reject(error);\n  }\n);\n\n\n// --------loginUser-----------//\nexport const loginUser = async (userData) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/admin/login`, userData)\n    if (response.data.success) {\n      // set token\n      const accessToken = response.data.data.token\n      // set the access token in cookie\n      Cookies.set('accessToken', accessToken, { secure: true, sameSite: 'strict' })\n\n      // set token\n      const name = response.data.data.name\n      // set the access token in cookie\n      Cookies.set('name', name, { secure: true, sameSite: 'strict' })\n\n      const id = response.data.data.id\n      Cookies.set('adminId', id, { secure: true, sameSite: 'strict' })\n\n      setAuthorizationHeader();\n    }\n    return response.data\n  } catch (error) {\n    console.log(\"error\", error)\n    throw error\n  }\n}\n\n// --------renderOrganizationData-----------//\nexport const renderOrganizationData = async () => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/organization`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------renderOrganizationById-----------//\nexport const renderOrganizationById = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/organization/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addOrganization-----------//\nexport const addOrganization = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/organization`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteOrganizationData--------\nexport const deleteOrganizationData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/organization/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editOrganization---------//\nexport const editOrganization = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/organization/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n// renderTeacherData\nexport const renderTeacherData = async () => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/teacher`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// renderTeacherByOrganization\nexport const renderTeacherByOrganization = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/teacher/by-organization/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addTeacher-----------//\nexport const addTeacher = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/teacher`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteTeacherData--------\nexport const deleteTeacherData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/teacher/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editOrganization---------//\nexport const editTeacher = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/teacher/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n\n// --------renderLevelData-----------//\nexport const renderLevelData = async () => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/levels`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addLevel-----------//\nexport const addLevel = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/levels`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteLevelData--------\nexport const deleteLevelData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/levels/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editLevel---------//\nexport const editLevel = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/levels/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n\n\n// --------renderQuestionData-----------//\nexport const renderQuestionData = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/question/by_level/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addQuestion-----------//\nexport const addQuestion = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/question`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteQuestionData--------\nexport const deleteQuestionData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/question/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editQuestion---------//\nexport const editQuestion = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/question/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n\n// --------renderStudentData-----------//\nexport const renderStudentData = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/student`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------renderStudentDataByOrganization-----------//\nexport const renderStudentDataByOrganization = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/student/organization/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addStudent-----------//\nexport const addStudent = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/student`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteStudentData--------\nexport const deleteStudentData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/student/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editQuestion---------//\nexport const editStudent = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/student/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n\n// --------renderExamData-----------//\nexport const renderExamData = async () => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderExamDataById\nexport const renderExamDataById = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderStudentExamData\nexport const renderStudentExamData = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/get-exam-student-by-exam-id/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//removedStudentExamData\nexport const removedStudentExamData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/exam/removed-student-from-exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//removedStudentExamData\nexport const removedQuestionExamData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/exam/removed-question-from-exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n// -------addExam-----------//\nexport const addExam = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteExamData--------\nexport const deleteExamData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editExam---------//\nexport const editExam = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/exam/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------renderExamDataByOrganization-----------//\nexport const renderExamDataByOrganization = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/by-organization-id/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderExamDataByOrganizationForAdmin\nexport const renderExamDataByOrganizationForAdmin = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/by-organization-id-for-admin/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------renderExamQuestionData-----------//\nexport const renderExamQuestionData = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/get-exam-qestion-by-exam-id/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n//addStudentToExam\nexport const addStudentToExam = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/add-exam-student`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderNotExitStudent\nexport const renderNotExitStudent = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/organization-student-not-exit`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderNotExitStudent\nexport const renderNotExitQuestion= async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/question-not-exit`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//addStudentToExam\nexport const addQuestionToExam = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/add-exam-question`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------scheduleExam-----------//\nexport const scheduleExam = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/schedule-exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------renderStudentExamById------//\nexport const renderStudentExamById = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam-submission/by-examination-id/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// updateStudentCertificate\nexport const updateStudentCertificate = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/update-student-certificate`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// updateGenerateCertificate\nexport const updateGenerateCertificate = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/update-student-certificate-generate/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n// updateDataForDashboard\nexport const renderDataForDashboard = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/recent/dashboard`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//UpdateExamData\nexport const uploadBulkQuestion = async ( data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/question/bulk`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}","// DataTable.js\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { useTable, usePagination, useSortBy, useGlobalFilter } from 'react-table'\nimport { Table, FormControl, Button } from 'react-bootstrap'\n// import { useState } from 'react'\nimport * as XLSX from 'xlsx'\nimport './DataTable.css' // Import the CSS file\n\nconst DataTable = ({ columns, data, name }) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    state: { pageIndex, pageSize, globalFilter },\n    setGlobalFilter,\n    gotoPage,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0, pageSize: 10 }, // Set initial pageSize to tablePageSize\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n  )\n\n  const downloadExcel = () => {\n    const excelData = data.map((row) =>\n      columns.reduce((acc, column) => {\n        acc[column.Header] = row[column.accessor]\n        return acc\n      }, {}),\n    )\n\n    const ws = XLSX.utils.json_to_sheet(excelData)\n    const wb = XLSX.utils.book_new()\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet 1')\n    XLSX.writeFile(wb, 'data.xlsx')\n  }\n\n  return (\n    <div className=\"data-table-container\">\n        <h5>{name?name:\"\"}</h5>\n      <div className=\"data-table-header\">\n        <div className=\"search-box-container\">\n          <FormControl\n            type=\"text\"\n            value={globalFilter || ''}\n            onChange={(e) => setGlobalFilter(e.target.value)}\n            placeholder=\"Search...\"\n          />\n          <span className=\"search-icon\">&#x1F50D;</span>\n        </div>\n        <Button onClick={() => downloadExcel()} variant=\"success\" className='download_excel' style={{ color: 'white' }}>\n          Download Excel\n        </Button>\n      </div>\n      <div className=\"table-wrapper\">\n      <Table {...getTableProps()} bordered hover responsive>\n        <thead>\n          <tr>\n            <th>Sr. No.</th>\n            {headerGroups.map((headerGroup) => (\n              <React.Fragment key={headerGroup._id}>\n                {headerGroup.headers.map((column) => (\n                  <th key={column._id} {...column.getHeaderProps(column.getSortByToggleProps())}>\n                    {column.render('Header')}\n                    <span>{column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}</span>\n                  </th>\n                ))}\n              </React.Fragment>\n            ))}\n          </tr>\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr key={row._id} {...row.getRowProps()}>\n                <td>{pageIndex * pageSize + i + 1}</td>\n                {row.cells.map((cell) => (\n                  <td key={cell.column._id} {...cell.getCellProps()}>\n                    {cell.render('Cell')}\n                  </td>\n                ))}\n              </tr>\n            )\n          })}\n        </tbody>\n      </Table>\n      </div>\n     \n      <div className=\"pagination-controls\">\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {'<<'}\n        </button>\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n          {'<'}\n        </button>\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n          {'>'}\n        </button>\n        <button onClick={() => gotoPage(page.length - 1)} disabled={!canNextPage}>\n          {'>>'}\n        </button>\n        <span>\n          &nbsp;Page <strong>{pageIndex + 1}</strong> of {Math.ceil(data.length / pageSize)} pages | Showing {data.length} Records\n        </span>\n      </div>\n    </div>\n  )\n}\n\nDataTable.propTypes = {\n  columns: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n}\n\nexport default DataTable","// FormsCustom.js\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { CCard, CCardBody, CCardHeader, CCol, CRow } from '@coreui/react'\n\nconst FormsCustom = ({ customStyles, title }) => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>{title}</strong>\n          </CCardHeader>\n          <CCardBody>\n            {/* Call the customStyles function if it's provided */}\n            {customStyles ? customStyles() : null}\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\n// Add prop validation\nFormsCustom.propTypes = {\n  customStyles: PropTypes.func, // Ensure customStyles is a function\n  title: PropTypes.func, // Ensure customStyles is a function\n}\n\nexport default FormsCustom\n","import React, { useState,useEffect } from 'react';\nimport { Image } from 'cloudinary-react';\nimport { FaTimes } from 'react-icons/fa';\nimport {\n    CButton,\n    CCol,\n    CForm,\n    CFormInput,\n    CFormFeedback,\n    CFormLabel,\n    CFormSelect,\n} from \"@coreui/react\";\nimport Swal from \"sweetalert2\";\n\nconst UploadImage = ({ onUpload, img }) => {\n    const [image, setImage] = useState(img);\n\n    useEffect(() => {\n        setImage(img);\n    }, [img]);\n\n    const handleUpload = async (e) => {\n        const file = e.target.files[0];\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('upload_preset', 'school_management');\n\n        const response = await fetch(\n            `https://api.cloudinary.com/v1_1/dqdnj2szc/image/upload`,\n            {\n                method: 'POST',\n                body: formData,\n            }\n        );\n\n        const data = await response.json();\n        setImage(data.secure_url);\n        onUpload(data.secure_url);\n    };\n\n    const removeImage = async () => {\n        const confirmDelete = await Swal.fire({\n            title: \"Are you sure?\",\n            text: \"You will not be able to recover this image!\",\n            icon: \"warning\",\n            showCancelButton: true,\n            confirmButtonColor: \"#d33\",\n            cancelButtonColor: \"#3085d6\",\n            confirmButtonText: \"Yes, delete it!\",\n        });\n\n        if (confirmDelete.isConfirmed) {\n            setImage('');\n            onUpload(\"\");\n            const inputElement = document.getElementById('fileInput');\n            if (inputElement) {\n                inputElement.value = '';\n            }\n        }\n\n\n        // onImageChange('')\n    };\n\n    return (\n        <div>\n            {/* <input type=\"file\" onChange={handleUpload} />\n       */}\n            <CFormInput type=\"file\" id=\"fileInput\" aria-label=\"file example\" accept=\"image/*\" onChange={handleUpload} />\n            {image && (\n                <div>\n                    <div style={{ width: '100px', height: '100px', position: 'relative', margin: \"10px\" }}>\n                        <Image cloudName=\"dqdnj2szc\" publicId={image} width=\"100\" height=\"100\" />\n                        <FaTimes onClick={removeImage} style={{ position: 'absolute', top: '5px', right: '5px', cursor: 'pointer' }} />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default UploadImage;\n","import React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { Button, Modal } from \"react-bootstrap\";\nimport {\n  CButton,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormFeedback,\n  CFormLabel,\n  CFormCheck,\n} from \"@coreui/react\";\nimport { FaDownload, FaFile } from 'react-icons/fa';\nimport Excel from \"src/assets/QuestionUpload.xlsx\"\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Swal from \"sweetalert2\";\nimport { uploadBulkQuestion } from 'src/utility/api';\n\n\nconst ExcelUploadComponent = ({ created_by, id, isBulk, updateIsBulkState, renderData }) => {\n  const [data, setData] = useState([]);\n  const [modalOpen, setModalOpen] = useState(true);\n\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = (e) => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, { type: 'array' });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const excelData = XLSX.utils.sheet_to_json(worksheet);\n\n      const formattedData = excelData.map((row) => {\n        const options = [];\n        for (let i = 1; i <= 4; i++) {\n          const optionName = row[`option_${i}_name`];\n          let optionIsTrue = row[`option_${i}_is_true`] === 'TRUE';\n\n          console.log(`Option ${i}: Name - ${optionName}, IsTrue - ${optionIsTrue}`);\n\n          if (optionIsTrue === \"TRUE\") {\n            optionIsTrue = true\n          } else {\n            optionIsTrue = false\n          }\n          if (!optionName) continue;\n\n          options.push({\n            name: optionName,\n            is_true: optionIsTrue,\n          });\n        }\n\n        let is_final = false\n        if(row.is_final == \"TRUE\"){\n          is_final = true\n        }\n        return {\n          question: row.question,\n          is_type: row.is_type,\n          img_url: row.img_url || '',\n          is_final: is_final,\n          created_by: created_by,\n          answer: \"Test\",\n          level_id: id,\n          options, // options array should contain all 4 options, even if some are empty\n        };\n      });\n\n\n      setData(formattedData);\n    };\n\n    reader.readAsArrayBuffer(file);\n  };\n  const toggleModal = () => {\n    updateIsBulkState()\n  };\n\n  const handleSubmit = async (e) => {\n\n    \n    try {\n      e.preventDefault();\n\n      if(data.length == 0){\n        toast.error(\"Please upload file or add question in file...!\", {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 3000,\n        });\n        return;\n      }\n\n      const response = await uploadBulkQuestion(data)\n      if (response.success) {\n        toast.success(response.message, {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 10000,\n        });\n        toggleModal();\n        updateIsBulkState()\n        renderData()\n\n      } else {\n        toast.error(\"Something went wrong...!\", {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 3000,\n        });\n      }\n\n\n    } catch (err) {\n      toast.error(\"Something went wrong...!\", {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 3000,\n      });\n    }\n\n  };\n\n  const downloadSampleExcel = () => {\n    const downloadLink = document.createElement('a');\n    downloadLink.href = Excel; // Update the path to your Excel file\n    downloadLink.download = 'QuestionUpload.xlsx'; // Update the filename if needed\n    downloadLink.click();\n  };\n  return (\n    <div>\n      <Modal show={modalOpen} onHide={toggleModal} backdrop=\"static\">\n        <Modal.Header closeButton>\n          <Modal.Title>Bulk Upload</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className='row'>\n            <div className='col-md-8'>\n              <CFormLabel htmlFor=\"exampleFormControlInput1\">Bulk Upload</CFormLabel>\n              <CFormInput type=\"file\" aria-label=\"file example\" onChange={handleFileUpload} />\n            </div>\n            <div className='col-md-4 mt-md-3 mt-0'>\n              <Button variant=\"primary\" onClick={handleSubmit} className='w-100 mt-3 bulk_upload_btn'>\n                <FaFile></FaFile> Upload Data\n              </Button>\n            </div>\n\n\n          </div>\n\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"danger\" style={{ color: \"white\" }} className='' onClick={downloadSampleExcel}>\n            <FaDownload></FaDownload>  Download Sample xlsx\n          </Button>\n          <Button variant=\"secondary\" onClick={toggleModal}>\n            Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n    </div>\n  );\n};\n\nexport default ExcelUploadComponent;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { FaEdit, FaPlus, FaTrash } from \"react-icons/fa\";\nimport Cookies from 'js-cookie'\nimport {\n    CButton,\n    CCol,\n    CForm,\n    CFormInput,\n    CFormFeedback,\n    CFormLabel,\n    CFormCheck,\n} from \"@coreui/react\";\nimport DataTable from \"../ownComponent/DataTable\";\nimport FormsCustom from \"../ownComponent/FormsCustom\";\nimport {\n    renderQuestionData,\n    addQuestion,\n    editQuestion,\n    deleteOrganizationData,\n    deleteQuestionData\n} from \"src/utility/api\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport PropTypes from \"prop-types\";\nimport Swal from \"sweetalert2\";\nimport Select from \"react-select\";\nimport { useParams } from \"react-router-dom\";\nimport UploadImage from \"../ownComponent/UploadImage\";\nimport ExcelUploadComponent from './ExcelUploadComponent';\n\n\n\nfunction Question() {\n    const [data, setData] = useState([]);\n    const [editId, setEditId] = useState(null);\n    const [btnText, setBtnText] = useState(\"Add Question\");\n    const [LevelName, setLevelName] = useState(\"\");\n    const [isTypeSelected, setIsTypeSelected] = useState(false);\n    const [options, setOptions] = useState([]);\n    const [correctOptionIndex, setCorrectOptionIndex] = useState(null);\n    const [isFinal, setIsFinal] = useState(false);\n    const [isBulk, setIsBulk] = useState(false);\n\n\n    //imgUpload\n    const [imageUrl, setImageUrl] = useState('');\n\n\n    const { id } = useParams();\n    const created_by = Cookies.get('adminId')\n\n\n\n    const [formData, setFormData] = useState({\n        question: \"\",\n        img_url: \"\",\n        is_type: null,\n        is_type_value: null,\n        answer: \"Test\",\n        level_id: id,\n        created_by: created_by,\n        options: [],\n        is_final: false,\n    });\n\n    useEffect(() => {\n        renderData();\n    }, []);\n\n    const [typeOptions] = useState([\n        { value: \"Geography\", label: \"Geography\" },\n        { value: \"Math\", label: \"Math\" },\n    ]);\n\n    const renderData = async () => {\n        const response = await renderQuestionData(id);\n        console.log(response);\n        if (response.success) {\n            setData(response.data);\n            setLevelName(response.data.length > 0 ? response.data[0].level_id.name : \"\")\n        } else {\n            // Handle error if needed\n        }\n    };\n\n    const handleEdit = (id) => {\n        setBtnText(\"Update Question\");\n        const levelToUpdate = data.find((org) => org._id === id);\n        console.log(levelToUpdate);\n        setEditId(levelToUpdate._id);\n        setOptions([])\n\n        levelToUpdate.options.map((option, index) => {\n            setOptions((prevOptions) => [...prevOptions, { name: option.name, is_true: option.is_true }]);\n            if (option.is_true) {\n\n                setCorrectOptionIndex(index);\n            }\n        })\n\n        setIsFinal(levelToUpdate.is_final)\n        //imgUpload\n        setImageUrl(levelToUpdate.img_url)\n\n\n        setFormData({\n            question: levelToUpdate.question,\n            img_url: levelToUpdate.img_url,\n            is_type: levelToUpdate.is_type,\n            is_type_value: { value: levelToUpdate.is_type, label: levelToUpdate.is_type },\n            is_final: levelToUpdate.is_final,\n\n        });\n    };\n\n    const updateIsBulkState = (newValue) => {\n        setIsBulk(false)\n    };\n\n\n    //imgUpload\n    const handleUpload = (url) => {\n        setImageUrl(url);\n    };\n\n\n    const handleDelete = async (id) => {\n        const confirmDelete = await Swal.fire({\n            title: \"Are you sure?\",\n            text: \"You will not be able to recover this question!\",\n            icon: \"warning\",\n            showCancelButton: true,\n            confirmButtonColor: \"#d33\",\n            cancelButtonColor: \"#3085d6\",\n            confirmButtonText: \"Yes, delete it!\",\n        });\n\n        if (confirmDelete.isConfirmed) {\n            try {\n                const response = await deleteQuestionData(id);\n                console.log(\"response\", response)\n                if (response.success) {\n                    toast.success(response.message, {\n                        position: toast.POSITION.TOP_RIGHT,\n                        autoClose: 3000,\n                    });\n                    renderData();\n                } else {\n                    toast.error(response.message, {\n                        position: toast.POSITION.TOP_RIGHT,\n                        autoClose: 3000,\n                    });\n                }\n            } catch (error) {\n                console.log(\"error\", error)\n                toast.error(error.message, {\n                    position: toast.POSITION.TOP_RIGHT,\n                    autoClose: 3000,\n                });\n            }\n        }\n    };\n\n    const columns = [\n        {\n            Header: \"Level Name\", accessor: \"level_id\",\n            Cell: ({ row }) => (\n                <>{row.original.level_id ? row.original.level_id.name : \"-\"}</>\n            ),\n        },\n        { Header: \"Question\", accessor: \"question\" },\n        { Header: \"Type\", accessor: \"is_type\" },\n        {\n            Header: \"Options\", accessor: \"options\",\n            Cell: ({ row }) => (\n                <>{row.original.options ? row.original.options.length : \"-\"}</>\n            ),\n        },\n        {\n            Header: \"Is Final\", accessor: \"is_final\",\n            Cell: ({ row }) => (\n                <>{row.original.is_final ? \"Yes\" : \"No\"}</>\n            ),\n        },\n        {\n            Header: \"Created By\", accessor: \"created_by\",\n            Cell: ({ row }) => (\n                <>{row.original.created_by ? row.original.created_by.admin_name : \"-\"}</>\n            ),\n        },\n        {\n            Header: \"createdAt\", accessor: \"createdAt\",\n            Cell: ({ row }) => (\n                <>{row.original.createdAt ? row.original.createdAt.slice(0, 10) : \"\"}</>\n            ),\n        },\n        {\n            Header: \"Actions\",\n            accessor: \"_id\", // Assuming you have an 'id' property in your organization data\n            Cell: ({ row }) => (\n                <>\n                    <CButton\n                        color=\"info\"\n                        size=\"sm\"\n                        style={{ color: \"white\" }}\n                        onClick={() => handleEdit(row.original._id)}\n                    >\n                        <FaEdit /> Edit\n                    </CButton>{\" \"}\n                    <CButton\n                        color=\"danger\"\n                        size=\"sm\"\n                        style={{ color: \"white\" }}\n                        onClick={() => handleDelete(row.original._id)}\n                    >\n                        <FaTrash /> Delete\n                    </CButton>\n                </>\n            ),\n        },\n    ];\n\n    const CustomStyles = () => {\n        const formRef = useRef();\n\n\n        const handleChange = (e) => {\n            const { name, value, files } = e.target;\n\n            setFormData((prevData) => ({\n                ...prevData,\n                [name]: name === \"file\" ? files[0] : value,\n            }));\n        };\n\n        const handleChangeSelect = (selectedOption) => {\n            console.log(selectedOption);\n            setFormData((prevData) => ({\n                ...prevData,\n                is_type_value: selectedOption,\n                is_type: selectedOption.value,\n            }));\n            setIsTypeSelected(false);\n        };\n\n        const handleAddOption = () => {\n            setOptions((prevOptions) => [...prevOptions, { name: \"\", is_true: false }]);\n        };\n\n        const handleOptionChange = (index, fieldName, value) => {\n            setOptions((prevOptions) => {\n                const updatedOptions = [...prevOptions];\n                updatedOptions[index][fieldName] = value;\n                return updatedOptions;\n            });\n        };\n\n        const handleRemoveOption = (index) => {\n            setOptions((prevOptions) => {\n                const updatedOptions = [...prevOptions];\n                updatedOptions.splice(index, 1);\n                return updatedOptions;\n            });\n\n            // Adjust correctOptionIndex when removing an option\n            if (index === correctOptionIndex) {\n                setCorrectOptionIndex(null);\n            } else if (index < correctOptionIndex) {\n                setCorrectOptionIndex(correctOptionIndex - 1);\n            }\n        };\n\n        const handleSetCorrectOption = (index) => {\n            setCorrectOptionIndex(index);\n        };\n\n        const handleSubmit = async (event) => {\n            event.preventDefault();\n            event.stopPropagation();\n            const form = formRef.current;\n\n            if (form.checkValidity() === false) {\n                form.classList.add(\"was-validated\");\n                if (formData.is_type == \"\" || formData.is_type == null) {\n                    setIsTypeSelected(true);\n                    return;\n                }\n                return;\n            }\n\n            // Check if a correct option is selected\n            if (correctOptionIndex === null) {\n                toast.error(\"Please select the correct answer option\", {\n                    position: toast.POSITION.TOP_RIGHT,\n                    autoClose: 3000,\n                });\n                return;\n            }\n\n            // Set the is_true field for the correct option\n            const updatedOptions = options.map((opt, index) => ({\n                ...opt,\n                is_true: index === correctOptionIndex,\n            }));\n\n            formData.is_final = isFinal;\n            // imgUpload\n            formData.img_url = imageUrl\n            setOptions(updatedOptions);\n\n            console.log(\"updatedOptions\", updatedOptions)\n            console.log(\"formData\", formData)\n            // return\n            let response = null;\n\n            if (editId) {\n                response = await editQuestion(editId, { ...formData, options: updatedOptions });\n            } else {\n                response = await addQuestion({ ...formData, options: updatedOptions });\n                setEditId(null);\n            }\n\n            if (response.success) {\n                toast.success(response.message, {\n                    position: toast.POSITION.TOP_RIGHT,\n                    autoClose: 3000,\n                });\n                renderData();\n\n                setBtnText(\"Add Question\");\n                setFormData({\n                    question: \"\",\n                    img_url: \"\",\n                    is_type: null,\n                    is_type_value: null,\n                    answer: \"Test\",\n                    level_id: id,\n                    created_by: created_by,\n                    options: [],\n                    is_final: false,\n                });\n                //imgUpload\n                setImageUrl('');\n\n                setOptions([]); // Clear options state\n                setCorrectOptionIndex(null); // Reset correctOptionIndex\n                setIsFinal(false);\n\n                form.classList.remove(\"was-validated\");\n            } else {\n                toast.error(response.message, {\n                    position: toast.POSITION.TOP_RIGHT,\n                    autoClose: 3000,\n                });\n            }\n        };\n\n\n        return (\n            <CForm\n                ref={formRef}\n                className=\"row g-3 needs-validation\"\n                noValidate\n                onSubmit={handleSubmit}\n            >\n                <CCol md={6}>\n                    <CFormLabel>Question</CFormLabel>\n                    <CFormInput\n                        type=\"text\"\n                        placeholder=\"Enter Question\"\n                        name=\"question\"\n                        required\n                        value={formData.question}\n                        onChange={handleChange}\n                    />\n                    <CFormFeedback invalid>Please enter question name</CFormFeedback>\n                </CCol>\n                <CCol md={3}>\n                    <CFormLabel>Select Type</CFormLabel>\n                    <Select\n                        name=\"is_type\"\n                        value={formData.is_type_value}\n                        options={typeOptions}\n                        onChange={handleChangeSelect}\n                        placeholder=\"Select Type\"\n                        required\n                    />\n                    <CFormFeedback className=\"text-danger\" style={{ fontSize: \"14px\" }}>\n                        {isTypeSelected ? \"Please select type\" : \"\"}\n                    </CFormFeedback>\n                </CCol>\n\n                <CCol md={3}>\n                    <CFormLabel> Question Image</CFormLabel>\n                    <UploadImage onUpload={handleUpload} img={imageUrl} />\n                    <CFormFeedback invalid>\n                        Example invalid form file feedback\n                    </CFormFeedback>\n\n                </CCol>\n\n                <CCol md={3}>\n                    <CFormCheck\n                        type=\"checkbox\"\n                        id=\"is_final_checkbox\"\n                        label=\"Is Final\"\n                        checked={isFinal}\n                        onChange={(e) => setIsFinal(e.target.checked)}\n                    />\n                </CCol>\n\n                <CCol xs={12} className=\"d-flex justify-content-start\">\n                    <CButton color=\"info\" style={{ color: \"white\" }} onClick={handleAddOption}>\n                        Add Option\n                    </CButton>\n                </CCol>\n\n\n\n                {options.map((option, index) => (\n                    <React.Fragment key={index}>\n                        <CCol md={12}> <hr style={{margin: \"0px\"}}></hr></CCol>\n\n                        <CCol md={7}>\n                            <CFormLabel>{`Option ${index + 1}`}</CFormLabel>\n                            <CFormInput\n                                type=\"text\"\n                                placeholder={`Enter Option ${index + 1}`}\n                                name={`option_${index}`}\n                                value={option.name}\n                                onChange={(e) => handleOptionChange(index, \"name\", e.target.value)}\n                            />\n                        </CCol>\n                        <CCol md={2} className=\"mt-md-5\">\n                            <CFormLabel className=\"mx-2\">Is Correct?</CFormLabel>\n                            <CFormCheck\n                                type=\"checkbox\"\n                                name={`is_correct_${index}`}\n                                checked={index === correctOptionIndex}\n                                onChange={() => handleSetCorrectOption(index)}\n                            />\n                        </CCol>\n                        <CCol md={3} className=\"mt-md-5\">\n                            <CButton\n                                color=\"danger\"\n                                style={{ color: \"white\" }}\n                                onClick={() => handleRemoveOption(index)}\n                            >\n                                Remove\n                            </CButton>\n                        </CCol>\n\n                    </React.Fragment>\n                ))}\n\n                <CCol xs={12} className=\"d-flex justify-content-end\">\n                    <CButton color=\"primary\" type=\"submit\">\n                        {btnText}\n                    </CButton>\n                </CCol>\n            </CForm>\n        );\n    };\n\n    return (\n        <>\n            <div className=\"row my-2\">\n                <div className=\"col-12 text-end\" >\n                    <CButton color=\"primary\" type=\"submit\" onClick={() => setIsBulk(true)}>\n                        <FaPlus></FaPlus> Bulk Upload\n                    </CButton>\n                </div>\n            </div>\n            <FormsCustom customStyles={CustomStyles} title={`Question Master (${LevelName})`} />\n            {isBulk ? <ExcelUploadComponent created_by={created_by} id={id} isBulk={isBulk} updateIsBulkState={updateIsBulkState} renderData={renderData} /> : \"\"}\n\n            <DataTable columns={columns} data={data} />\n        </>\n    );\n}\n\nexport default Question;\n\nQuestion.propTypes = {\n    row: PropTypes.shape({\n        original: PropTypes.shape({\n            _id: PropTypes.number.isRequired,\n        }),\n    }),\n};\n"],"names":["BASE_URL","axiosInstance","axios","create","baseURL","headers","setAuthorizationHeader","bearerToken","Cookies","get","defaults","common","concat","interceptors","response","use","error","status","window","location","href","Promise","reject","loginUser","async","post","userData","data","success","accessToken","token","set","secure","sameSite","name","id","console","log","renderOrganizationData","renderOrganizationById","addOrganization","deleteOrganizationData","delete","editOrganization","patch","renderTeacherData","renderTeacherByOrganization","addTeacher","deleteTeacherData","editTeacher","renderLevelData","addLevel","deleteLevelData","editLevel","renderQuestionData","addQuestion","deleteQuestionData","editQuestion","renderStudentData","renderStudentDataByOrganization","addStudent","deleteStudentData","editStudent","renderExamData","renderExamDataById","renderStudentExamData","removedStudentExamData","removedQuestionExamData","addExam","deleteExamData","editExam","renderExamDataByOrganizationForAdmin","renderExamQuestionData","addStudentToExam","renderNotExitStudent","renderNotExitQuestion","addQuestionToExam","scheduleExam","renderStudentExamById","updateStudentCertificate","updateGenerateCertificate","renderDataForDashboard","uploadBulkQuestion","_ref","columns","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","state","pageIndex","pageSize","globalFilter","setGlobalFilter","gotoPage","nextPage","previousPage","canNextPage","canPreviousPage","useTable","initialState","useGlobalFilter","useSortBy","usePagination","_jsxs","className","children","_jsx","FormControl","type","value","onChange","e","target","placeholder","Button","onClick","downloadExcel","excelData","map","row","reduce","acc","column","Header","accessor","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","variant","style","color","Table","bordered","hover","responsive","headerGroup","React","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","_id","i","getRowProps","cells","cell","getCellProps","disabled","length","Math","ceil","customStyles","title","CRow","CCol","xs","CCard","CCardHeader","CCardBody","onUpload","img","image","setImage","useState","useEffect","CFormInput","accept","file","files","formData","FormData","append","fetch","method","body","json","secure_url","width","height","position","margin","Image","cloudName","publicId","FaTimes","Swal","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","inputElement","document","getElementById","top","right","cursor","created_by","isBulk","updateIsBulkState","renderData","setData","modalOpen","setModalOpen","toggleModal","Modal","show","onHide","backdrop","closeButton","Title","Body","CFormLabel","htmlFor","reader","FileReader","onload","Uint8Array","result","workbook","sheetName","SheetNames","worksheet","Sheets","formattedData","sheet_to_json","options","optionName","optionIsTrue","push","is_true","is_final","question","is_type","img_url","answer","level_id","readAsArrayBuffer","preventDefault","toast","POSITION","TOP_RIGHT","autoClose","message","err","FaFile","Footer","downloadSampleExcel","downloadLink","createElement","Excel","download","click","FaDownload","editId","setEditId","btnText","setBtnText","LevelName","setLevelName","isTypeSelected","setIsTypeSelected","setOptions","correctOptionIndex","setCorrectOptionIndex","isFinal","setIsFinal","setIsBulk","imageUrl","setImageUrl","useParams","setFormData","is_type_value","typeOptions","label","handleUpload","url","Cell","_Fragment","original","_ref2","_ref3","_ref4","admin_name","_ref5","createdAt","slice","_ref6","CButton","size","levelToUpdate","find","org","option","index","prevOptions","handleEdit","FaEdit","handleDelete","FaTrash","FaPlus","FormsCustom","CustomStyles","formRef","useRef","CForm","ref","noValidate","onSubmit","event","stopPropagation","form","current","checkValidity","classList","add","updatedOptions","opt","remove","md","required","prevData","CFormFeedback","invalid","Select","selectedOption","fontSize","UploadImage","CFormCheck","checked","handleAddOption","handleOptionChange","fieldName","handleSetCorrectOption","splice","handleRemoveOption","ExcelUploadComponent","newValue","DataTable"],"sourceRoot":""}