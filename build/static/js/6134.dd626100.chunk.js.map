{"version":3,"file":"static/js/6134.dd626100.chunk.js","mappings":"wlBAIA,MAAMA,EAAW,6BAGJC,EAAgBC,EAAAA,EAAMC,OAAO,CACxCC,QAASJ,EACTK,QAAS,CACP,eAAgB,sBAKdC,EAAyBA,KAC7B,MAAMC,EAAcC,EAAAA,EAAQC,IAAI,eAC5BF,IACFN,EAAcS,SAASL,QAAQM,OAAsB,cAAC,UAAAC,OAAaL,GACrE,EAIFD,IAGAL,EAAcY,aAAaC,SAASC,KAClCD,GAAYA,IACZE,IACMA,EAAMF,UAAsC,MAA1BE,EAAMF,SAASG,SACnCC,OAAOC,SAASC,KAAO,gBAElBC,QAAQC,OAAON,MAMnB,MAAMO,EAAYC,UACvB,IACE,MAAMV,QAAiBb,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,gBAAgB0B,GACrE,GAAIZ,EAASa,KAAKC,QAAS,CAEzB,MAAMC,EAAcf,EAASa,KAAKA,KAAKG,MAEvCtB,EAAAA,EAAQuB,IAAI,cAAeF,EAAa,CAAEG,QAAQ,EAAMC,SAAU,WAGlE,MAAMC,EAAOpB,EAASa,KAAKA,KAAKO,KAEhC1B,EAAAA,EAAQuB,IAAI,OAAQG,EAAM,CAAEF,QAAQ,EAAMC,SAAU,WAEpD,MAAME,EAAKrB,EAASa,KAAKA,KAAKQ,GAC9B3B,EAAAA,EAAQuB,IAAI,UAAWI,EAAI,CAAEH,QAAQ,EAAMC,SAAU,WAErD3B,GACF,CACA,OAAOQ,EAASa,IAClB,CAAE,MAAOX,GAEP,MADAoB,QAAQC,IAAI,QAASrB,GACfA,CACR,GAIWsB,EAAyBd,UACpC,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,mBACpC2B,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWuB,EAAyBf,UACpC,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,kBAAAY,OAAiBuB,KACrDR,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWwB,EAAkBhB,UAC7B,IAEE,aADuBvB,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,iBAAiB2B,IACtDA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWyB,EAAyBjB,UACpC,IAEE,aADuBvB,EAAcyC,OAAO,GAAD9B,OAAIZ,EAAQ,kBAAAY,OAAiBuB,KACxDR,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW2B,EAAmBnB,MAAOW,EAAIR,KACzC,IAEE,aADuB1B,EAAc2C,MAAM,GAADhC,OAAIZ,EAAQ,kBAAAY,OAAiBuB,GAAMR,IAC7DA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAKW6B,EAAoBrB,UAC/B,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,cACpC2B,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW8B,EAA8BtB,UACzC,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,6BAAAY,OAA4BuB,KAChER,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW+B,EAAavB,UACxB,IAEE,aADuBvB,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,YAAY2B,IACjDA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWgC,EAAoBxB,UAC/B,IAEE,aADuBvB,EAAcyC,OAAO,GAAD9B,OAAIZ,EAAQ,aAAAY,OAAYuB,KACnDR,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWiC,EAAczB,MAAOW,EAAIR,KACpC,IAEE,aADuB1B,EAAc2C,MAAM,GAADhC,OAAIZ,EAAQ,aAAAY,OAAYuB,GAAMR,IACxDA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAMWkC,EAAkB1B,UAC7B,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,aACpC2B,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWmC,EAAW3B,UACtB,IAEE,aADuBvB,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,WAAW2B,IAChDA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWoC,EAAkB5B,UAC7B,IAEE,aADuBvB,EAAcyC,OAAO,GAAD9B,OAAIZ,EAAQ,YAAAY,OAAWuB,KAClDR,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWqC,EAAY7B,MAAOW,EAAIR,KAClC,IAEE,aADuB1B,EAAc2C,MAAM,GAADhC,OAAIZ,EAAQ,YAAAY,OAAWuB,GAAMR,IACvDA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAOWsC,EAAqB9B,UAChC,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,uBAAAY,OAAsBuB,KAC1DR,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWuC,EAAc/B,UACzB,IAEE,aADuBvB,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,aAAa2B,IAClDA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWwC,EAAqBhC,UAChC,IAEE,aADuBvB,EAAcyC,OAAO,GAAD9B,OAAIZ,EAAQ,cAAAY,OAAauB,KACpDR,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWyC,EAAejC,MAAOW,EAAIR,KACrC,IAEE,aADuB1B,EAAc2C,MAAM,GAADhC,OAAIZ,EAAQ,cAAAY,OAAauB,GAAMR,IACzDA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAMW0C,EAAoBlC,UAC/B,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,cACpC2B,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW2C,EAAkCnC,UAC7C,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,0BAAAY,OAAyBuB,KAC7DR,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW4C,EAAapC,UACxB,IAEE,aADuBvB,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,YAAY2B,IACjDA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW6C,EAAoBrC,UAC/B,IAEE,aADuBvB,EAAcyC,OAAO,GAAD9B,OAAIZ,EAAQ,aAAAY,OAAYuB,KACnDR,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW8C,EAActC,MAAOW,EAAIR,KACpC,IAEE,aADuB1B,EAAc2C,MAAM,GAADhC,OAAIZ,EAAQ,aAAAY,OAAYuB,GAAMR,IACxDA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAMW+C,EAAiBvC,UAC5B,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,WACpC2B,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWgD,EAAqBxC,UAChC,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,UAAAY,OAASuB,KAC7CR,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWiD,EAAwBzC,UACnC,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,sCAAAY,OAAqCuB,KACzER,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWkD,EAAyB1C,UACpC,IAEE,aADuBvB,EAAcyC,OAAO,GAAD9B,OAAIZ,EAAQ,oCAAAY,OAAmCuB,KAC1ER,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWmD,EAA0B3C,UACrC,IAEE,aADuBvB,EAAcyC,OAAO,GAAD9B,OAAIZ,EAAQ,qCAAAY,OAAoCuB,KAC3ER,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAKWoD,EAAU5C,UACrB,IAEE,aADuBvB,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,SAAS2B,IAC9CA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWqD,EAAiB7C,UAC5B,IAEE,aADuBvB,EAAcyC,OAAO,GAAD9B,OAAIZ,EAAQ,UAAAY,OAASuB,KAChDR,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWsD,EAAW9C,MAAOW,EAAIR,KACjC,IAEE,aADuB1B,EAAc2C,MAAM,GAADhC,OAAIZ,EAAQ,UAAAY,OAASuB,GAAMR,IACrDA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAcWuD,EAAuC/C,UAClD,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,uCAAAY,OAAsCuB,KAC1ER,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWwD,EAAyBhD,UACpC,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,sCAAAY,OAAqCuB,KACzER,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAGWyD,EAAmBjD,UAC9B,IAEE,aADuBvB,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,0BAA0B2B,IAC/DA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW0D,EAAuBlD,UAClC,IAEE,aADuBvB,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,uCAAuC2B,IAC5EA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW2D,EAAuBnD,UAClC,IAEE,aADuBvB,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,2BAA2B2B,IAChEA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW4D,EAAoBpD,UAC/B,IAEE,aADuBvB,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,2BAA2B2B,IAChEA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW6D,EAAerD,UAC1B,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,wBAAAY,OAAuBuB,KAC3DR,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW8D,EAAwBtD,UACnC,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,uCAAAY,OAAsCuB,KAC1ER,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW+D,EAA2BvD,UACtC,IAEE,aADuBvB,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,oCAAoC2B,IACzEA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWgE,EAA4BxD,UACvC,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,8CAAAY,OAA6CuB,KACjFR,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAGWiE,EAAyBzD,UACpC,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,4BACpC2B,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWkE,EAAqB1D,UAChC,IAEE,aADuBvB,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,kBAAkB2B,IACvDA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,E,+LChNF,QAhRA,WACI,MAAOW,EAAMwD,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,OAC9BG,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,eAEhCK,EAAUC,IAAeN,EAAAA,EAAAA,UAAS,IAEnCO,GAAWC,EAAAA,EAAAA,OAEVC,EAAUC,IAAeV,EAAAA,EAAAA,UAAS,CACrClD,KAAM,GACN6D,YAAa,GACbC,OAAQ,MAGZC,EAAAA,EAAAA,YAAU,KACNC,GAAY,GACb,IAKH,MAAMA,EAAa1E,UACf,MAAMV,QAAiBoC,EAAAA,EAAAA,MACvBd,QAAQC,IAAIvB,GACRA,EAASc,SACTuD,EAAQrE,EAASa,KAEjB,EAoDFwE,EAAgBC,IAClBV,EAAYU,EAAI,EAWdC,EAAU,CACZ,CAAEC,OAAQ,OAAQC,SAAU,QAC5B,CAAED,OAAQ,cAAeC,SAAU,eACnC,CACID,OAAQ,SAAUC,SAAU,SAC5BC,KAAMC,IAAA,IAAC,IAAEC,GAAKD,EAAA,OACVE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAAGH,EAAII,SAAS7F,OAAS,SAAW,YAAc,GAG1D,CACIqF,OAAQ,YAAaC,SAAU,YAC/BC,KAAMO,IAAA,IAAC,IAAEL,GAAKK,EAAA,OACVJ,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAAGH,EAAII,SAASE,UAAYN,EAAII,SAASE,UAAUC,MAAM,EAAG,IAAM,IAAM,GAKhF,CACIX,OAAQ,UACRC,SAAU,MACVC,KAAMU,IAAA,IAAC,IAAER,GAAKQ,EAAA,OACVC,EAAAA,EAAAA,MAAAP,EAAAA,SAAA,CAAAC,SAAA,EACIM,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CACJC,MAAM,UACNC,KAAK,KACLC,MAAO,CAAEF,MAAO,SAChBG,QAASA,IA/BNhG,WACnBY,QAAQC,IAAIF,GACZwD,EAAS,cAAD/E,OAAeuB,GAAK,EA6BGsF,CAAef,EAAII,SAASY,KAAKb,SAAA,EAEhDF,EAAAA,EAAAA,KAACgB,EAAAA,IAAY,IAAG,eACT,KACXR,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CACJC,MAAM,OACNC,KAAK,KACLC,MAAO,CAAEF,MAAO,SAChBG,QAASA,IA7FTrF,KAChBqD,EAAW,gBACX,MAAMoC,EAAgBjG,EAAKkG,MAAMC,GAAQA,EAAIJ,MAAQvF,IACrDC,QAAQC,IAAIuF,GACZtC,EAAUsC,EAAcF,KAExBhC,EAAYkC,EAAc5B,QAC1BF,EAAY,CACR5D,KAAM0F,EAAc1F,KACpB6D,YAAa6B,EAAc7B,YAC3BC,OAAQ4B,EAAc5B,QACxB,EAkF6B+B,CAAWrB,EAAII,SAASY,KAAKb,SAAA,EAE5CF,EAAAA,EAAAA,KAACqB,EAAAA,IAAM,IAAG,WACH,KAEXb,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CACJC,MAAM,SACNC,KAAK,KACLC,MAAO,CAAEF,MAAO,SAChBG,QAASA,IAtFRhG,WAWjB,UAV4ByG,IAAAA,KAAU,CAClCC,MAAO,gBACPC,KAAM,8CACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,OACpBC,kBAAmB,UACnBC,kBAAmB,qBAGLC,YACd,IACI,MAAM3H,QAAiBsC,EAAAA,EAAAA,IAAgBjB,GACnCrB,EAASc,UACT8G,EAAAA,GAAM9G,QAAQd,EAAS6H,QAAS,CAC5BC,SAAUF,EAAAA,GAAMG,SAASC,UACzBC,UAAW,MAEf7C,IAER,CAAE,MAAOlF,GACL0H,EAAAA,GAAM1H,MAAMA,EAAM2H,QAAS,CACvBC,SAAUF,EAAAA,GAAMG,SAASC,UACzBC,UAAW,KAEnB,CACJ,EA2D+BC,CAAatC,EAAII,SAASY,KAAKb,SAAA,EAE9CF,EAAAA,EAAAA,KAACsC,EAAAA,IAAO,IAAG,eAEhB,IA2Hf,OACI9B,EAAAA,EAAAA,MAAAP,EAAAA,SAAA,CAAAC,SAAA,EAEIF,EAAAA,EAAAA,KAACuC,EAAAA,EAAW,CAACC,aA1HAC,KACjB,MAAMC,GAAUC,EAAAA,EAAAA,UAEVC,EAAgBC,IAClB,MAAM,KAAEtH,EAAI,MAAEuH,EAAK,MAAEC,GAAUF,EAAEG,OAEjC7D,GAAa8D,IAAQ,IACdA,EACH,CAAC1H,GAAgB,SAATA,EAAkBwH,EAAM,GAAKD,KACtC,EA4DP,OACItC,EAAAA,EAAAA,MAAC0C,EAAAA,GAAK,CACFC,IAAKT,EACLU,UAAU,2BACVC,YAAU,EACVC,SA7DazI,UACjB0I,EAAMC,iBACND,EAAME,kBACN,MAAMC,EAAOhB,EAAQiB,QAErB,IAA6B,IAAzBD,EAAKE,gBAEL,OADAF,EAAKG,UAAUC,IAAI,iBACK,IAApB5E,EAAS6E,SAAqC,MAApB7E,EAAS6E,aACnCC,mBAAkB,QAGtB,EAGJ,IAAI7J,EAAW,KAWf,GATA+E,EAASG,OAASP,EAClBrD,QAAQC,IAAIwD,GACRR,EACAvE,QAAiBuC,EAAAA,EAAAA,IAAUgC,EAAQQ,IAEnC/E,QAAiBqC,EAAAA,EAAAA,IAAS0C,GAC1BP,EAAU,OAGVxE,EAASc,QAAS,CAClB8G,EAAAA,GAAM9G,QAAQd,EAAS6H,QAAS,CAC5BC,SAAUF,EAAAA,GAAMG,SAASC,UACzBC,UAAW,MAEf7C,IAEAV,EAAW,aACXM,EAAY,CACR5D,KAAM,GACN6D,YAAa,GACbC,OAAQ,KAIZN,EAAY,IAEZ,MAAMkF,EAAeC,SAASC,eAAe,aACzCF,IACAA,EAAanB,MAAQ,IAGzBY,EAAKG,UAAUO,OAAO,gBAC1B,MACIrC,EAAAA,GAAM1H,MAAMF,EAAS6H,QAAS,CAC1BC,SAAUF,EAAAA,GAAMG,SAASC,UACzBC,UAAW,KAEnB,EAQ2BlC,SAAA,EAEvBM,EAAAA,EAAAA,MAAC6D,EAAAA,GAAI,CAACC,GAAI,EAAEpE,SAAA,EACRF,EAAAA,EAAAA,KAACuE,EAAAA,GAAU,CAAArE,SAAC,gBACZF,EAAAA,EAAAA,KAACwE,EAAAA,GAAU,CACPC,KAAK,OACLC,YAAY,mBACZnJ,KAAK,OACLoJ,UAAQ,EACR7B,MAAO5D,EAAS3D,KAChBqJ,SAAUhC,KAEd5C,EAAAA,EAAAA,KAAC6E,EAAAA,GAAa,CAACC,SAAO,EAAA5E,SAAC,gCAE3BM,EAAAA,EAAAA,MAAC6D,EAAAA,GAAI,CAACC,GAAI,EAAEpE,SAAA,EACRF,EAAAA,EAAAA,KAACuE,EAAAA,GAAU,CAAArE,SAAC,iBACZF,EAAAA,EAAAA,KAACwE,EAAAA,GAAU,CACPC,KAAK,OACLlJ,KAAK,cACLmJ,YAAY,oBACZC,UAAQ,EACR7B,MAAO5D,EAASE,YAChBwF,SAAUhC,KAEd5C,EAAAA,EAAAA,KAAC6E,EAAAA,GAAa,CAACC,SAAO,EAAA5E,SAAC,iCAI3BM,EAAAA,EAAAA,MAAC6D,EAAAA,GAAI,CAACC,GAAI,EAAEpE,SAAA,EACRF,EAAAA,EAAAA,KAACuE,EAAAA,GAAU,CAAArE,SAAC,iBACZF,EAAAA,EAAAA,KAAC+E,EAAAA,EAAW,CAACC,SAAUxF,EAAcyF,IAAKnG,KAC1CkB,EAAAA,EAAAA,KAAC6E,EAAAA,GAAa,CAACC,SAAO,EAAA5E,SAAC,2CAK3BF,EAAAA,EAAAA,KAACqE,EAAAA,GAAI,CAACa,GAAI,GAAI9B,UAAU,6BAA4BlD,UAChDF,EAAAA,EAAAA,KAACS,EAAAA,GAAO,CAACC,MAAM,UAAU+D,KAAK,SAAQvE,SACjCtB,QAGL,EAOiC2C,MAAM,kBAE/CvB,EAAAA,EAAAA,KAACmF,EAAAA,EAAS,CAACzF,QAASA,EAAS1E,KAAMA,MAG/C,C,oHCnSA,MAqHA,EArHkB8E,IAA8B,IAA7B,QAAEJ,EAAO,KAAE1E,EAAI,KAAEO,GAAMuE,EACxC,MAAM,cACJsF,EAAa,kBACbC,EAAiB,aACjBC,EAAY,WACZC,EAAU,KACVC,EACAC,OAAO,UAAEC,EAAS,SAAEC,EAAQ,aAAEC,GAAc,gBAC5CC,EAAe,SACfC,EAAQ,SACRC,EAAQ,aACRC,EAAY,YACZC,EAAW,gBACXC,IACEC,EAAAA,EAAAA,UACF,CACEzG,UACA1E,OACAoL,aAAc,CAAEV,UAAW,EAAGC,SAAU,KAE1CU,EAAAA,gBACAC,EAAAA,UACAC,EAAAA,eAiBF,OACE/F,EAAAA,EAAAA,MAAA,OAAK4C,UAAU,uBAAsBlD,SAAA,EACjCF,EAAAA,EAAAA,KAAA,MAAAE,SAAK3E,GAAU,MACjBiF,EAAAA,EAAAA,MAAA,OAAK4C,UAAU,oBAAmBlD,SAAA,EAChCM,EAAAA,EAAAA,MAAA,OAAK4C,UAAU,uBAAsBlD,SAAA,EACnCF,EAAAA,EAAAA,KAACwG,EAAAA,EAAW,CACV/B,KAAK,OACL3B,MAAO8C,GAAgB,GACvBhB,SAAW/B,GAAMgD,EAAgBhD,EAAEG,OAAOF,OAC1C4B,YAAY,eAEd1E,EAAAA,EAAAA,KAAA,QAAMoD,UAAU,cAAalD,SAAC,qBAEhCF,EAAAA,EAAAA,KAACyG,EAAAA,EAAM,CAAC5F,QAASA,IA3BD6F,MACpB,MAAMC,EAAY3L,EAAK4L,KAAK7G,GAC1BL,EAAQmH,QAAO,CAACC,EAAKC,KACnBD,EAAIC,EAAOpH,QAAUI,EAAIgH,EAAOnH,UACzBkH,IACN,CAAC,KAGAE,EAAKC,EAAAA,GAAWC,cAAcP,GAC9BQ,EAAKF,EAAAA,GAAWG,WACtBH,EAAAA,GAAWI,kBAAkBF,EAAIH,EAAI,WACrCC,EAAAA,GAAeE,EAAI,YAAY,EAgBJT,GAAiBY,QAAQ,UAAUlE,UAAU,iBAAiBxC,MAAO,CAAEF,MAAO,SAAUR,SAAC,uBAIlHF,EAAAA,EAAAA,KAAA,OAAKoD,UAAU,gBAAelD,UAC9BM,EAAAA,EAAAA,MAAC+G,EAAAA,EAAK,IAAKnC,IAAiBoC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAAxH,SAAA,EACnDF,EAAAA,EAAAA,KAAA,SAAAE,UACEM,EAAAA,EAAAA,MAAA,MAAAN,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YACHoF,EAAasB,KAAKe,IACjB3H,EAAAA,EAAAA,KAAC4H,EAAAA,SAAc,CAAA1H,SACZyH,EAAYjO,QAAQkN,KAAKG,IACxBvG,EAAAA,EAAAA,MAAA,SAAyBuG,EAAOc,eAAed,EAAOe,wBAAuB5H,SAAA,CAC1E6G,EAAOgB,OAAO,WACf/H,EAAAA,EAAAA,KAAA,QAAAE,SAAO6G,EAAOiB,SAAYjB,EAAOkB,aAAe,gBAAQ,gBAAS,OAF1DlB,EAAOhG,QAFC4G,EAAY5G,aAWvCf,EAAAA,EAAAA,KAAA,YAAWqF,IAAmBnF,SAC3BsF,EAAKoB,KAAI,CAAC7G,EAAKmI,KACd3C,EAAWxF,IAETS,EAAAA,EAAAA,MAAA,SAAsBT,EAAIoI,cAAajI,SAAA,EACrCF,EAAAA,EAAAA,KAAA,MAAAE,SAAKwF,EAAYC,EAAWuC,EAAI,IAC/BnI,EAAIqI,MAAMxB,KAAKyB,IACdrI,EAAAA,EAAAA,KAAA,SAA8BqI,EAAKC,eAAcpI,SAC9CmI,EAAKN,OAAO,SADNM,EAAKtB,OAAOhG,SAHhBhB,EAAIgB,gBAcrBP,EAAAA,EAAAA,MAAA,OAAK4C,UAAU,sBAAqBlD,SAAA,EAClCF,EAAAA,EAAAA,KAAA,UAAQa,QAASA,IAAMiF,EAAS,GAAIyC,UAAWrC,EAAgBhG,SAC5D,QAEHF,EAAAA,EAAAA,KAAA,UAAQa,QAASA,IAAMmF,IAAgBuC,UAAWrC,EAAgBhG,SAC/D,OAEHF,EAAAA,EAAAA,KAAA,UAAQa,QAASA,IAAMkF,IAAYwC,UAAWtC,EAAY/F,SACvD,OAEHF,EAAAA,EAAAA,KAAA,UAAQa,QAASA,IAAMiF,EAASN,EAAKgD,OAAS,GAAID,UAAWtC,EAAY/F,SACtE,QAEHM,EAAAA,EAAAA,MAAA,QAAAN,SAAA,CAAM,aACOF,EAAAA,EAAAA,KAAA,UAAAE,SAASwF,EAAY,IAAW,OAAK+C,KAAKC,KAAK1N,EAAKwN,OAAS7C,GAAU,oBAAkB3K,EAAKwN,OAAO,mBAGhH,C,sEC/GV,MAwBA,EAxBoB1I,IAA8B,IAA7B,aAAE0C,EAAY,MAAEjB,GAAOzB,EAC1C,OACEE,EAAAA,EAAAA,KAAC2I,EAAAA,GAAI,CAAAzI,UACHF,EAAAA,EAAAA,KAACqE,EAAAA,GAAI,CAACa,GAAI,GAAGhF,UACXM,EAAAA,EAAAA,MAACoI,EAAAA,GAAK,CAACxF,UAAU,OAAMlD,SAAA,EACrBF,EAAAA,EAAAA,KAAC6I,EAAAA,GAAW,CAAA3I,UACVF,EAAAA,EAAAA,KAAA,UAAAE,SAASqB,OAEXvB,EAAAA,EAAAA,KAAC8I,EAAAA,GAAS,CAAA5I,SAEPsC,EAAeA,IAAiB,aAIlC,C,kHCNX,MAmEA,EAnEoB1C,IAAwB,IAAvB,SAAEkF,EAAQ,IAAEC,GAAKnF,EAClC,MAAOiJ,EAAOC,IAAYvK,EAAAA,EAAAA,UAASwG,IAEnC3F,EAAAA,EAAAA,YAAU,KACN0J,EAAS/D,EAAI,GACd,CAACA,IA6CJ,OACIzE,EAAAA,EAAAA,MAAA,OAAAN,SAAA,EAGIF,EAAAA,EAAAA,KAACwE,EAAAA,GAAU,CAACC,KAAK,OAAOjJ,GAAG,YAAY,aAAW,eAAeyN,OAAO,UAAUrE,SA/CrE/J,UACjB,MAAMqO,EAAOrG,EAAEG,OAAOD,MAAM,GACtB7D,EAAW,IAAIiK,SACrBjK,EAASkK,OAAO,OAAQF,GACxBhK,EAASkK,OAAO,gBAAiB,qBAEjC,MAAMjP,QAAiBkP,MAAM,yDAEzB,CACIC,OAAQ,OACRC,KAAMrK,IAIRlE,QAAab,EAASqP,OAC5BR,EAAShO,EAAKyO,YACdzE,EAAShK,EAAKyO,WAAW,IAgCpBV,IACG/I,EAAAA,EAAAA,KAAA,OAAAE,UACIM,EAAAA,EAAAA,MAAA,OAAKI,MAAO,CAAE8I,MAAO,QAASC,OAAQ,QAAS1H,SAAU,WAAY2H,OAAQ,QAAS1J,SAAA,EAClFF,EAAAA,EAAAA,KAAC6J,EAAAA,GAAK,CAACC,UAAU,YAAYC,SAAUhB,EAAOW,MAAM,MAAMC,OAAO,SACjE3J,EAAAA,EAAAA,KAACgK,EAAAA,IAAO,CAACnJ,QAjCThG,UAWhB,UAV4ByG,IAAAA,KAAU,CAClCC,MAAO,gBACPC,KAAM,8CACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,OACpBC,kBAAmB,UACnBC,kBAAmB,qBAGLC,YAAa,CAC3BkH,EAAS,IACThE,EAAS,IACT,MAAMf,EAAeC,SAASC,eAAe,aACzCF,IACAA,EAAanB,MAAQ,GAE7B,GAe+ClC,MAAO,CAAEqB,SAAU,WAAYgI,IAAK,MAAOC,MAAO,MAAOC,OAAQ,oBAI1G,C","sources":["utility/api.js","views/levels/Levels.js","views/ownComponent/DataTable.js","views/ownComponent/FormsCustom.js","views/ownComponent/UploadImage.js"],"sourcesContent":["import axios from 'axios'\nimport Cookies from 'js-cookie'\n\n// const BASE_URL = 'http://localhost:5000'\nconst BASE_URL = 'http://66.179.250.128:5000'\n\n\nexport const axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n})\n\n// Add the token to the headers if it exists in cookies\nconst setAuthorizationHeader = () => {\n  const bearerToken = Cookies.get('accessToken')\n  if (bearerToken) {\n    axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${bearerToken}`\n  }\n}\n\n// Call this function to set the Authorization header\nsetAuthorizationHeader()\n\n// Add a response interceptor\naxiosInstance.interceptors.response.use(\n  response => response,\n  error => {\n    if (error.response && error.response.status === 401) {\n      window.location.href = '/admin-login'\n    }\n    return Promise.reject(error);\n  }\n);\n\n\n// --------loginUser-----------//\nexport const loginUser = async (userData) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/admin/login`, userData)\n    if (response.data.success) {\n      // set token\n      const accessToken = response.data.data.token\n      // set the access token in cookie\n      Cookies.set('accessToken', accessToken, { secure: true, sameSite: 'strict' })\n\n      // set token\n      const name = response.data.data.name\n      // set the access token in cookie\n      Cookies.set('name', name, { secure: true, sameSite: 'strict' })\n\n      const id = response.data.data.id\n      Cookies.set('adminId', id, { secure: true, sameSite: 'strict' })\n\n      setAuthorizationHeader();\n    }\n    return response.data\n  } catch (error) {\n    console.log(\"error\", error)\n    throw error\n  }\n}\n\n// --------renderOrganizationData-----------//\nexport const renderOrganizationData = async () => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/organization`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------renderOrganizationById-----------//\nexport const renderOrganizationById = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/organization/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addOrganization-----------//\nexport const addOrganization = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/organization`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteOrganizationData--------\nexport const deleteOrganizationData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/organization/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editOrganization---------//\nexport const editOrganization = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/organization/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n// renderTeacherData\nexport const renderTeacherData = async () => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/teacher`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// renderTeacherByOrganization\nexport const renderTeacherByOrganization = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/teacher/by-organization/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addTeacher-----------//\nexport const addTeacher = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/teacher`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteTeacherData--------\nexport const deleteTeacherData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/teacher/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editOrganization---------//\nexport const editTeacher = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/teacher/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n\n// --------renderLevelData-----------//\nexport const renderLevelData = async () => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/levels`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addLevel-----------//\nexport const addLevel = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/levels`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteLevelData--------\nexport const deleteLevelData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/levels/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editLevel---------//\nexport const editLevel = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/levels/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n\n\n// --------renderQuestionData-----------//\nexport const renderQuestionData = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/question/by_level/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addQuestion-----------//\nexport const addQuestion = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/question`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteQuestionData--------\nexport const deleteQuestionData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/question/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editQuestion---------//\nexport const editQuestion = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/question/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n\n// --------renderStudentData-----------//\nexport const renderStudentData = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/student`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------renderStudentDataByOrganization-----------//\nexport const renderStudentDataByOrganization = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/student/organization/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addStudent-----------//\nexport const addStudent = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/student`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteStudentData--------\nexport const deleteStudentData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/student/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editQuestion---------//\nexport const editStudent = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/student/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n\n// --------renderExamData-----------//\nexport const renderExamData = async () => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderExamDataById\nexport const renderExamDataById = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderStudentExamData\nexport const renderStudentExamData = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/get-exam-student-by-exam-id/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//removedStudentExamData\nexport const removedStudentExamData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/exam/removed-student-from-exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//removedStudentExamData\nexport const removedQuestionExamData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/exam/removed-question-from-exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n// -------addExam-----------//\nexport const addExam = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteExamData--------\nexport const deleteExamData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editExam---------//\nexport const editExam = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/exam/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------renderExamDataByOrganization-----------//\nexport const renderExamDataByOrganization = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/by-organization-id/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderExamDataByOrganizationForAdmin\nexport const renderExamDataByOrganizationForAdmin = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/by-organization-id-for-admin/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------renderExamQuestionData-----------//\nexport const renderExamQuestionData = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/get-exam-qestion-by-exam-id/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n//addStudentToExam\nexport const addStudentToExam = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/add-exam-student`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderNotExitStudent\nexport const renderNotExitStudent = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/organization-student-not-exit`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderNotExitStudent\nexport const renderNotExitQuestion= async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/question-not-exit`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//addStudentToExam\nexport const addQuestionToExam = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/add-exam-question`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------scheduleExam-----------//\nexport const scheduleExam = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/schedule-exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------renderStudentExamById------//\nexport const renderStudentExamById = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam-submission/by-examination-id/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// updateStudentCertificate\nexport const updateStudentCertificate = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/update-student-certificate`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// updateGenerateCertificate\nexport const updateGenerateCertificate = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/update-student-certificate-generate/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n// updateDataForDashboard\nexport const renderDataForDashboard = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/recent/dashboard`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//UpdateExamData\nexport const uploadBulkQuestion = async ( data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/question/bulk`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}","import React, { useState, useEffect, useRef } from \"react\";\nimport { FaEdit, FaTrash, FaPlusCircle } from \"react-icons/fa\";\nimport {\n    CButton,\n    CCol,\n    CForm,\n    CFormInput,\n    CFormFeedback,\n    CFormLabel,\n    CFormSelect,\n} from \"@coreui/react\";\nimport DataTable from \"../ownComponent/DataTable\";\nimport FormsCustom from \"../ownComponent/FormsCustom\";\nimport {\n\n    renderLevelData,\n    addLevel,\n    deleteLevelData,\n    editLevel,\n} from \"src/utility/api\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport PropTypes from \"prop-types\";\nimport Swal from \"sweetalert2\";\nimport { useNavigate } from 'react-router-dom'\nimport UploadImage from \"../ownComponent/UploadImage\";\n\n\n\n\nfunction Levels() {\n    const [data, setData] = useState([]);\n    const [editId, setEditId] = useState(null);\n    const [btnText, setBtnText] = useState(\"Add Levels\");\n    //imgUpload\n    const [imageUrl, setImageUrl] = useState('');\n\n    const navigate = useNavigate()\n\n    const [formData, setFormData] = useState({\n        name: \"\",\n        description: \"\",\n        imgUrl: \"\",\n    });\n\n    useEffect(() => {\n        renderData();\n    }, []);\n\n\n\n    // render data\n    const renderData = async () => {\n        const response = await renderLevelData();\n        console.log(response);\n        if (response.success) {\n            setData(response.data);\n        } else {\n            // Handle error if needed\n        }\n    };\n\n    //edit organization\n    const handleEdit = (id) => {\n        setBtnText(\"Update Level\");\n        const LevelToUpdate = data.find((org) => org._id === id);\n        console.log(LevelToUpdate)\n        setEditId(LevelToUpdate._id);\n        //imgUpload\n        setImageUrl(LevelToUpdate.imgUrl)\n        setFormData({\n            name: LevelToUpdate.name,\n            description: LevelToUpdate.description,\n            imgUrl: LevelToUpdate.imgUrl,\n        });\n    };\n\n\n    // Delete organization\n    const handleDelete = async (id) => {\n        const confirmDelete = await Swal.fire({\n            title: \"Are you sure?\",\n            text: \"You will not be able to recover this level!\",\n            icon: \"warning\",\n            showCancelButton: true,\n            confirmButtonColor: \"#d33\",\n            cancelButtonColor: \"#3085d6\",\n            confirmButtonText: \"Yes, delete it!\",\n        });\n\n        if (confirmDelete.isConfirmed) {\n            try {\n                const response = await deleteLevelData(id);\n                if (response.success) {\n                    toast.success(response.message, {\n                        position: toast.POSITION.TOP_RIGHT,\n                        autoClose: 3000,\n                    });\n                    renderData();\n                }\n            } catch (error) {\n                toast.error(error.message, {\n                    position: toast.POSITION.TOP_RIGHT,\n                    autoClose: 3000,\n                });\n            }\n        }\n    };\n\n    //imgUpload\n    const handleUpload = (url) => {\n        setImageUrl(url);\n    };\n\n\n\n    //handleQuestion\n    const handleQuestion = async (id) => {\n        console.log(id)\n        navigate(`/questions/${id}`);\n    }\n\n    const columns = [\n        { Header: \"Name\", accessor: \"name\" },\n        { Header: \"Description\", accessor: \"description\" },\n        {\n            Header: \"Status\", accessor: \"status\",\n            Cell: ({ row }) => (\n                <>{row.original.status ? \"Active\" : \"Inactive\"}</>\n            ),\n        },\n        {\n            Header: \"createdAt\", accessor: \"createdAt\",\n            Cell: ({ row }) => (\n                <>{row.original.createdAt ? row.original.createdAt.slice(0, 10) : \"\"}</>\n            ),\n        },\n\n\n        {\n            Header: \"Actions\",\n            accessor: \"_id\", // Assuming you have an 'id' property in your organization data\n            Cell: ({ row }) => (\n                <>\n                    <CButton\n                        color=\"success\"\n                        size=\"sm\"\n                        style={{ color: \"white\" }}\n                        onClick={() => handleQuestion(row.original._id)}\n                    >\n                        <FaPlusCircle /> Question\n                    </CButton>{\" \"}\n                    <CButton\n                        color=\"info\"\n                        size=\"sm\"\n                        style={{ color: \"white\" }}\n                        onClick={() => handleEdit(row.original._id)}\n                    >\n                        <FaEdit /> Edit\n                    </CButton>{\" \"}\n\n                    <CButton\n                        color=\"danger\"\n                        size=\"sm\"\n                        style={{ color: \"white\" }}\n                        onClick={() => handleDelete(row.original._id)}\n                    >\n                        <FaTrash /> Delete\n                    </CButton>\n                </>\n            ),\n        },\n    ];\n    const CustomStyles = () => {\n        const formRef = useRef();\n\n        const handleChange = (e) => {\n            const { name, value, files } = e.target;\n\n            setFormData((prevData) => ({\n                ...prevData,\n                [name]: name === \"file\" ? files[0] : value,\n            }));\n        };\n\n\n        const handleSubmit = async (event) => {\n            event.preventDefault();\n            event.stopPropagation();\n            const form = formRef.current;\n\n            if (form.checkValidity() === false) {\n                form.classList.add(\"was-validated\");\n                if (formData.is_type == \"\" || formData.is_type == null) {\n                    setIsTypeSelected(true);\n                    return;\n                }\n                return;\n            }\n\n            let response = null;\n            // imgUpload\n            formData.imgUrl = imageUrl\n            console.log(formData);\n            if (editId) {\n                response = await editLevel(editId, formData);\n            } else {\n                response = await addLevel(formData);\n                setEditId(null);\n            }\n\n            if (response.success) {\n                toast.success(response.message, {\n                    position: toast.POSITION.TOP_RIGHT,\n                    autoClose: 3000,\n                });\n                renderData();\n\n                setBtnText(\"Add Level\");\n                setFormData({\n                    name: \"\",\n                    description: \"\",\n                    imgUrl: \"\",\n                });\n\n                //imgUpload\n                setImageUrl('');\n                // Reset file input\n                const inputElement = document.getElementById('fileInput');\n                if (inputElement) {\n                    inputElement.value = '';\n                }\n\n                form.classList.remove(\"was-validated\");\n            } else {\n                toast.error(response.message, {\n                    position: toast.POSITION.TOP_RIGHT,\n                    autoClose: 3000,\n                });\n            }\n        };\n\n        return (\n            <CForm\n                ref={formRef}\n                className=\"row g-3 needs-validation\"\n                noValidate\n                onSubmit={handleSubmit}\n            >\n                <CCol md={4}>\n                    <CFormLabel>Level Name</CFormLabel>\n                    <CFormInput\n                        type=\"text\"\n                        placeholder=\"Enter Level Name\"\n                        name=\"name\"\n                        required\n                        value={formData.name}\n                        onChange={handleChange}\n                    />\n                    <CFormFeedback invalid>Please enter level name</CFormFeedback>\n                </CCol>\n                <CCol md={4}>\n                    <CFormLabel>Description</CFormLabel>\n                    <CFormInput\n                        type=\"text\"\n                        name=\"description\"\n                        placeholder=\"Enter description\"\n                        required\n                        value={formData.description}\n                        onChange={handleChange}\n                    />\n                    <CFormFeedback invalid>Please enter description</CFormFeedback>\n                </CCol>\n\n                {/* imgUpload */}\n                <CCol md={4}>\n                    <CFormLabel> Level Logo</CFormLabel>\n                    <UploadImage onUpload={handleUpload} img={imageUrl} />\n                    <CFormFeedback invalid>\n                        Example invalid form file feedback\n                    </CFormFeedback>\n\n                </CCol>\n                <CCol xs={12} className=\"d-flex justify-content-end\">\n                    <CButton color=\"primary\" type=\"submit\">\n                        {btnText}\n                    </CButton>\n                </CCol>\n            </CForm>\n        );\n    };\n\n    return (\n        <>\n\n            <FormsCustom customStyles={CustomStyles} title=\"Level Master\" />\n\n            <DataTable columns={columns} data={data} />\n        </>\n    );\n}\n\nexport default Levels;\n\nLevels.propTypes = {\n    row: PropTypes.shape({\n        original: PropTypes.shape({\n            _id: PropTypes.number.isRequired,\n        }),\n    }),\n};\n","// DataTable.js\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { useTable, usePagination, useSortBy, useGlobalFilter } from 'react-table'\nimport { Table, FormControl, Button } from 'react-bootstrap'\n// import { useState } from 'react'\nimport * as XLSX from 'xlsx'\nimport './DataTable.css' // Import the CSS file\n\nconst DataTable = ({ columns, data, name }) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    state: { pageIndex, pageSize, globalFilter },\n    setGlobalFilter,\n    gotoPage,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0, pageSize: 10 }, // Set initial pageSize to tablePageSize\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n  )\n\n  const downloadExcel = () => {\n    const excelData = data.map((row) =>\n      columns.reduce((acc, column) => {\n        acc[column.Header] = row[column.accessor]\n        return acc\n      }, {}),\n    )\n\n    const ws = XLSX.utils.json_to_sheet(excelData)\n    const wb = XLSX.utils.book_new()\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet 1')\n    XLSX.writeFile(wb, 'data.xlsx')\n  }\n\n  return (\n    <div className=\"data-table-container\">\n        <h5>{name?name:\"\"}</h5>\n      <div className=\"data-table-header\">\n        <div className=\"search-box-container\">\n          <FormControl\n            type=\"text\"\n            value={globalFilter || ''}\n            onChange={(e) => setGlobalFilter(e.target.value)}\n            placeholder=\"Search...\"\n          />\n          <span className=\"search-icon\">&#x1F50D;</span>\n        </div>\n        <Button onClick={() => downloadExcel()} variant=\"success\" className='download_excel' style={{ color: 'white' }}>\n          Download Excel\n        </Button>\n      </div>\n      <div className=\"table-wrapper\">\n      <Table {...getTableProps()} bordered hover responsive>\n        <thead>\n          <tr>\n            <th>Sr. No.</th>\n            {headerGroups.map((headerGroup) => (\n              <React.Fragment key={headerGroup._id}>\n                {headerGroup.headers.map((column) => (\n                  <th key={column._id} {...column.getHeaderProps(column.getSortByToggleProps())}>\n                    {column.render('Header')}\n                    <span>{column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}</span>\n                  </th>\n                ))}\n              </React.Fragment>\n            ))}\n          </tr>\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr key={row._id} {...row.getRowProps()}>\n                <td>{pageIndex * pageSize + i + 1}</td>\n                {row.cells.map((cell) => (\n                  <td key={cell.column._id} {...cell.getCellProps()}>\n                    {cell.render('Cell')}\n                  </td>\n                ))}\n              </tr>\n            )\n          })}\n        </tbody>\n      </Table>\n      </div>\n     \n      <div className=\"pagination-controls\">\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {'<<'}\n        </button>\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n          {'<'}\n        </button>\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n          {'>'}\n        </button>\n        <button onClick={() => gotoPage(page.length - 1)} disabled={!canNextPage}>\n          {'>>'}\n        </button>\n        <span>\n          &nbsp;Page <strong>{pageIndex + 1}</strong> of {Math.ceil(data.length / pageSize)} pages | Showing {data.length} Records\n        </span>\n      </div>\n    </div>\n  )\n}\n\nDataTable.propTypes = {\n  columns: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n}\n\nexport default DataTable","// FormsCustom.js\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { CCard, CCardBody, CCardHeader, CCol, CRow } from '@coreui/react'\n\nconst FormsCustom = ({ customStyles, title }) => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>{title}</strong>\n          </CCardHeader>\n          <CCardBody>\n            {/* Call the customStyles function if it's provided */}\n            {customStyles ? customStyles() : null}\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\n// Add prop validation\nFormsCustom.propTypes = {\n  customStyles: PropTypes.func, // Ensure customStyles is a function\n  title: PropTypes.func, // Ensure customStyles is a function\n}\n\nexport default FormsCustom\n","import React, { useState,useEffect } from 'react';\nimport { Image } from 'cloudinary-react';\nimport { FaTimes } from 'react-icons/fa';\nimport {\n    CButton,\n    CCol,\n    CForm,\n    CFormInput,\n    CFormFeedback,\n    CFormLabel,\n    CFormSelect,\n} from \"@coreui/react\";\nimport Swal from \"sweetalert2\";\n\nconst UploadImage = ({ onUpload, img }) => {\n    const [image, setImage] = useState(img);\n\n    useEffect(() => {\n        setImage(img);\n    }, [img]);\n\n    const handleUpload = async (e) => {\n        const file = e.target.files[0];\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('upload_preset', 'school_management');\n\n        const response = await fetch(\n            `https://api.cloudinary.com/v1_1/dqdnj2szc/image/upload`,\n            {\n                method: 'POST',\n                body: formData,\n            }\n        );\n\n        const data = await response.json();\n        setImage(data.secure_url);\n        onUpload(data.secure_url);\n    };\n\n    const removeImage = async () => {\n        const confirmDelete = await Swal.fire({\n            title: \"Are you sure?\",\n            text: \"You will not be able to recover this image!\",\n            icon: \"warning\",\n            showCancelButton: true,\n            confirmButtonColor: \"#d33\",\n            cancelButtonColor: \"#3085d6\",\n            confirmButtonText: \"Yes, delete it!\",\n        });\n\n        if (confirmDelete.isConfirmed) {\n            setImage('');\n            onUpload(\"\");\n            const inputElement = document.getElementById('fileInput');\n            if (inputElement) {\n                inputElement.value = '';\n            }\n        }\n\n\n        // onImageChange('')\n    };\n\n    return (\n        <div>\n            {/* <input type=\"file\" onChange={handleUpload} />\n       */}\n            <CFormInput type=\"file\" id=\"fileInput\" aria-label=\"file example\" accept=\"image/*\" onChange={handleUpload} />\n            {image && (\n                <div>\n                    <div style={{ width: '100px', height: '100px', position: 'relative', margin: \"10px\" }}>\n                        <Image cloudName=\"dqdnj2szc\" publicId={image} width=\"100\" height=\"100\" />\n                        <FaTimes onClick={removeImage} style={{ position: 'absolute', top: '5px', right: '5px', cursor: 'pointer' }} />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default UploadImage;\n"],"names":["BASE_URL","axiosInstance","axios","create","baseURL","headers","setAuthorizationHeader","bearerToken","Cookies","get","defaults","common","concat","interceptors","response","use","error","status","window","location","href","Promise","reject","loginUser","async","post","userData","data","success","accessToken","token","set","secure","sameSite","name","id","console","log","renderOrganizationData","renderOrganizationById","addOrganization","deleteOrganizationData","delete","editOrganization","patch","renderTeacherData","renderTeacherByOrganization","addTeacher","deleteTeacherData","editTeacher","renderLevelData","addLevel","deleteLevelData","editLevel","renderQuestionData","addQuestion","deleteQuestionData","editQuestion","renderStudentData","renderStudentDataByOrganization","addStudent","deleteStudentData","editStudent","renderExamData","renderExamDataById","renderStudentExamData","removedStudentExamData","removedQuestionExamData","addExam","deleteExamData","editExam","renderExamDataByOrganizationForAdmin","renderExamQuestionData","addStudentToExam","renderNotExitStudent","renderNotExitQuestion","addQuestionToExam","scheduleExam","renderStudentExamById","updateStudentCertificate","updateGenerateCertificate","renderDataForDashboard","uploadBulkQuestion","setData","useState","editId","setEditId","btnText","setBtnText","imageUrl","setImageUrl","navigate","useNavigate","formData","setFormData","description","imgUrl","useEffect","renderData","handleUpload","url","columns","Header","accessor","Cell","_ref","row","_jsx","_Fragment","children","original","_ref2","createdAt","slice","_ref3","_jsxs","CButton","color","size","style","onClick","handleQuestion","_id","FaPlusCircle","LevelToUpdate","find","org","handleEdit","FaEdit","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","toast","message","position","POSITION","TOP_RIGHT","autoClose","handleDelete","FaTrash","FormsCustom","customStyles","CustomStyles","formRef","useRef","handleChange","e","value","files","target","prevData","CForm","ref","className","noValidate","onSubmit","event","preventDefault","stopPropagation","form","current","checkValidity","classList","add","is_type","setIsTypeSelected","inputElement","document","getElementById","remove","CCol","md","CFormLabel","CFormInput","type","placeholder","required","onChange","CFormFeedback","invalid","UploadImage","onUpload","img","xs","DataTable","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","state","pageIndex","pageSize","globalFilter","setGlobalFilter","gotoPage","nextPage","previousPage","canNextPage","canPreviousPage","useTable","initialState","useGlobalFilter","useSortBy","usePagination","FormControl","Button","downloadExcel","excelData","map","reduce","acc","column","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","variant","Table","bordered","hover","responsive","headerGroup","React","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","i","getRowProps","cells","cell","getCellProps","disabled","length","Math","ceil","CRow","CCard","CCardHeader","CCardBody","image","setImage","accept","file","FormData","append","fetch","method","body","json","secure_url","width","height","margin","Image","cloudName","publicId","FaTimes","top","right","cursor"],"sourceRoot":""}