{"version":3,"file":"static/js/864.817fb85e.chunk.js","mappings":"ulBAIA,MAAMA,EAAW,6BAGJC,EAAgBC,EAAAA,EAAMC,OAAO,CACxCC,QAASJ,EACTK,QAAS,CACP,eAAgB,sBAKdC,EAAyBA,KAC7B,MAAMC,EAAcC,EAAAA,EAAQC,IAAI,eAC5BF,IACFN,EAAcS,SAASL,QAAQM,OAAsB,cAAC,UAAAC,OAAaL,GACrE,EAIFD,IAGAL,EAAcY,aAAaC,SAASC,KAClCD,GAAYA,IACZE,IACMA,EAAMF,UAAsC,MAA1BE,EAAMF,SAASG,SACnCC,OAAOC,SAASC,KAAO,gBAElBC,QAAQC,OAAON,MAMnB,MAAMO,EAAYC,UACvB,IACE,MAAMV,QAAiBb,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,gBAAgB0B,GACrE,GAAIZ,EAASa,KAAKC,QAAS,CAEzB,MAAMC,EAAcf,EAASa,KAAKA,KAAKG,MAEvCtB,EAAAA,EAAQuB,IAAI,cAAeF,EAAa,CAAEG,QAAQ,EAAMC,SAAU,WAGlE,MAAMC,EAAOpB,EAASa,KAAKA,KAAKO,KAEhC1B,EAAAA,EAAQuB,IAAI,OAAQG,EAAM,CAAEF,QAAQ,EAAMC,SAAU,WAEpD,MAAME,EAAKrB,EAASa,KAAKA,KAAKQ,GAC9B3B,EAAAA,EAAQuB,IAAI,UAAWI,EAAI,CAAEH,QAAQ,EAAMC,SAAU,WAErD3B,GACF,CACA,OAAOQ,EAASa,IAClB,CAAE,MAAOX,GAEP,MADAoB,QAAQC,IAAI,QAASrB,GACfA,CACR,GAIWsB,EAAyBd,UACpC,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,mBACpC2B,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWuB,EAAyBf,UACpC,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,kBAAAY,OAAiBuB,KACrDR,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWwB,EAAkBhB,UAC7B,IAEE,aADuBvB,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,iBAAiB2B,IACtDA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWyB,EAAyBjB,UACpC,IAEE,aADuBvB,EAAcyC,OAAO,GAAD9B,OAAIZ,EAAQ,kBAAAY,OAAiBuB,KACxDR,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW2B,EAAmBnB,MAAOW,EAAIR,KACzC,IAEE,aADuB1B,EAAc2C,MAAM,GAADhC,OAAIZ,EAAQ,kBAAAY,OAAiBuB,GAAMR,IAC7DA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAKW6B,EAAoBrB,UAC/B,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,cACpC2B,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW8B,EAA8BtB,UACzC,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,6BAAAY,OAA4BuB,KAChER,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW+B,EAAavB,UACxB,IAEE,aADuBvB,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,YAAY2B,IACjDA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWgC,EAAoBxB,UAC/B,IAEE,aADuBvB,EAAcyC,OAAO,GAAD9B,OAAIZ,EAAQ,aAAAY,OAAYuB,KACnDR,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWiC,EAAczB,MAAOW,EAAIR,KACpC,IAEE,aADuB1B,EAAc2C,MAAM,GAADhC,OAAIZ,EAAQ,aAAAY,OAAYuB,GAAMR,IACxDA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAMWkC,EAAkB1B,UAC7B,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,aACpC2B,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWmC,EAAW3B,UACtB,IAEE,aADuBvB,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,WAAW2B,IAChDA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWoC,EAAkB5B,UAC7B,IAEE,aADuBvB,EAAcyC,OAAO,GAAD9B,OAAIZ,EAAQ,YAAAY,OAAWuB,KAClDR,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWqC,EAAY7B,MAAOW,EAAIR,KAClC,IAEE,aADuB1B,EAAc2C,MAAM,GAADhC,OAAIZ,EAAQ,YAAAY,OAAWuB,GAAMR,IACvDA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAOWsC,EAAqB9B,UAChC,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,uBAAAY,OAAsBuB,KAC1DR,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWuC,EAAc/B,UACzB,IAEE,aADuBvB,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,aAAa2B,IAClDA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWwC,EAAqBhC,UAChC,IAEE,aADuBvB,EAAcyC,OAAO,GAAD9B,OAAIZ,EAAQ,cAAAY,OAAauB,KACpDR,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWyC,EAAejC,MAAOW,EAAIR,KACrC,IAEE,aADuB1B,EAAc2C,MAAM,GAADhC,OAAIZ,EAAQ,cAAAY,OAAauB,GAAMR,IACzDA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAMW0C,EAAoBlC,UAC/B,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,cACpC2B,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW2C,EAAkCnC,UAC7C,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,0BAAAY,OAAyBuB,KAC7DR,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW4C,EAAapC,UACxB,IAEE,aADuBvB,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,YAAY2B,IACjDA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW6C,EAAoBrC,UAC/B,IAEE,aADuBvB,EAAcyC,OAAO,GAAD9B,OAAIZ,EAAQ,aAAAY,OAAYuB,KACnDR,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW8C,EAActC,MAAOW,EAAIR,KACpC,IAEE,aADuB1B,EAAc2C,MAAM,GAADhC,OAAIZ,EAAQ,aAAAY,OAAYuB,GAAMR,IACxDA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAMW+C,EAAiBvC,UAC5B,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,WACpC2B,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWgD,EAAqBxC,UAChC,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,UAAAY,OAASuB,KAC7CR,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWiD,EAAwBzC,UACnC,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,sCAAAY,OAAqCuB,KACzER,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWkD,EAAyB1C,UACpC,IAEE,aADuBvB,EAAcyC,OAAO,GAAD9B,OAAIZ,EAAQ,oCAAAY,OAAmCuB,KAC1ER,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWmD,EAA0B3C,UACrC,IAEE,aADuBvB,EAAcyC,OAAO,GAAD9B,OAAIZ,EAAQ,qCAAAY,OAAoCuB,KAC3ER,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAKWoD,EAAU5C,UACrB,IAEE,aADuBvB,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,SAAS2B,IAC9CA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWqD,EAAiB7C,UAC5B,IAEE,aADuBvB,EAAcyC,OAAO,GAAD9B,OAAIZ,EAAQ,UAAAY,OAASuB,KAChDR,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWsD,EAAW9C,MAAOW,EAAIR,KACjC,IAEE,aADuB1B,EAAc2C,MAAM,GAADhC,OAAIZ,EAAQ,UAAAY,OAASuB,GAAMR,IACrDA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAcWuD,EAAuC/C,UAClD,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,uCAAAY,OAAsCuB,KAC1ER,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWwD,EAAyBhD,UACpC,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,sCAAAY,OAAqCuB,KACzER,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAGWyD,EAAmBjD,UAC9B,IAEE,aADuBvB,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,0BAA0B2B,IAC/DA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW0D,EAAuBlD,UAClC,IAEE,aADuBvB,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,uCAAuC2B,IAC5EA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW2D,EAAuBnD,UAClC,IAEE,aADuBvB,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,2BAA2B2B,IAChEA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW4D,EAAoBpD,UAC/B,IAEE,aADuBvB,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,2BAA2B2B,IAChEA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW6D,EAAerD,UAC1B,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,wBAAAY,OAAuBuB,KAC3DR,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW8D,EAAwBtD,UACnC,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,uCAAAY,OAAsCuB,KAC1ER,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIW+D,EAA2BvD,UACtC,IAEE,aADuBvB,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,oCAAoC2B,IACzEA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWgE,EAA4BxD,UACvC,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,8CAAAY,OAA6CuB,KACjFR,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAGWiE,EAAyBzD,UACpC,IAEE,aADuBvB,EAAcQ,IAAI,GAADG,OAAIZ,EAAQ,4BACpC2B,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,GAIWkE,EAAqB1D,UAChC,IAEE,aADuBvB,EAAcwB,KAAK,GAADb,OAAIZ,EAAQ,kBAAkB2B,IACvDA,IAClB,CAAE,MAAOX,GACP,MAAMA,CACR,E,yNCxeF,MA6FA,EA7FoBmE,IAAU,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACzBxD,QAAQC,IAAI,OAAQ8C,GACpB,MAAMU,EAAeC,IAEjB,MAAMC,EAAgB,IAAIC,KAAKF,GAAMG,mBAAmB,QAAS,CAC7DC,IAAK,UACLC,MAAO,QACPC,KAAM,YAIJC,EAAgB,IAAIL,KAAKF,GAAMQ,mBAAmB,QAAS,CAC7DC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAGZ,MAAM,GAAN7F,OAAUmF,EAAa,KAAAnF,OAAIyF,EAAa,EAE5C,OACIK,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAAAC,UACDC,EAAAA,EAAAA,MAACC,EAAAA,GAAU,CAACC,UAAU,OAAMH,SAAA,EACxBF,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAI,EAAIF,UAAU,eAAcH,UAClCF,EAAAA,EAAAA,KAACQ,EAAAA,GAAa,CACVC,MAAMT,EAAAA,EAAAA,KAACU,EAAAA,EAAK,CAACD,KAAME,EAAAA,EAAWC,OAAQ,KACtCC,MAAmB,QAAdnC,EAAED,EAAKxD,KAAK,UAAE,IAAAyD,OAAA,EAAZA,EAAcoC,UACrBC,MAAM,iBAKdf,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAI,EAAGF,UAAU,eAAcH,UACjCF,EAAAA,EAAAA,KAACQ,EAAAA,GAAa,CACVC,MAAMT,EAAAA,EAAAA,KAACU,EAAAA,EAAK,CAACD,KAAMO,EAAAA,EAAeJ,OAAQ,KAC1CC,MAAmB,QAAdlC,EAAEF,EAAKxD,KAAK,UAAE,IAAA0D,OAAA,EAAZA,EAAcsC,gBAAgBzF,KACrCuF,MAAM,4BAIdf,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAI,EAAGF,UAAU,eAAcH,UACjCF,EAAAA,EAAAA,KAACQ,EAAAA,GAAa,CACVC,MAAMT,EAAAA,EAAAA,KAACU,EAAAA,EAAK,CAACD,KAAMS,EAAAA,EAAWN,OAAQ,KACtCC,MAAmB,QAAdjC,EAAEH,EAAKxD,KAAK,UAAE,IAAA2D,OAAA,EAAZA,EAAcuC,SAAS3F,KAC9BuF,MAAM,qBAIdf,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAI,EAAGF,UAAU,eAAcH,UACjCF,EAAAA,EAAAA,KAACQ,EAAAA,GAAa,CACVC,MAAMT,EAAAA,EAAAA,KAACU,EAAAA,EAAK,CAACD,KAAMW,EAAAA,EAAaR,OAAQ,KACxCC,MAAmB,QAAdhC,EAAEJ,EAAKxD,KAAK,UAAE,IAAA4D,OAAA,EAAZA,EAAcwC,WAAW7F,KAChCuF,MAAM,6BAIdf,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAI,EAAGF,UAAU,eAAcH,UACjCF,EAAAA,EAAAA,KAACQ,EAAAA,GAAa,CACVC,MAAMT,EAAAA,EAAAA,KAACU,EAAAA,EAAK,CAACD,KAAMa,EAAAA,EAAUV,OAAQ,KACrCC,MAAO1B,EAAwB,QAAbL,EAACL,EAAKxD,KAAK,UAAE,IAAA6D,OAAA,EAAZA,EAAcyC,cACjCR,MAAM,2BAIdf,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAI,EAAGF,UAAU,eAAcH,UACjCF,EAAAA,EAAAA,KAACQ,EAAAA,GAAa,CACVC,MAAMT,EAAAA,EAAAA,KAACU,EAAAA,EAAK,CAACD,KAAMa,EAAAA,EAAUV,OAAQ,KACrCC,MAAO1B,EAAwB,QAAbJ,EAACN,EAAKxD,KAAK,UAAE,IAAA8D,OAAA,EAAZA,EAAcyC,iBACjCT,MAAM,2BAKdf,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAI,EAAGF,UAAU,eAAcH,UACjCF,EAAAA,EAAAA,KAACQ,EAAAA,GAAa,CACVC,MAAMT,EAAAA,EAAAA,KAACU,EAAAA,EAAK,CAACD,KAAMgB,EAAAA,EAAYb,OAAQ,KACvCC,MAAmB,QAAd7B,EAAEP,EAAKxD,KAAK,UAAE,IAAA+D,OAAA,EAAZA,EAAc0C,cACrBX,MAAM,qBAIdf,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAI,EAAGF,UAAU,eAAcH,UACjCF,EAAAA,EAAAA,KAACQ,EAAAA,GAAa,CACVC,MAAMT,EAAAA,EAAAA,KAACU,EAAAA,EAAK,CAACD,KAAMkB,EAAAA,EAAgBf,OAAQ,KAC3CC,MAAmB,QAAd5B,EAAER,EAAKxD,KAAK,UAAE,IAAAgE,OAAA,EAAZA,EAAc2C,YACrBb,MAAK,sBAAA7G,OAAoC,QAApCgF,EAAwBT,EAAKxD,KAAK,UAAE,IAAAiE,OAAA,EAAZA,EAAc0C,YAAW,6BAK/D,E,8KClGTC,EAASC,EAAAA,GAAWrI,OAAO,CAC7BsI,KAAM,CACFC,gBAAiB,OACjBC,cAAe,SACfC,eAAgB,aAChBC,aAAc,IAElBC,QAAS,CACLD,aAAc,GAElBE,MAAO,CAGHC,MAAO,OACP1B,OAAQ,QACRuB,aAAa,SAIrB,SAASI,EAAKC,GAAY,IAAX,KAAEvH,GAAMuH,EAEnB,MAAMC,EAAY,IAAI,IAAIC,IAAIzH,EAAK0H,KAAIC,GAAQA,EAAKC,qBAG9CC,EAAa,GACnB,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAUO,OAAQD,GAAK,EACvCD,EAAWG,KAAKR,EAAUS,MAAMH,EAAGA,EAAI,IAG3C,OACI/C,EAAAA,EAAAA,KAACmD,EAAAA,GAAQ,CAAAjD,SACJ4C,EAAWH,KAAI,CAACS,EAAMC,KACnBrD,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAaC,KAAK,KAAKC,MAAO3B,EAAOE,KAAK7B,SAC1CkD,EAAKT,KAAI,CAACc,EAAKV,KACZ/C,EAAAA,EAAAA,KAAC0D,EAAAA,GAAI,CAASF,MAAO3B,EAAOO,QAAQlC,UAChCF,EAAAA,EAAAA,KAAC2D,EAAAA,GAAK,CAACC,IAAKH,EAAKD,MAAO3B,EAAOQ,SADxBU,MAFRM,MAU3B,CA0BA,QAvBA,SAA+BQ,GAAoB,IAADC,EAAA,IAAlB,OAAEC,EAAM,KAAE9I,GAAM4I,EACxCG,EAAiB/I,EAAKgJ,QAAOC,IAA4B,IAArBA,EAAIC,eAE5C,OACInE,EAAAA,EAAAA,KAAA,OAAAE,UAEIF,EAAAA,EAAAA,KAACoE,EAAAA,GAAe,CAACC,UAAUrE,EAAAA,EAAAA,KAACuC,EAAK,CAACtH,KAAM+I,IAAoBM,SAAQ,GAAApK,OAAY,QAAZ4J,EAAK7I,EAAK,UAAE,IAAA6I,OAAA,EAAPA,EAASS,QAAQzD,UAAS,QAAOZ,SACrGsE,IAAA,IAAC,KAAEC,EAAI,IAAEhB,EAAG,QAAEiB,EAAO,MAAEpK,GAAOkK,EAAA,OAC3BE,EAAU,0BAA2B1E,EAAAA,EAAAA,KAAA2E,EAAAA,SAAA,CAAAzE,UACjCC,EAAAA,EAAAA,MAAA,UACIyE,KAAK,SACLvE,UAAU,4BACVmD,MAAO,CAAC,OAAS,WAAWtD,SAAA,EAG5BF,EAAAA,EAAAA,KAAC6E,EAAAA,IAAU,IAAc,gCACjB,KAKpC,E,wBCiPA,QA1SA,SAAmBrC,GAA8C,IAA7C,WAAEsC,EAAU,SAAEC,EAAQ,WAAEC,EAAU,KAAE/J,GAAMuH,EAE1D,MAAM,GAAE/G,IAAOwJ,EAAAA,EAAAA,MACRC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAcC,IAAmBF,EAAAA,EAAAA,WAAS,IAC1CG,EAAgBC,IAAqBJ,EAAAA,EAAAA,WAAS,IAE9CK,EAAkBC,IAAuBN,EAAAA,EAAAA,UAAS,KAClDO,EAAcC,IAAkBR,EAAAA,EAAAA,UAAS,KAC/BS,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,KAAO,IAADC,EAC0BC,EAAvB,QAAfD,EAAIhB,EAAS,UAAE,IAAAgB,GAAXA,EAAa9E,gBAAgBgF,KAC7BC,EAAyB,QAAZF,EAACjB,EAAS,UAAE,IAAAiB,OAAA,EAAXA,EAAa/E,gBAAgBgF,IAC/C,GACD,CAAClB,KAGJe,EAAAA,EAAAA,YAAU,KACFP,EACAY,IAAAA,KAAU,CACNpF,MAAO,cACPqF,KAAM,gFACNC,mBAAmB,EACnBC,mBAAmB,EACnB7F,KAAM,SAGV0F,IAAAA,OAEJ,GAGD,CAACZ,IAGJ,MAAMW,EAAgBpL,UAClB,IAAIoJ,EAAM,CACN,QAAWzI,EACX,OAAU8K,GAEd,MAAMnM,QAAiB4D,EAAAA,EAAAA,IAAqBkG,GACxC9J,EAASc,UACT0K,EAAexL,EAASa,MACxBqK,GAAgB,GACpB,EAIEkB,EAAcA,KAChBrB,GAAcD,EAAU,EAkDtBuB,EAAUd,EAAahD,KAAI+D,IAAO,CACpC7F,MAAO6F,EAAQT,IACfU,MAAM,GAADzM,OAAKwM,EAAQlL,KAAI,OAAAtB,OAAMwM,EAAQvF,SAAS3F,UAsD3CoL,EAAgBC,GACX,IAAIlM,SAAQ,CAACmM,EAASlM,KACzB,MAAMmM,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQJ,GACxBE,EAASE,OAAO,gBAAiB,qBAEjCC,MAAM,yDAA0D,CAC5DC,OAAQ,OACRC,KAAML,IACPM,MAAKjN,GAAYA,EAASkN,SACxBD,MAAKpM,GAAQ6L,EAAQ7L,KACrBsM,OAAMjN,GAASM,EAAON,IAAO,IAgEpCkN,EAA6BtD,GACxB,IAAIvJ,SAAQ,CAACmM,EAASlM,MACzByD,EAAAA,EAAAA,IAAyB6F,GACpBmD,MAAK,IAAMP,MACXS,OAAMjN,GAASM,EAAON,IAAO,IAI1C,OACI6F,EAAAA,EAAAA,MAAA,OAAKE,UAAU,0BAAyBH,SAAA,EACpCC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,MAAKH,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,aAAYH,UACvBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,wBAEN8E,GAQUhF,EAAAA,EAAAA,KAAA2E,EAAAA,SAAA,CAAAzE,UAAEF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,sBAAqBH,SAE7C6E,EAAS,GAAG0C,cAAetH,EAAAA,EAAAA,MAAAwE,EAAAA,SAAA,CAAAzE,SAAA,CAAE,KAACF,EAAAA,EAAAA,KAAC0H,EAAsB,CAAC3D,OAAQtI,EAAIR,KAAMA,QAAqC+E,EAAAA,EAAAA,KAAA2E,EAAAA,SAAA,CAAAzE,UAAEC,EAAAA,EAAAA,MAAA,UAC5GyE,KAAK,oBACLvE,UAAU,iBACVmD,MAAO,CAAEmE,MAAO,SAChBC,QAtFWC,IACpB,IAAIlN,SAAQG,MAAOgM,EAASlM,KAW/B,UAV4BuL,IAAAA,KAAU,CAClCpF,MAAO,4CACPqF,KAAM,wCACN3F,KAAM,UACNqH,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,UACnBC,kBAAmB,uBAGLC,YACd,IACI1C,GAAkB,GAEnB,IAAIxB,EAAiB/I,EAAKgJ,QAAOC,IAA4B,IAArBA,EAAIC,eAC5CzI,QAAQC,IAAI,iBAAkBqI,GAC7B,IAAImE,EAAQ,EACRC,EAAapE,EAAehB,OAQhC,SANMrI,QAAQ0N,IAAIrE,EAAerB,KAAI7H,eApFnBwN,IACvB,IAAI3N,SAAQ,CAACmM,EAASlM,KACzB,MAAMyH,EAAQ,IAAIsB,MAClBtB,EAAMuB,IAAM2E,EAEZlG,EAAMmG,OAAS1N,UACX,MAAM2N,EAASpE,SAASqE,cAAc,UAChCC,EAAMF,EAAOG,WAAW,MAE9BH,EAAOnG,MAAQD,EAAMwG,aACrBJ,EAAO7H,OAASyB,EAAMyG,cAEtBH,EAAII,UAAU1G,EAAO,EAAG,GAExB,MACM2G,EADe,IAAI1J,KAAKgJ,EAAK/D,QAAQhD,cACZhC,mBAAmB,QAAS,CACvDC,IAAK,UACLC,MAAO,UACPC,KAAM,YAGViJ,EAAIM,KAAO,aACXN,EAAIO,UAAY,QAChBP,EAAIQ,SAAS,GAADjP,OAAIoO,EAAKc,WAAW5N,MAAQ,IAAK,KAC7CmN,EAAIQ,SAAS,GAADjP,OAAIoO,EAAK/D,QAAQpD,SAAS3F,MAAQ,IAAK,KACnDmN,EAAIQ,SAAS,GAADjP,OAAIoO,EAAK/D,QAAQtD,gBAAgBoI,SAAW,IAAK,KAC7DV,EAAIQ,SAAS,GAADjP,OAAI8O,GAAa,IAAK,KAElC,MAAMnC,EAAY4B,EAAOa,UAAU,aAEnC,IACI,MAAMC,QAAgB3C,EAAaC,GAC7B3C,EAAM,CACR,eAAkBoE,EAAKrC,IACvB,MAASsD,EAAQC,kBAEfhC,EAA0BtD,GAChC4C,GACJ,CAAE,MAAOxM,GACLM,EAAON,EACX,EACH,IA4CiBmP,CAAyBnB,GAC/BH,GAAO,KAIPA,IAAUC,EAAY,QACC9J,EAAAA,EAAAA,IAA0B7C,IACpCP,SACTsK,GAAkB,GAClBkE,EAAAA,GAAMxO,QAAQ,qCAAsC,CAChDyO,SAAUD,EAAAA,GAAME,SAASC,UACzBC,UAAW,MAGfC,YAAW,KACPvP,OAAOC,SAASuP,QAAQ,GACzB,OAGHN,EAAAA,GAAMpP,MAAM,2BAA4B,CACpCqP,SAAUD,EAAAA,GAAME,SAASC,UACzBC,UAAW,MAEf3D,IAAAA,SAEJW,GACJ,CACJ,CAAE,MAAOxM,GACLM,EAAON,EACX,CACJ,IAkC4C4F,SAAA,EAEhCF,EAAAA,EAAAA,KAACiK,EAAAA,IAAa,IAAiB,mCAhBxBjK,EAAAA,EAAAA,KAAA2E,EAAAA,SAAA,CAAAzE,UAAEF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,sBAAqBH,UACjDF,EAAAA,EAAAA,KAAA,UACI4E,KAAK,SACLvE,UAAU,kBACVuH,QAASpB,EAAYtG,SACxB,qBAkBLF,EAAAA,EAAAA,KAAA,aAGJG,EAAAA,EAAAA,MAAC+J,EAAAA,EAAK,CAACC,KAAMjF,EAAWkF,OAAQ5D,EAAa6D,SAAS,SAAQnK,SAAA,EAC1DF,EAAAA,EAAAA,KAACkK,EAAAA,EAAMI,OAAM,CAACC,aAAW,EAAArK,UACrBF,EAAAA,EAAAA,KAACkK,EAAAA,EAAMM,MAAK,CAAAtK,SAAC,mBAEjBF,EAAAA,EAAAA,KAACkK,EAAAA,EAAMO,KAAI,CAAAvK,UACPF,EAAAA,EAAAA,KAAC0K,EAAAA,GAAM,CACHjE,QAASA,EACTkE,SAAO,EACPC,mBAAmB,EACnBC,SAnOQC,IACxBpF,EAAoBoF,EAAgBnI,KAAIoI,GAAUA,EAAOlK,QAAO,EAmOhDA,MAAO4F,EAAQxC,QAAO8G,GAAUtF,EAAiBuF,SAASD,EAAOlK,cAGzEV,EAAAA,EAAAA,MAAC+J,EAAAA,EAAMe,OAAM,CAAA/K,SAAA,EACTF,EAAAA,EAAAA,KAACkL,EAAAA,EAAM,CAACC,QAAQ,UAAUvD,QApOrB9M,UAEjB,IAGI,GAFAsQ,EAAEC,iBAE6B,GAA3B5F,EAAiBzC,OAKjB,YAJA0G,EAAAA,GAAMpP,MAAM,oCAAqC,CAC7CqP,SAAUD,EAAAA,GAAME,SAASC,UACzBC,UAAW,MAInBrE,EAAiB9C,KAAI7H,UACjB,MAAMoJ,EAAM,CACR,QAAWzI,EACX,WAAc6P,SAEZvN,EAAAA,EAAAA,IAAiBmG,EAAI,IAG/BwF,EAAAA,GAAMxO,QAAQ,6BAA8B,CACxCyO,SAAUD,EAAAA,GAAME,SAASC,UACzBC,UAAW,MAIftD,IACAuD,YAAW,KACPjF,IACAoB,GAAe,GAChB,IAIP,CAAE,MAAOqF,GACL7B,EAAAA,GAAMpP,MAAM,2BAA4B,CACpCqP,SAAUD,EAAAA,GAAME,SAASC,UACzBC,UAAW,KAEnB,GA6L4D5J,SAAC,UAGjDF,EAAAA,EAAAA,KAACkL,EAAAA,EAAM,CAACC,QAAQ,YAAYvD,QAASpB,EAAYtG,SAAC,mBAQtE,ECvJA,QA5JA,SAAoBsC,GAAgD,IAA/C,mBAAE5F,EAAkB,SAAEmI,EAAQ,WAAEC,GAAYxC,EAE7D,MAAM,GAAE/G,IAAOwJ,EAAAA,EAAAA,MAERC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCK,EAAkBC,IAAuBN,EAAAA,EAAAA,UAAS,KAClDO,EAAcC,IAAkBR,EAAAA,EAAAA,UAAS,KAEhDU,EAAAA,EAAAA,YAAU,KAAO,IAADC,EAC0BC,EAAvB,QAAfD,EAAIhB,EAAS,UAAE,IAAAgB,GAAXA,EAAa9E,gBAAgBgF,KAC7BC,EAAyB,QAAZF,EAACjB,EAAS,UAAE,IAAAiB,OAAA,EAAXA,EAAa7E,SAAS8E,IACxC,GACD,CAAClB,IAGJ,MAAMmB,EAAgBpL,UAElB,IAAIoJ,EAAM,CACN,QAAWzI,EACX,SAAY0F,GAEhB,MAAM/G,QAAiB6D,EAAAA,EAAAA,IAAsBiG,GAC7C0B,EAAexL,EAASa,KAAK,EAI3BuL,EAAcA,KAChBrB,GAAcD,EAAU,EA4EtBuB,EAAUd,EAAahD,KAAI+D,IAAO,CACpC7F,MAAO6F,EAAQT,IACfU,MAAOD,EAAQ8E,aAGnB,OACIrL,EAAAA,EAAAA,MAAA,OAAKE,UAAU,0BAAyBH,SAAA,EACpCC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,MAAKH,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,aAAYH,UACvBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,yBAGN8E,EASc,IATDhF,EAAAA,EAAAA,KAAA2E,EAAAA,SAAA,CAAAzE,UACXF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,sBAAqBH,UAChCF,EAAAA,EAAAA,KAAA,UACI4E,KAAK,SACLvE,UAAU,kBACVuH,QAASpB,EAAYtG,SACxB,sBAKTF,EAAAA,EAAAA,KAAA,aAGJG,EAAAA,EAAAA,MAAC+J,EAAAA,EAAK,CAACC,KAAMjF,EAAWkF,OAAQ5D,EAAa6D,SAAS,SAAQnK,SAAA,EAC1DF,EAAAA,EAAAA,KAACkK,EAAAA,EAAMI,OAAM,CAACC,aAAW,EAAArK,UACrBF,EAAAA,EAAAA,KAACkK,EAAAA,EAAMM,MAAK,CAAAtK,SAAC,oBAEjBF,EAAAA,EAAAA,KAACkK,EAAAA,EAAMO,KAAI,CAAAvK,UACPF,EAAAA,EAAAA,KAAC0K,EAAAA,GAAM,CACHjE,QAASA,EACTkE,SAAO,EACPC,mBAAmB,EACnBC,SA5GQC,IACxBpF,EAAoBoF,EAAgBnI,KAAIoI,GAAUA,EAAOlK,QAAO,EA4GhDA,MAAO4F,EAAQxC,QAAO8G,GAAUtF,EAAiBuF,SAASD,EAAOlK,cAGzEV,EAAAA,EAAAA,MAAC+J,EAAAA,EAAMe,OAAM,CAAA/K,SAAA,EACTF,EAAAA,EAAAA,KAACkL,EAAAA,EAAM,CAACC,QAAQ,UAAUvD,QA7GrB9M,UACjB,IAGI,GAFAsQ,EAAEC,iBACF3P,QAAQC,IAAI,qBAAsB8J,GACF,IAA5BA,EAAiBzC,OAKjB,YAJA0G,EAAAA,GAAMpP,MAAM,sCAAuC,CAC/CqP,SAAUD,EAAAA,GAAME,SAASC,UACzBC,UAAW,MAKnB,IAAI2B,GAAwB,EAC5B,IAAK,IAAI1I,EAAI,EAAGA,EAAI0C,EAAiBzC,OAAQD,IAAK,CAC9C,MAAMuI,EAAY7F,EAAiB1C,GAC7BmB,EAAM,CACR,QAAWzI,EACX,YAAe6P,GAEnB,IACI,MAAMlR,QAAiB8D,EAAAA,EAAAA,IAAkBgG,GACpC9J,EAASc,UACVuQ,GAAwB,EAExB/B,EAAAA,GAAMpP,MAAM,GAADJ,OAAIE,EAASsR,SAAW,CAC/B/B,SAAUD,EAAAA,GAAME,SAASC,UACzBC,UAAW,MAEftD,IACAuD,YAAW,KACPnN,IACAsJ,GAAe,GAChB,KAGX,CAAE,MAAO5L,GACLoB,QAAQpB,MAAM,yBAA0BA,EAAMoR,SAC9ChC,EAAAA,GAAMpP,MAAM,GAADJ,OAAII,EAAMoR,SAAW,CAC5B/B,SAAUD,EAAAA,GAAME,SAASC,UACzBC,UAAW,KAEnB,CACJ,CAEI2B,IACA/B,EAAAA,GAAMxO,QAAQ,+BAAgC,CAC1CyO,SAAUD,EAAAA,GAAME,SAASC,UACzBC,UAAW,MAGftD,IACAuD,YAAW,KACPnN,IACAsJ,GAAe,GAChB,KAGX,CAAE,MAAOqF,GACL7P,QAAQpB,MAAM,SAAUiR,GACxB7B,EAAAA,GAAMpP,MAAM,2BAA4B,CACpCqP,SAAUD,EAAAA,GAAME,SAASC,UACzBC,UAAW,KAEnB,GA8C4D5J,SAAC,UAGjDF,EAAAA,EAAAA,KAACkL,EAAAA,EAAM,CAACC,QAAQ,YAAYvD,QAASpB,EAAYtG,SAAC,mBAQtE,E,eCzBA,QAjIA,SAAyBsC,GAA4C,IAADsB,EAAA6H,EAAAC,EAAA,IAA1C,UAAEC,EAAS,WAAEC,EAAU,cAAEC,GAAevJ,EAE9D,MAAOvH,EAAM+Q,IAAW5G,EAAAA,EAAAA,UAAS,KAC1B6G,EAAQC,IAAa9G,EAAAA,EAAAA,UAAS,KAErCU,EAAAA,EAAAA,YAAU,KACNqG,GAAY,GAEb,IAEH,MAAMA,EAAarR,UACf,MAAMV,QAAiBgE,EAAAA,EAAAA,IAAsB2N,GACzC3R,EAASc,SACT8Q,EAAQ5R,EAASa,KACrB,EAMJ,OAFAS,QAAQC,IAAI,OAAQV,IAGhBkF,EAAAA,EAAAA,MAAC+J,EAAAA,EAAK,CAACC,KAAM0B,EAAWzB,OAAQ0B,EAAYvI,KAAK,KAAIrD,SAAA,EACjDF,EAAAA,EAAAA,KAACkK,EAAAA,EAAMI,OAAM,CAACC,aAAW,EAAArK,UACrBF,EAAAA,EAAAA,KAACkK,EAAAA,EAAMM,MAAK,CAAAtK,SAAC,oBAEjBF,EAAAA,EAAAA,KAACkK,EAAAA,EAAMO,KAAI,CAAAvK,UACPC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,MAAKH,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,SAAQH,SA2BlBjF,EAAK0H,KAAI,CAACC,EAAMS,KACblD,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAImD,EAAQ,EAAE,KAAGT,EAAKwJ,YAAYZ,aAClCxL,EAAAA,EAAAA,KAAA,OAAKK,UAAU,MAAKH,SACf0C,EAAK6D,QAAQ9D,KAAI,CAACoI,EAAQhI,KACvB,IAAI1C,EAAY,GAMhB,OALI0K,EAAOsB,WAAatB,EAAOuB,QAC3BjM,EAAY,eACL0K,EAAOsB,YACdhM,EAAY,iBAGZL,EAAAA,EAAAA,KAAA,OAAaK,UAAU,aAAYH,UAC/BC,EAAAA,EAAAA,MAAA,KAAGE,UAAWA,EAAUH,SAAA,EAACC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAO6C,EAAI,EAAE,OAAQ,IAAEgI,EAAOvP,SADjDuH,EAEJ,MAMjBH,EAAK6D,QAAQ9D,KAAI,CAACoI,EAAQhI,KACvB,GAAIgI,EAAOuB,QAEP,OACItM,EAAAA,EAAAA,KAAA,OAAKK,UAAU,kBAAiBH,UAC5BC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EAAGF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,cAAYF,EAAAA,EAAAA,KAAA,QAAAE,SAAO6K,EAAOvP,OAAY,OAAG2E,EAAAA,EAAAA,MAAA,QAAME,UAAU,WAAUH,SAAA,CAAC,IAAM,OAAJ0C,QAAI,IAAJA,GAAAA,EAAM2J,0BAAyBvM,EAAAA,EAAAA,KAACwM,EAAAA,IAAO,CAAC7E,MAAM,WAAmB3H,EAAAA,EAAAA,KAAA2E,EAAAA,SAAA,CAAAzE,SAAE,MAAK,OAAQ,QAIxK,KAIJF,EAAAA,EAAAA,KAAA,WAhCMqD,QAsClBlD,EAAAA,EAAAA,MAAA,OAAKE,UAAU,SAAQH,SAAA,EACnBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aACJC,EAAAA,EAAAA,MAACsM,EAAAA,EAAK,CAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAA1M,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAAE,UACIC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,sBAIZF,EAAAA,EAAAA,KAAA,SAAAE,UACIC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAKjF,EAAK+H,UACVhD,EAAAA,EAAAA,KAAA,MAAAE,SAAY,QAAZ4D,EAAK7I,EAAK,UAAE,IAAA6I,OAAA,EAAPA,EAAS+I,eAAeC,qBAC7B9M,EAAAA,EAAAA,KAAA,MAAAE,SAAY,QAAZyL,EAAK1Q,EAAK,UAAE,IAAA0Q,OAAA,EAAPA,EAASkB,eAAeE,mBAC7B/M,EAAAA,EAAAA,KAAA,MAAAE,SAAY,QAAZ0L,EAAK3Q,EAAK,UAAE,IAAA2Q,OAAA,EAAPA,EAASiB,eAAeG,8BASrDhN,EAAAA,EAAAA,KAACkK,EAAAA,EAAMe,OAAM,CAAA/K,UACTF,EAAAA,EAAAA,KAACkL,EAAAA,EAAM,CAACC,QAAQ,YAAYvD,QAASkE,EAAW5L,SAAC,cAOjE,E,eCnIA,MAuGA,EAvG6BsC,IAA0C,IAAzC,KAAEvH,EAAI,0BAAEgS,GAA2BzK,EAC7D,MAAO0K,EAAaC,IAAkB/H,EAAAA,EAAAA,WAAS,GACzCgI,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAYD,EAAAA,EAAAA,QAAO,OAEzBvH,EAAAA,EAAAA,YAAU,KACN,IAAKoH,EAAa,OAElB,MACMlE,EADe,IAAI1J,KAAKrE,EAAKsJ,QAAQhD,cACZhC,mBAAmB,QAAS,CACvDC,IAAK,UACLC,MAAO,UACPC,KAAM,YAEJiJ,EAAM2E,EAAUC,QAAQ3E,WAAW,MACzCD,EAAI6E,UAAU,EAAG,EAAGF,EAAUC,QAAQjL,MAAOgL,EAAUC,QAAQ3M,QAC/D+H,EAAII,UAAUqE,EAASG,QAAS,EAAG,EAAGD,EAAUC,QAAQjL,MAAOgL,EAAUC,QAAQ3M,QACjF+H,EAAIM,KAAO,aACXN,EAAIO,UAAY,QAChBP,EAAIQ,SAAS,GAADjP,OAAIe,EAAKmO,WAAW5N,MAAQ,IAAK,KAC7CmN,EAAIQ,SAAS,GAADjP,OAAIe,EAAKsJ,QAAQpD,SAAS3F,MAAQ,IAAK,KACnDmN,EAAIQ,SAAS,GAADjP,OAAIe,EAAKsJ,QAAQtD,gBAAgBoI,SAAW,IAAK,KAC7DV,EAAIQ,SAAS,GAADjP,OAAI8O,GAAa,IAAK,IAAI,GACvC,CAAC/N,EAAKmO,WAAW5N,KAAM0R,IA0C1B,OACIlN,EAAAA,EAAAA,KAAA,OAAAE,UACIC,EAAAA,EAAAA,MAAC+J,EAAAA,EAAK,CACFC,MAAM,EACNC,OAAQA,IAAM6C,GAA0B,GACxCQ,gBAAgB,aAChBC,iBAAiB,qBACjBnK,KAAK,KACL,kBAAgB,gCAChBoK,UAAQ,EAAAzN,SAAA,EAERF,EAAAA,EAAAA,KAACkK,EAAAA,EAAMI,OAAM,CAACC,aAAW,EAAArK,UACrBF,EAAAA,EAAAA,KAACkK,EAAAA,EAAMM,MAAK,CAAAtK,SAAC,mBAEjBC,EAAAA,EAAAA,MAAC+J,EAAAA,EAAMO,KAAI,CAAAvK,SAAA,EACPF,EAAAA,EAAAA,KAAA,UAAQ4N,IAAKN,EAAWhL,MAAM,OAAO1B,OAAO,OAAO4C,MAAO,CAAElB,MAAO,6BACnEtC,EAAAA,EAAAA,KAAA,OACI4N,IAAKR,EACLxJ,IAAK2E,EACLsF,IAAI,cACJrK,MAAO,CAAEsK,QAAS,QAClBC,OAAQA,KACJZ,GAAe,GACfG,EAAUC,QAAQjL,MAAQ8K,EAASG,QAAQ1E,aAC3CyE,EAAUC,QAAQ3M,OAASwM,EAASG,QAAQzE,aAAa,QAIrE3I,EAAAA,EAAAA,MAAC+J,EAAAA,EAAMe,OAAM,CAAA/K,SAAA,EACTC,EAAAA,EAAAA,MAAC+K,EAAAA,EAAM,CAACC,QAAQ,UAAU3H,MAAO,CAAEmE,MAAO,SAAWC,QArE9CoG,KACnB,MAAMC,EAAO5J,SAASqE,cAAc,KACpCuF,EAAKC,SAAQ,eAAAhU,OAAkBe,EAAKmO,WAAW5N,KAAI,QACnDyS,EAAKvT,KAAO4S,EAAUC,QAAQjE,UAAU,aACxC2E,EAAKE,OAAO,EAiE6EjO,SAAA,EAACF,EAAAA,EAAAA,KAAC6E,EAAAA,IAAU,IAAG,4BAC5F1E,EAAAA,EAAAA,MAAC+K,EAAAA,EAAM,CAACC,QAAQ,UAAUvD,QA/DtBwG,KAEhB,MAAMC,EAAUf,EAAUC,QAAQjE,UAAU,aAGtCgF,EAAM,IAAIC,EAAAA,GAAM,IAAK,KAAM,MAG3BC,EAAM,IAAI7K,MAChB6K,EAAI5K,IAAMyK,EACVG,EAAIhG,OAAS,WACT,MAOMiG,EANQ,KADMD,EAAIlM,MAAQkM,EAAI5N,QAOL8N,GAK/BJ,EAAIK,SAASN,EAAS,MAPN,IACI/L,IAM4BmM,GAGhDH,EAAIM,YACJN,EAAIO,KAAK,eAAD3U,OAAgBe,EAAKmO,WAAW5N,KAAI,QAChD,CAAC,EAmC0D0E,SAAA,EAACF,EAAAA,EAAAA,KAAC8O,EAAAA,IAAO,IAAG,yBAC3D9O,EAAAA,EAAAA,KAACkL,EAAAA,EAAM,CAACC,QAAQ,YAAYvD,QAASA,IAAMqF,GAA0B,GAAO/M,SAAC,iBAGnF,EC0Pd,QA3UA,WACE,MAAM,GAAEzE,IAAOwJ,EAAAA,EAAAA,MAERhK,EAAM+Q,IAAW5G,EAAAA,EAAAA,UAAS,KAC1BL,EAAUgK,IAAe3J,EAAAA,EAAAA,UAAS,KAClC4J,EAAkBC,IAAuB7J,EAAAA,EAAAA,UAAS,KAClDJ,EAAYkK,IAAiB9J,EAAAA,EAAAA,WAAS,IACtC+J,EAAgBC,IAAqBhK,EAAAA,EAAAA,WAAS,IAC9CiK,EAAiBC,IAAkBlK,EAAAA,EAAAA,WAAS,IAC5CmK,EAAaC,IAAkBpK,EAAAA,EAAAA,WAAS,IACxC2G,EAAe0D,IAAoBrK,EAAAA,EAAAA,UAAS,OAC5CsK,EAAkBC,IAAuBvK,EAAAA,EAAAA,UAAS,CAAC,IAKnDyG,EAAW+D,IAAgBxK,EAAAA,EAAAA,WAAS,IACpC5J,EAAMqU,IAAWzK,EAAAA,EAAAA,UAAS,KAC1B0K,EAAwB7C,IAA6B7H,EAAAA,EAAAA,WAAS,IAQrEU,EAAAA,EAAAA,YAAU,KACRzI,IACA8O,IACAvP,GAAoB,GAEnB,IAGH,MAAMuP,EAAarR,UACjB,MAAMV,QAAiBmD,EAAAA,EAAAA,IAAsB9B,GAEzCrB,EAASc,SACX8Q,EAAQ5R,EAASa,KACnB,EAKIoC,EAAiBvC,UACrB,MAAMV,QAAiBkD,EAAAA,EAAAA,IAAmB7B,GAC1C,GAAIrB,EAASc,QAAS,CAEpB6T,EAAY3U,EAASa,MAErBmU,EAAkBhV,EAASa,KAAK,GAAG8U,aAGnC,MAAMC,EAAY,IAAI1Q,KAAKlF,EAASa,KAAK,GAAGsG,cACtC0O,EAAU,IAAI3Q,KAAKlF,EAASa,KAAK,GAAGuG,iBACpC0O,EAAc,IAAI5Q,KAIpB4Q,EAAcF,EAChBd,GAAc,GACLgB,GAAeF,GAAaE,GAAeD,GAIpDf,GAAc,EAIlB,GAKItS,EAAqB9B,UACzB,MAAMV,QAAiB0D,EAAAA,EAAAA,IAAuBrC,GAC1CrB,EAASc,SACX+T,EAAoB7U,EAASa,KAK/B,EAqIIkV,EAAU,CACd,CAAE7F,OAAQ,eAAgB8F,SAAU,mBACpC,CAAE9F,OAAQ,gBAAiB8F,SAAU,4BACrC,CAAE9F,OAAQ,cAAe8F,SAAU,sBACnC,CAAE9F,OAAQ,aAAc8F,SAAU,yBAClC,CAAE9F,OAAQ,oBAAqB8F,SAAU,gCACzC,CAAE9F,OAAQ,eAAgB8F,SAAU,2BACpC,CAAE9F,OAAQ,aAAc8F,SAAU,aAAcC,KAAM7N,IAAA,IAAC,MAAE3B,GAAO2B,EAAA,OAAM3B,CAAK,GAC3E,CAAEyJ,OAAQ,cAAe8F,SAAU,eAAgBC,KAAMxM,IAAA,IAAC,MAAEhD,GAAOgD,EAAA,OAAMhD,EAAQ,YAAc,eAAe,GAE9G,CACEyJ,OAAQ,UACR8F,SAAU,MACVC,KAAM7L,IAAA,IAAC,IAAE8L,GAAK9L,EAAA,OACZxE,EAAAA,EAAAA,KAAA2E,EAAAA,SAAA,CAAAzE,SAGI8E,GASIhF,EAAAA,EAAAA,KAAA2E,EAAAA,SAAA,CAAAzE,SAEHoQ,EAAIC,SAASpM,cAAehE,EAAAA,EAAAA,MAAAwE,EAAAA,SAAA,CAAAzE,SAAA,EAC3BC,EAAAA,EAAAA,MAACqQ,EAAAA,GAAO,CACN7I,MAAM,UACNpE,KAAK,KACLC,MAAO,CAAEmE,MAAO,SAChBC,QAASA,KAAM6I,OAzDAC,EAyDoBJ,EAAIC,SAvDnDZ,EAAoBe,QACpBzD,GAA0B,GAHCyD,KAyDkC,EAAAxQ,SAAA,EAEjDF,EAAAA,EAAAA,KAAC2Q,EAAAA,IAAK,IAAS,wBAEjBxQ,EAAAA,EAAAA,MAACqQ,EAAAA,GAAO,CACN7I,MAAM,UACNpE,KAAK,KACLC,MAAO,CAAEmE,MAAO,QAASiJ,OAAQ,UACjChJ,QAASA,IAzDEnM,KAEvBgU,EAAiBhU,GACjB+T,GAAe,EAAK,EAsDOqB,CAAgBP,EAAIC,SAAStK,KAAK/F,SAAA,EAEjDF,EAAAA,EAAAA,KAAC2Q,EAAAA,IAAK,IAAG,2BACK,OA3BL3Q,EAAAA,EAAAA,KAAA2E,EAAAA,SAAA,CAAAzE,UACbC,EAAAA,EAAAA,MAACqQ,EAAAA,GAAO,CACN7I,MAAM,SACNpE,KAAK,KACLC,MAAO,CAAEmE,MAAO,SAChBC,QAASA,IAtJA9M,WAWnB,UAV4BqL,IAAAA,KAAU,CACpCpF,MAAO,gBACPqF,KAAM,gDACN3F,KAAM,UACNqH,kBAAkB,EAClBC,mBAAoB,OACpBC,kBAAmB,UACnBC,kBAAmB,qBAGHC,YAChB,IACE,MAAM9N,QAAiBoD,EAAAA,EAAAA,IAAuB/B,GAC1CrB,EAASc,UACXwO,EAAAA,GAAMxO,QAAQd,EAASsR,QAAS,CAC9B/B,SAAUD,EAAAA,GAAME,SAASC,UACzBC,UAAW,MAEbqC,IAEJ,CAAE,MAAO7R,GACPoP,EAAAA,GAAMpP,MAAMA,EAAMoR,QAAS,CACzB/B,SAAUD,EAAAA,GAAME,SAASC,UACzBC,UAAW,KAEf,CACF,EA2HyBgH,CAAaR,EAAIC,SAAStK,KAAK/F,SAAA,EAE9CF,EAAAA,EAAAA,KAAC+Q,EAAAA,IAAO,IAAG,gBAuBd,IAKHC,EAAkB,CACtB,CAAE1G,OAAQ,YAAa8F,SAAU,qBACjC,CAAE9F,OAAQ,gBAAiB8F,SAAU,wBACrC,CAAE9F,OAAQ,gBAAiB8F,SAAU,uBACrC,CACE9F,OAAQ,UACR8F,SAAU,MACVC,KAAMY,IAAA,IAAC,IAAEX,GAAKW,EAAA,OACZjR,EAAAA,EAAAA,KAAA2E,EAAAA,SAAA,CAAAzE,SACI8E,EASI,KATShF,EAAAA,EAAAA,KAAA2E,EAAAA,SAAA,CAAAzE,UACbC,EAAAA,EAAAA,MAACqQ,EAAAA,GAAO,CACN7I,MAAM,SACNpE,KAAK,KACLC,MAAO,CAAEmE,MAAO,SAChBC,QAASA,IAnKQ9M,WAW3B,UAV4BqL,IAAAA,KAAU,CACpCpF,MAAO,gBACPqF,KAAM,gDACN3F,KAAM,UACNqH,kBAAkB,EAClBC,mBAAoB,OACpBC,kBAAmB,UACnBC,kBAAmB,qBAGHC,YAChB,IACE,MAAM9N,QAAiBqD,EAAAA,EAAAA,IAAwBhC,GAC3CrB,EAASc,UACXwO,EAAAA,GAAMxO,QAAQd,EAASsR,QAAS,CAC9B/B,SAAUD,EAAAA,GAAME,SAASC,UACzBC,UAAW,MAEblN,IAEJ,CAAE,MAAOtC,GACPoP,EAAAA,GAAMpP,MAAMA,EAAMoR,QAAS,CACzB/B,SAAUD,EAAAA,GAAME,SAASC,UACzBC,UAAW,KAEf,CACF,EAwIyBoH,CAAqBZ,EAAIC,SAAStK,KAAK/F,SAAA,EAEtDF,EAAAA,EAAAA,KAAC+Q,EAAAA,IAAO,IAAG,gBAId,IAQT,OACE5Q,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CAEIiP,EAQO,IARUhP,EAAAA,EAAAA,MAAA,OAAKE,UAAU,WAAUH,SAAA,EAC1CF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,QAAOH,UACpBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,wBAENF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,iBAAgBH,UAC7BF,EAAAA,EAAAA,KAAA,UAAQK,UAAU,kBAAkBuH,QAhJf9M,UAW3B,UAV4BqL,IAAAA,KAAU,CACpCpF,MAAO,gBACPqF,KAAM,wCACN3F,KAAM,UACNqH,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,UACnBC,kBAAmB,uBAGHC,YAChB,IACE,MAAM9N,QAAiB+D,EAAAA,EAAAA,IAAa1C,GAChCrB,EAASc,UACXwO,EAAAA,GAAMxO,QAAQd,EAASsR,QAAS,CAC9B/B,SAAUD,EAAAA,GAAME,SAASC,UACzBC,UAAW,MAEblN,IACAwS,GAAkB,GAEtB,CAAE,MAAO9U,GACPoP,EAAAA,GAAMpP,MAAMA,EAAMoR,QAAS,CACzB/B,SAAUD,EAAAA,GAAME,SAASC,UACzBC,UAAW,KAEf,CACF,EAoHwE5J,SAAC,0BAMrE8E,GAAahF,EAAAA,EAAAA,KAAA2E,EAAAA,SAAA,CAAAzE,UACXF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,WAAUH,UACvBF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,qBAAoBH,UACjCF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,cAAaH,SAAC,4HAI5B,IAGRF,EAAAA,EAAAA,KAACmR,EAAU,CAAClW,KAAM8J,KAClB/E,EAAAA,EAAAA,KAACoR,EAAU,CAACtM,WA3KGhK,gBACXqR,GAAY,EA0KoBpH,SAAUA,EAAU9J,KAAMA,EAAM+J,WAAYA,KAChFhF,EAAAA,EAAAA,KAACqR,EAAAA,EAAS,CAAClB,QAASA,EAASlV,KAAMA,KACnC+E,EAAAA,EAAAA,KAACsR,EAAW,CAAC1U,mBAxKU9B,gBACnB8B,GAAoB,EAuK6BmI,SAAUA,EAAUC,WAAYA,KACrFhF,EAAAA,EAAAA,KAACqR,EAAAA,EAAS,CAAClB,QAASa,EAAiB/V,KAAM+T,EAAkBxT,KAAK,uBACjE+T,GAAcvP,EAAAA,EAAAA,KAACuR,EAAgB,CAAC1F,UAAW0D,EAAazD,WAtH1CA,KACjB0D,GAAe,EAAM,EAqH8DzD,cAAeA,IAAoB,GACnH+D,GAAyB9P,EAAAA,EAAAA,KAACwR,EAAoB,CAACvW,KAAMyU,EAAkBzC,0BAA2BA,IAAgC,KAIzI,C,iICzVA,MAqHA,EArHkBzK,IAA8B,IAA7B,QAAE2N,EAAO,KAAElV,EAAI,KAAEO,GAAMgH,EACxC,MAAM,cACJiP,EAAa,kBACbC,EAAiB,aACjBC,EAAY,WACZC,EAAU,KACV7P,EACA8P,OAAO,UAAEC,EAAS,SAAEC,EAAQ,aAAEC,GAAc,gBAC5CC,EAAe,SACfC,EAAQ,SACRC,EAAQ,aACRC,EAAY,YACZC,EAAW,gBACXC,IACEC,EAAAA,EAAAA,UACF,CACEpC,UACAlV,OACAuX,aAAc,CAAEV,UAAW,EAAGC,SAAU,KAE1CU,EAAAA,gBACAC,EAAAA,UACAC,EAAAA,eAiBF,OACExS,EAAAA,EAAAA,MAAA,OAAKE,UAAU,uBAAsBH,SAAA,EACjCF,EAAAA,EAAAA,KAAA,MAAAE,SAAK1E,GAAU,MACjB2E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oBAAmBH,SAAA,EAChCC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,uBAAsBH,SAAA,EACnCF,EAAAA,EAAAA,KAAC4S,EAAAA,EAAW,CACVhO,KAAK,OACL/D,MAAOmR,GAAgB,GACvBnH,SAAWO,GAAM6G,EAAgB7G,EAAEyH,OAAOhS,OAC1CiS,YAAY,eAEd9S,EAAAA,EAAAA,KAAA,QAAMK,UAAU,cAAaH,SAAC,qBAEhCF,EAAAA,EAAAA,KAACkL,EAAAA,EAAM,CAACtD,QAASA,IA3BDmL,MACpB,MAAMC,EAAY/X,EAAK0H,KAAK2N,GAC1BH,EAAQ8C,QAAO,CAACC,EAAKC,KACnBD,EAAIC,EAAO7I,QAAUgG,EAAI6C,EAAO/C,UACzB8C,IACN,CAAC,KAGAE,EAAKC,EAAAA,GAAWC,cAAcN,GAC9BO,EAAKF,EAAAA,GAAWG,WACtBH,EAAAA,GAAWI,kBAAkBF,EAAIH,EAAI,WACrCC,EAAAA,GAAeE,EAAI,YAAY,EAgBJR,GAAiB5H,QAAQ,UAAU9K,UAAU,iBAAiBmD,MAAO,CAAEmE,MAAO,SAAUzH,SAAC,uBAIlHF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,gBAAeH,UAC9BC,EAAAA,EAAAA,MAACsM,EAAAA,EAAK,IAAKgF,IAAiB9E,UAAQ,EAACC,OAAK,EAAC8G,YAAU,EAAAxT,SAAA,EACnDF,EAAAA,EAAAA,KAAA,SAAAE,UACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YACHyR,EAAahP,KAAKgR,IACjB3T,EAAAA,EAAAA,KAAC4T,EAAAA,SAAc,CAAA1T,SACZyT,EAAYha,QAAQgJ,KAAKwQ,IACxBhT,EAAAA,EAAAA,MAAA,SAAyBgT,EAAOU,eAAeV,EAAOW,wBAAuB5T,SAAA,CAC1EiT,EAAOY,OAAO,WACf/T,EAAAA,EAAAA,KAAA,QAAAE,SAAOiT,EAAOa,SAAYb,EAAOc,aAAe,gBAAQ,gBAAS,OAF1Dd,EAAOlN,QAFC0N,EAAY1N,aAWvCjG,EAAAA,EAAAA,KAAA,YAAW0R,IAAmBxR,SAC3B6B,EAAKY,KAAI,CAAC2N,EAAKvN,KACd6O,EAAWtB,IAETnQ,EAAAA,EAAAA,MAAA,SAAsBmQ,EAAI4D,cAAahU,SAAA,EACrCF,EAAAA,EAAAA,KAAA,MAAAE,SAAK4R,EAAYC,EAAWhP,EAAI,IAC/BuN,EAAI6D,MAAMxR,KAAKyR,IACdpU,EAAAA,EAAAA,KAAA,SAA8BoU,EAAKC,eAAcnU,SAC9CkU,EAAKL,OAAO,SADNK,EAAKjB,OAAOlN,SAHhBqK,EAAIrK,gBAcrB9F,EAAAA,EAAAA,MAAA,OAAKE,UAAU,sBAAqBH,SAAA,EAClCF,EAAAA,EAAAA,KAAA,UAAQ4H,QAASA,IAAMsK,EAAS,GAAIoC,UAAWhC,EAAgBpS,SAC5D,QAEHF,EAAAA,EAAAA,KAAA,UAAQ4H,QAASA,IAAMwK,IAAgBkC,UAAWhC,EAAgBpS,SAC/D,OAEHF,EAAAA,EAAAA,KAAA,UAAQ4H,QAASA,IAAMuK,IAAYmC,UAAWjC,EAAYnS,SACvD,OAEHF,EAAAA,EAAAA,KAAA,UAAQ4H,QAASA,IAAMsK,EAASnQ,EAAKiB,OAAS,GAAIsR,UAAWjC,EAAYnS,SACtE,QAEHC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,aACOF,EAAAA,EAAAA,KAAA,UAAAE,SAAS4R,EAAY,IAAW,OAAKyC,KAAKC,KAAKvZ,EAAK+H,OAAS+O,GAAU,oBAAkB9W,EAAK+H,OAAO,mBAGhH,C","sources":["utility/api.js","views/exam/ExamWidget.js","views/exam/DownloadAllCertificate.js","views/exam/AddStudent.js","views/exam/AddQuestion.js","views/exam/ShowAnswerPapper.js","views/exam/CertificateGenerator.js","views/exam/ExamInfo.js","views/ownComponent/DataTable.js"],"sourcesContent":["import axios from 'axios'\nimport Cookies from 'js-cookie'\n\n// const BASE_URL = 'http://localhost:5000'\nconst BASE_URL = 'http://66.179.250.128:5000'\n\n\nexport const axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n})\n\n// Add the token to the headers if it exists in cookies\nconst setAuthorizationHeader = () => {\n  const bearerToken = Cookies.get('accessToken')\n  if (bearerToken) {\n    axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${bearerToken}`\n  }\n}\n\n// Call this function to set the Authorization header\nsetAuthorizationHeader()\n\n// Add a response interceptor\naxiosInstance.interceptors.response.use(\n  response => response,\n  error => {\n    if (error.response && error.response.status === 401) {\n      window.location.href = '/admin-login'\n    }\n    return Promise.reject(error);\n  }\n);\n\n\n// --------loginUser-----------//\nexport const loginUser = async (userData) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/admin/login`, userData)\n    if (response.data.success) {\n      // set token\n      const accessToken = response.data.data.token\n      // set the access token in cookie\n      Cookies.set('accessToken', accessToken, { secure: true, sameSite: 'strict' })\n\n      // set token\n      const name = response.data.data.name\n      // set the access token in cookie\n      Cookies.set('name', name, { secure: true, sameSite: 'strict' })\n\n      const id = response.data.data.id\n      Cookies.set('adminId', id, { secure: true, sameSite: 'strict' })\n\n      setAuthorizationHeader();\n    }\n    return response.data\n  } catch (error) {\n    console.log(\"error\", error)\n    throw error\n  }\n}\n\n// --------renderOrganizationData-----------//\nexport const renderOrganizationData = async () => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/organization`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------renderOrganizationById-----------//\nexport const renderOrganizationById = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/organization/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addOrganization-----------//\nexport const addOrganization = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/organization`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteOrganizationData--------\nexport const deleteOrganizationData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/organization/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editOrganization---------//\nexport const editOrganization = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/organization/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n// renderTeacherData\nexport const renderTeacherData = async () => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/teacher`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// renderTeacherByOrganization\nexport const renderTeacherByOrganization = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/teacher/by-organization/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addTeacher-----------//\nexport const addTeacher = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/teacher`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteTeacherData--------\nexport const deleteTeacherData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/teacher/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editOrganization---------//\nexport const editTeacher = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/teacher/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n\n// --------renderLevelData-----------//\nexport const renderLevelData = async () => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/levels`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addLevel-----------//\nexport const addLevel = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/levels`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteLevelData--------\nexport const deleteLevelData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/levels/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editLevel---------//\nexport const editLevel = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/levels/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n\n\n// --------renderQuestionData-----------//\nexport const renderQuestionData = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/question/by_level/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addQuestion-----------//\nexport const addQuestion = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/question`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteQuestionData--------\nexport const deleteQuestionData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/question/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editQuestion---------//\nexport const editQuestion = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/question/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n\n// --------renderStudentData-----------//\nexport const renderStudentData = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/student`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------renderStudentDataByOrganization-----------//\nexport const renderStudentDataByOrganization = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/student/organization/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addStudent-----------//\nexport const addStudent = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/student`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteStudentData--------\nexport const deleteStudentData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/student/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editQuestion---------//\nexport const editStudent = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/student/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n\n// --------renderExamData-----------//\nexport const renderExamData = async () => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderExamDataById\nexport const renderExamDataById = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderStudentExamData\nexport const renderStudentExamData = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/get-exam-student-by-exam-id/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//removedStudentExamData\nexport const removedStudentExamData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/exam/removed-student-from-exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//removedStudentExamData\nexport const removedQuestionExamData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/exam/removed-question-from-exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n// -------addExam-----------//\nexport const addExam = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteExamData--------\nexport const deleteExamData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editExam---------//\nexport const editExam = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/exam/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------renderExamDataByOrganization-----------//\nexport const renderExamDataByOrganization = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/by-organization-id/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderExamDataByOrganizationForAdmin\nexport const renderExamDataByOrganizationForAdmin = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/by-organization-id-for-admin/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------renderExamQuestionData-----------//\nexport const renderExamQuestionData = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/get-exam-qestion-by-exam-id/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n//addStudentToExam\nexport const addStudentToExam = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/add-exam-student`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderNotExitStudent\nexport const renderNotExitStudent = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/organization-student-not-exit`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderNotExitStudent\nexport const renderNotExitQuestion= async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/question-not-exit`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//addStudentToExam\nexport const addQuestionToExam = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/add-exam-question`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------scheduleExam-----------//\nexport const scheduleExam = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/schedule-exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------renderStudentExamById------//\nexport const renderStudentExamById = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam-submission/by-examination-id/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// updateStudentCertificate\nexport const updateStudentCertificate = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/update-student-certificate`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// updateGenerateCertificate\nexport const updateGenerateCertificate = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/update-student-certificate-generate/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n// updateDataForDashboard\nexport const renderDataForDashboard = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/recent/dashboard`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//UpdateExamData\nexport const uploadBulkQuestion = async ( data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/question/bulk`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}","import React, { useState } from 'react';\nimport {\n    CCardGroup,\n    CRow,\n    CWidgetStatsC,\n    CCol\n\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {\n    cilBasket,\n    cilChartPie,\n    cilPeople,\n    cilSpeech,\n    cilSpeedometer,\n    cilUserFollow,\n    cilClock,\n    cilAvTimer,\n    cilCenterFocus\n} from '@coreui/icons'\n\n\nconst ExamWidget = (prop) => {\n    console.log(\"prop\", prop)\n    const convertDate = (date) => {\n        // Format the date\n        const formattedDate = new Date(date).toLocaleDateString(\"en-GB\", {\n            day: \"numeric\",\n            month: \"short\",\n            year: \"numeric\",\n        });\n\n        // Format the time\n        const formattedTime = new Date(date).toLocaleTimeString(\"en-US\", {\n            hour: \"numeric\",\n            minute: \"numeric\",\n            hour12: true,\n        });\n\n        return `${formattedDate} ${formattedTime}`;\n    }\n    return (\n        <CRow>\n            <CCardGroup className=\"mb-4\">\n                <CCol md={3}  className='mt-md-0 mt-2'>\n                    <CWidgetStatsC\n                        icon={<CIcon icon={cilSpeech} height={36} />}\n                        value={prop.data[0]?.exam_name}\n                        title=\"Exam Name\"\n                    // progress={{ color: 'info', value: 75 }}\n                    />\n                </CCol>\n\n                <CCol md={3} className='mt-md-0 mt-2'>\n                    <CWidgetStatsC\n                        icon={<CIcon icon={cilUserFollow} height={36} />}\n                        value={prop.data[0]?.organization_id.name}\n                        title=\"Organization Details\"\n                    // progress={{ color: 'success', value: 75 }}\n                    />\n                </CCol>\n                <CCol md={3} className='mt-md-0 mt-2'>\n                    <CWidgetStatsC\n                        icon={<CIcon icon={cilBasket} height={36} />}\n                        value={prop.data[0]?.level_id.name}\n                        title=\"Level Details\"\n                    // progress={{ color: 'warning', value: 75 }}\n                    />\n                </CCol>\n                <CCol md={3} className='mt-md-0 mt-2'>\n                    <CWidgetStatsC\n                        icon={<CIcon icon={cilChartPie} height={36} />}\n                        value={prop.data[0]?.teacher_id.name}\n                        title=\"Incharge Teacher Name\"\n                    // progress={{ color: 'primary', value: 75 }}\n                    />\n                </CCol>\n                <CCol md={3} className='mt-md-0 mt-2'>\n                    <CWidgetStatsC\n                        icon={<CIcon icon={cilClock} height={36} />}\n                        value={convertDate(prop.data[0]?.examDateTime)}\n                        title=\"Start Date and Time\"\n                    // progress={{ color: 'danger', value: 75 }}\n                    />\n                </CCol>\n                <CCol md={3} className='mt-md-0 mt-2'>\n                    <CWidgetStatsC\n                        icon={<CIcon icon={cilClock} height={36} />}\n                        value={convertDate(prop.data[0]?.examEndDateTime)}\n                        title=\"Start Date and Time\"\n                    // progress={{ color: 'danger', value: 75 }}\n                    />\n                </CCol>\n\n                <CCol md={3} className='mt-md-0 mt-2'>\n                    <CWidgetStatsC\n                        icon={<CIcon icon={cilAvTimer} height={36} />}\n                        value={prop.data[0]?.exam_duration}\n                        title=\"Exam Duration\"\n\n                    />\n                </CCol>\n                <CCol md={3} className='mt-md-0 mt-2'>\n                    <CWidgetStatsC\n                        icon={<CIcon icon={cilCenterFocus} height={36} />}\n                        value={prop.data[0]?.total_marks}\n                        title={`Total Marks, Total ${prop.data[0]?.total_marks} Question Allowed`}\n                    />\n\n                </CCol>\n            </CCardGroup>\n        </CRow>\n    )\n}\n\nexport default ExamWidget;\n","import React from 'react';\nimport { PDFDownloadLink, Document, Page, Image, StyleSheet, View } from '@react-pdf/renderer';\nimport certificate from \"src/assets/own_img/certificate.jpeg\"\nimport { Button, Modal } from \"react-bootstrap\";\nimport { FaDownload, } from \"react-icons/fa\";\n\n\n\n\n\nconst imageUrl = \"https://res.cloudinary.com/dqdnj2szc/image/upload/v1709392944/img/certificate_x9pglq.jpg\"\n\n// Define styles\nconst styles = StyleSheet.create({\n    page: {\n        backgroundColor: '#fff',\n        flexDirection: 'column', // Arrange images vertically\n        justifyContent: 'flex-start', // Align images to the start of the page\n        marginBottom: 20, // Adjust margin between pages\n    },\n    section: {\n        marginBottom: 5, // Adjust margin between images\n    },\n    image: {\n        // marginLeft:10,\n        // marginRight:10,\n        width: '100%',\n        height: '410px',\n        marginBottom:\"5px\"\n    },\n});\n\nfunction MyPDF({ data }) {\n    // Generate an array of unique image URLs\n    const imageUrls = [...new Set(data.map(item => item.exam_certificate))];\n\n    // Group image URLs into pairs\n    const imagePairs = [];\n    for (let i = 0; i < imageUrls.length; i += 2) {\n        imagePairs.push(imageUrls.slice(i, i + 2));\n    }\n\n    return (\n        <Document>\n            {imagePairs.map((pair, index) => (\n                <Page key={index} size=\"A4\" style={styles.page}>\n                    {pair.map((url, i) => (\n                        <View key={i} style={styles.section}>\n                            <Image src={url} style={styles.image} />\n                        </View>\n                    ))}\n                </Page>\n            ))}\n        </Document>\n    );\n}\n\n\nfunction DownloadAllCertificate({ examId, data }) {\n    let arrayOfObjects = data.filter(obj => obj.is_completed !== false);\n\n    return (\n        <div>\n\n            <PDFDownloadLink document={<MyPDF data={arrayOfObjects} />} fileName={`${data[0]?.exam_id.exam_name}.pdf`}>\n                {({ blob, url, loading, error }) =>\n                    loading ? 'Loading Certificate...' : <>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-danger text-white\"\n                            style={{\"cursor\":\"pointer\"}}\n\n                        >\n                            <FaDownload></FaDownload> Download All Certificate\n                        </button></>\n                }\n            </PDFDownloadLink>\n        </div>\n    );\n}\n\nexport default DownloadAllCertificate;","import React, { useEffect, useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { addStudentToExam, renderNotExitStudent, renderStudentDataByOrganization, updateGenerateCertificate, updateStudentCertificate } from \"src/utility/api\";\nimport Cookies from \"js-cookie\";\nimport { useParams } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { FaDownload } from \"react-icons/fa\";\nimport DownloadAllCertificate from \"./DownloadAllCertificate\";\nimport html2canvas from 'html2canvas';\nimport certificate from \"src/assets/own_img/certificate.jpeg\"\nimport { useNavigate } from 'react-router-dom'\nimport { AiOutlineUndo } from \"react-icons/ai\";\nimport Swal from \"sweetalert2\";\n\n\n\n\n\n\n\nfunction AddStudent({ updateData, examData, isExamDone, data }) {\n\n    const { id } = useParams();\n    const [modalOpen, setModalOpen] = useState(false);\n    const [showDownload, setShowDownload] = useState(false);\n    const [showSwalLoader, setShowSwalLoader] = useState(false);\n\n    const [selectedStudents, setSelectedStudents] = useState([]);\n    const [studentsData, setStudentData] = useState([]);\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        if (examData[0]?.organization_id._id) {\n            renderStudent(examData[0]?.organization_id._id)\n        }\n    }, [examData]);\n\n\n    useEffect(() => {\n        if (showSwalLoader) {\n            Swal.fire({\n                title: \"Please Wait\",\n                text: \"We are generating your all certificate, It might take some time. Please wait.\",\n                showConfirmButton: false,\n                allowOutsideClick: false,\n                icon: \"info\",\n            });\n        } else {\n            Swal.close();\n\n        }\n\n\n    }, [showSwalLoader]);\n\n\n    const renderStudent = async (orgId) => {\n        let obj = {\n            \"exam_id\": id,\n            \"org_id\": orgId\n        }\n        const response = await renderNotExitStudent(obj);\n        if (response.success) {\n            setStudentData(response.data);\n            setShowDownload(true)\n        }\n\n    }\n\n    const toggleModal = () => {\n        setModalOpen(!modalOpen);\n    };\n\n    const handleSelectChange = (selectedOptions) => {\n        setSelectedStudents(selectedOptions.map(option => option.value));\n    };\n\n    const handleSubmit = async (e) => {\n\n        try {\n            e.preventDefault();\n\n            if (selectedStudents.length == 0) {\n                toast.error(\"Please select atleast one student\", {\n                    position: toast.POSITION.TOP_RIGHT,\n                    autoClose: 3000,\n                });\n                return;\n            }\n            selectedStudents.map(async (studentId) => {\n                const obj = {\n                    \"exam_id\": id,\n                    \"student_id\": studentId\n                }\n                await addStudentToExam(obj)\n            })\n\n            toast.success(\"Student added successfully\", {\n                position: toast.POSITION.TOP_RIGHT,\n                autoClose: 3000,\n            });\n\n\n            toggleModal();\n            setTimeout(() => {\n                updateData();\n                renderStudent();\n            }, 2000);\n            // await \n\n\n        } catch (err) {\n            toast.error(\"Something went wrong...!\", {\n                position: toast.POSITION.TOP_RIGHT,\n                autoClose: 3000,\n            });\n        }\n\n    };\n\n    const options = studentsData.map(student => ({\n        value: student._id,\n        label: `${student.name} - ${student.level_id.name}`\n    }));\n\n    //downloadCertificate\n    const downloadAllCertificate = async () => {\n\n    }\n    //generateCertificateImage\n    const generateCertificateImage = (info) => {\n        return new Promise((resolve, reject) => {\n            const image = new Image();\n            image.src = certificate; // Assuming 'certificate' is a valid URL or base64 image data\n\n            image.onload = async () => {\n                const canvas = document.createElement('canvas');\n                const ctx = canvas.getContext('2d');\n\n                canvas.width = image.naturalWidth;\n                canvas.height = image.naturalHeight;\n\n                ctx.drawImage(image, 0, 0);\n\n                const examDateTime = new Date(info.exam_id.examDateTime);\n                const exam_date = examDateTime.toLocaleDateString(\"en-GB\", {\n                    day: \"2-digit\",\n                    month: \"2-digit\",\n                    year: \"numeric\",\n                });\n\n                ctx.font = '30px Arial';\n                ctx.fillStyle = 'black';\n                ctx.fillText(`${info.student_id.name}`, 528, 650);\n                ctx.fillText(`${info.exam_id.level_id.name}`, 810, 800);\n                ctx.fillText(`${info.exam_id.organization_id.address}`, 940, 910);\n                ctx.fillText(`${exam_date}`, 677, 910);\n\n                const imageData = canvas.toDataURL('image/png');\n\n                try {\n                    const imgData = await handleUpload(imageData);\n                    const obj = {\n                        \"examination_id\": info._id,\n                        \"image\": imgData.secure_url\n                    };\n                    await generateCertificateUpdate(obj);\n                    resolve();\n                } catch (error) {\n                    reject(error);\n                }\n            };\n        });\n    };\n\n    //handleUpload\n    const handleUpload = (imageData) => {\n        return new Promise((resolve, reject) => {\n            const formData = new FormData();\n            formData.append('file', imageData);\n            formData.append('upload_preset', 'school_management');\n\n            fetch(`https://api.cloudinary.com/v1_1/dqdnj2szc/image/upload`, {\n                method: 'POST',\n                body: formData,\n            }).then(response => response.json())\n                .then(data => resolve(data))\n                .catch(error => reject(error));\n        });\n    };\n\n    //generateAllCertificate\n    //generateAllCertificate\n    const generateAllCertificate = () => {\n        return new Promise(async (resolve, reject) => {\n            const confirmDelete = await Swal.fire({\n                title: \"Are you sure to generate all certificate?\",\n                text: \"You will not be able to recover this!\",\n                icon: \"success\",\n                showCancelButton: true,\n                confirmButtonColor: \"#28a745\",\n                cancelButtonColor: \"#3085d6\",\n                confirmButtonText: \"Yes, Generate it!\",\n            });\n\n            if (confirmDelete.isConfirmed) {\n                try {\n                    setShowSwalLoader(true)\n                    \n                   let arrayOfObjects = data.filter(obj => obj.is_completed !== false);\n                   console.log(\"arrayOfObjects\", arrayOfObjects)\n                    let count = 0;\n                    let count_data = arrayOfObjects.length;\n\n                    await Promise.all(arrayOfObjects.map(async (info) => {\n                        await generateCertificateImage(info);\n                        count++;\n\n                    }));\n\n                    if (count === count_data) {\n                        const response = await updateGenerateCertificate(id);\n                        if (response.success) {\n                            setShowSwalLoader(false)\n                            toast.success(\"Certificate generated successfully\", {\n                                position: toast.POSITION.TOP_RIGHT,\n                                autoClose: 3000,\n                            });\n\n                            setTimeout(() => {\n                                window.location.reload();\n                            }, 2000);\n\n                        } else {\n                            toast.error(\"Something went wrong...!\", {\n                                position: toast.POSITION.TOP_RIGHT,\n                                autoClose: 3000,\n                            });\n                            Swal.close();\n                        }\n                        resolve();\n                    }\n                } catch (error) {\n                    reject(error);\n                }\n            }\n        });\n    };\n\n\n    //generateCertificateUpdate\n    const generateCertificateUpdate = (obj) => {\n        return new Promise((resolve, reject) => {\n            updateStudentCertificate(obj)\n                .then(() => resolve())\n                .catch(error => reject(error));\n        });\n    };\n\n    return (\n        <div className=\"container bg-white mt-3\">\n            <div className=\"row\">\n                <div className=\"col-6 my-3\">\n                    <h3>Exam Student Info</h3>\n                </div>\n                {!isExamDone ? <><div className=\"col-6 my-3 text-end\">\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={toggleModal}\n                    >\n                        Add Student\n                    </button>\n                </div></> : <><div className=\"col-6 my-3 text-end\">\n\n                    {examData[0].is_generated ? <> <DownloadAllCertificate examId={id} data={data}></DownloadAllCertificate></> : <><button\n                        type=\"button text-white\"\n                        className=\"btn btn-danger\"\n                        style={{ color: \"white\" }}\n                        onClick={generateAllCertificate}\n                    >\n                        <AiOutlineUndo></AiOutlineUndo>  Generate Certificate\n                    </button></>}\n\n\n\n                </div></>}\n\n                <hr />\n            </div>\n\n            <Modal show={modalOpen} onHide={toggleModal} backdrop=\"static\">\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Student</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Select\n                        options={options}\n                        isMulti\n                        closeMenuOnSelect={false}\n                        onChange={handleSelectChange}\n                        value={options.filter(option => selectedStudents.includes(option.value))}\n                    />\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={handleSubmit}>\n                        Save\n                    </Button>\n                    <Button variant=\"secondary\" onClick={toggleModal}>\n                        Cancel\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n        </div>\n    );\n}\n\nexport default AddStudent;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { addQuestionToExam, renderNotExitStudent, renderNotExitQuestion } from \"src/utility/api\";\nimport Cookies from \"js-cookie\";\nimport { useParams } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n\n\nfunction AddQuestion({ renderQuestionData, examData, isExamDone }) {\n\n    const { id } = useParams();\n\n    const [modalOpen, setModalOpen] = useState(false);\n    const [selectedStudents, setSelectedStudents] = useState([]);\n    const [studentsData, setStudentData] = useState([]);\n\n    useEffect(() => {\n        if (examData[0]?.organization_id._id) {\n            renderStudent(examData[0]?.level_id._id)\n        }\n    }, [examData]);\n\n\n    const renderStudent = async (level_id) => {\n\n        let obj = {\n            \"exam_id\": id,\n            \"level_id\": level_id\n        }\n        const response = await renderNotExitQuestion(obj);\n        setStudentData(response.data);\n\n    }\n\n    const toggleModal = () => {\n        setModalOpen(!modalOpen);\n    };\n\n    const handleSelectChange = (selectedOptions) => {\n        setSelectedStudents(selectedOptions.map(option => option.value));\n    };\n\n    const handleSubmit = async (e) => {\n        try {\n            e.preventDefault();\n            console.log(\"Selected students:\", selectedStudents);\n            if (selectedStudents.length === 0) {\n                toast.error(\"Please select at least one question\", {\n                    position: toast.POSITION.TOP_RIGHT,\n                    autoClose: 3000,\n                });\n                return;\n            }\n\n            let allRequestsSuccessful = true;\n            for (let i = 0; i < selectedStudents.length; i++) {\n                const studentId = selectedStudents[i];\n                const obj = {\n                    \"exam_id\": id,\n                    \"question_id\": studentId\n                };\n                try {\n                    const response = await addQuestionToExam(obj);\n                    if (!response.success) {\n                        allRequestsSuccessful = false;\n\n                        toast.error(`${response.message}`, {\n                            position: toast.POSITION.TOP_RIGHT,\n                            autoClose: 10000,\n                        });\n                        toggleModal();\n                        setTimeout(() => {\n                            renderQuestionData();\n                            renderStudent();\n                        }, 2000);\n                        // throw new Error(response.message || \"Failed to add question\");\n                    }\n                } catch (error) {\n                    console.error(\"Error adding question:\", error.message);\n                    toast.error(`${error.message}`, {\n                        position: toast.POSITION.TOP_RIGHT,\n                        autoClose: 3000,\n                    });\n                }\n            }\n\n            if (allRequestsSuccessful) {\n                toast.success(\"Questions added successfully\", {\n                    position: toast.POSITION.TOP_RIGHT,\n                    autoClose: 3000,\n                });\n\n                toggleModal();\n                setTimeout(() => {\n                    renderQuestionData();\n                    renderStudent();\n                }, 2000);\n            }\n\n        } catch (err) {\n            console.error(\"Error:\", err);\n            toast.error(\"Something went wrong...!\", {\n                position: toast.POSITION.TOP_RIGHT,\n                autoClose: 3000,\n            });\n        }\n    };\n\n\n\n\n    const options = studentsData.map(student => ({\n        value: student._id,\n        label: student.question\n    }));\n\n    return (\n        <div className=\"container bg-white mt-5\" >\n            <div className=\"row\">\n                <div className=\"col-6 my-3\">\n                    <h3>Exam Question Info</h3>\n                </div>\n\n                {!isExamDone ? <>\n                    <div className=\"col-6 my-3 text-end\">\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-primary\"\n                            onClick={toggleModal}\n                        >\n                            Add Question\n                        </button>\n                    </div></> : \"\"}\n\n                <hr />\n            </div>\n\n            <Modal show={modalOpen} onHide={toggleModal} backdrop=\"static\" >\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Question</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Select\n                        options={options}\n                        isMulti\n                        closeMenuOnSelect={false}\n                        onChange={handleSelectChange}\n                        value={options.filter(option => selectedStudents.includes(option.value))}\n                    />\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={handleSubmit}>\n                        Save\n                    </Button>\n                    <Button variant=\"secondary\" onClick={toggleModal}>\n                        Cancel\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n        </div>\n    );\n}\n\nexport default AddQuestion;\n\n","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Table } from 'react-bootstrap';\nimport { FaCheck, FaCross, FaTimes, } from 'react-icons/fa';\nimport { useParams } from 'react-router-dom';\nimport { renderStudentExamById } from 'src/utility/api';\n\n\n\n\n\n\nfunction ShowAnswerPapper({ showModal, closeModal, studentExamId }) {\n\n    const [data, setData] = useState([]);\n    const [answer, setAnswer] = useState(\"\");\n\n    useEffect(() => {\n        renderData()\n\n    }, []);\n\n    const renderData = async () => {\n        const response = await renderStudentExamById(studentExamId);\n        if (response.success) {\n            setData(response.data);\n        }\n\n    };\n\n    console.log(\"data\", data)\n\n    return (\n        <Modal show={showModal} onHide={closeModal} size=\"lg\">\n            <Modal.Header closeButton>\n                <Modal.Title>Answer Paper</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div className='row'>\n                    <div className='col-12'>\n\n                        {/* <div className='row'>\n                            <div className='col-12'>\n                                <p>1. How is best all rounder in cricket in all time?</p>\n                            </div>\n                            <div className='col-6 px-4'>\n                                <p className='right_answer'> <span>1)</span> Answer</p>\n                            </div>\n                            <div className='col-6 px-4'>\n                                <p> <span>2)</span> Answer</p>\n                            </div>\n                            <div className='col-6 px-4'>\n                                <p> <span>3)</span> Answer</p>\n                            </div>\n                            <div className='col-6 px-4'>\n                                <p className=''> <span>4)</span> Answer</p>\n                            </div>\n\n                            <div className='col-12 text-end'>\n                                <p><b>Answer- </b><span>1</span> (<span> <FaCheck color='green'></FaCheck></span>)</p>\n\n                            </div>\n\n                        </div>\n                        <hr></hr> */}\n\n                        {data.map((item, index) => (\n                            <div key={index}>\n                                <p>{index + 1}. {item.question_id.question}</p>\n                                <div className='row'>\n                                    {item.options.map((option, i) => {\n                                        let className = '';\n                                        if (option.is_answer && option.is_true) {\n                                            className = 'right_answer';\n                                        } else if (option.is_answer) {\n                                            className = 'wrong_answer';\n                                        }\n                                        return (\n                                            <div key={i} className='col-6 px-4'>\n                                                <p className={className}><span>{i + 1})</span> {option.name}</p>\n                                            </div>\n                                        );\n                                    })}\n\n                                </div>\n\n                                {item.options.map((option, i) => {\n                                    if (option.is_true) {\n                                    \n                                        return (\n                                            <div className='col-12 text-end'>\n                                                <p><b>Answer- </b><span>{option.name}</span>  (<span className='colorRed'> {item?.is_question_answer_right?<FaCheck color='green'></FaCheck>:<>X</>} </span>)</p>\n\n                                            </div>\n                                        )\n                                    }\n                                })}\n\n\n                                <hr />\n                            </div>\n                        ))}\n\n\n                    </div>\n                    <div className='col-12'>\n                        <h2>Results</h2>\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>Total Question</th>\n                                    <th>Right Answer</th>\n                                    <th>Wrong Answer</th>\n                                    <th>Total Score</th>\n\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>{data.length}</td>\n                                    <td>{data[0]?.examination_id.correct_questions}</td>\n                                    <td>{data[0]?.examination_id.wrong_questions}</td>\n                                    <td>{data[0]?.examination_id.exam_score}</td>\n\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </div>\n\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={closeModal}>\n                    Close\n                </Button>\n\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default ShowAnswerPapper;\n","\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport { FaDownload, FaPrint } from 'react-icons/fa';\nimport certificate from \"src/assets/own_img/certificate.jpeg\"\nimport jsPDF from 'jspdf';\n\nconst CertificateGenerator = ({ data, setIsCertificateModalOpen }) => {\n    const [imageLoaded, setImageLoaded] = useState(false);\n    const imageRef = useRef(null);\n    const canvasRef = useRef(null);\n\n    useEffect(() => {\n        if (!imageLoaded) return;\n\n        const examDateTime = new Date(data.exam_id.examDateTime);\n        const exam_date = examDateTime.toLocaleDateString(\"en-GB\", {\n            day: \"2-digit\",\n            month: \"2-digit\",\n            year: \"numeric\",\n        });\n        const ctx = canvasRef.current.getContext('2d');\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n        ctx.drawImage(imageRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n        ctx.font = '30px Arial';\n        ctx.fillStyle = 'black';\n        ctx.fillText(`${data.student_id.name}`, 528, 650);\n        ctx.fillText(`${data.exam_id.level_id.name}`, 810, 800);\n        ctx.fillText(`${data.exam_id.organization_id.address}`, 940, 910);\n        ctx.fillText(`${exam_date}`, 677, 910);\n    }, [data.student_id.name, imageLoaded]);\n\n    const handleDownload = () => {\n        const link = document.createElement('a');\n        link.download = `certificate_${data.student_id.name}.png`;\n        link.href = canvasRef.current.toDataURL('image/png');\n        link.click();\n    };\n\n    const handlePrint = () => {\n        // Convert canvas image to data URL\n        const dataUrl = canvasRef.current.toDataURL('image/png');\n    \n        // Create a new PDF document\n        const pdf = new jsPDF('p', 'mm', 'a4');\n    \n        // Calculate aspect ratio of the image\n        const img = new Image();\n        img.src = dataUrl;\n        img.onload = function() {\n            const aspectRatio = img.width / img.height;\n            const width = 210; // A4 page width in mm\n            const height = width / aspectRatio;\n    \n            // Calculate padding\n            const padding = 5; // Padding in mm\n            const paddedWidth = width - (padding * 2);\n            const paddedHeight = height - (padding * 2);\n            const x = padding;\n            const y = padding;\n    \n            // Add the image to the PDF document with padding\n            pdf.addImage(dataUrl, 'PNG', x, y, paddedWidth, paddedHeight);\n    \n            // Save the PDF document and open the print dialog\n            pdf.autoPrint(); // Automatically print the document without showing the print dialog\n            pdf.save(`certificate_${data.student_id.name}.pdf`);\n        };\n    };\n    \n    \n\n    return (\n        <div>\n            <Modal\n                show={true}\n                onHide={() => setIsCertificateModalOpen(false)}\n                dialogClassName=\"modal-125w\"\n                contentClassName=\"modal-content-100w\"\n                size=\"xl\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Certificate</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <canvas ref={canvasRef} width=\"100%\" height=\"auto\" style={{ width: \"-webkit-fill-available\" }}></canvas>\n                    <img\n                        ref={imageRef}\n                        src={certificate}\n                        alt=\"Certificate\"\n                        style={{ display: 'none', }}\n                        onLoad={() => {\n                            setImageLoaded(true);\n                            canvasRef.current.width = imageRef.current.naturalWidth;\n                            canvasRef.current.height = imageRef.current.naturalHeight;\n                        }}\n                    />\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"success\" style={{ color: \"white\" }} onClick={handleDownload}><FaDownload /> Download Certificate</Button>\n                    <Button variant=\"primary\" onClick={handlePrint}><FaPrint /> Print Certificate</Button>\n                    <Button variant=\"secondary\" onClick={() => setIsCertificateModalOpen(false)}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n};\n\nexport default CertificateGenerator;\n","import React, { useState, useEffect } from 'react';\nimport { FaEdit, FaTrash, FaEye, FaDownload } from \"react-icons/fa\";\nimport DataTable from '../ownComponent/DataTable';\nimport {\n  CButton,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormFeedback,\n  CFormLabel,\n  CFormSelect,\n} from \"@coreui/react\";\nimport { useParams } from 'react-router-dom';\nimport ExamWidget from './ExamWidget';\nimport { removedStudentExamData, renderExamDataById, renderExamQuestionData, renderStudentExamData, removedQuestionExamData, scheduleExam } from 'src/utility/api';\nimport Swal from \"sweetalert2\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport AddStudent from './AddStudent';\nimport AddQuestion from './AddQuestion';\nimport ShowAnswerPapper from './ShowAnswerPapper';\nimport CertificateGenerator from './CertificateGenerator';\nimport CertificatePDFGenerator from './CertificatePDFGenerator';\nimport certificate from \"src/assets/own_img/certificate.jpeg\"\n\nfunction ExamInfo() {\n  const { id } = useParams();\n\n  const [data, setData] = useState([]);\n  const [examData, setExamData] = useState([]);\n  const [examQuestionData, setQuestionExamData] = useState([]);\n  const [isExamDone, setIsExamDone] = useState(false);\n  const [isExamSchedule, setIsExamSchedule] = useState(false);\n  const [showAnswerModal, setAnswerModal] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [studentExamId, setStudentExamId] = useState(null);\n  const [examDataForPrint, setExamDataForPrint] = useState({});\n \n\n\n\n  const [showModal, setShowModal] = useState(false);\n  const [name, setName] = useState('');\n  const [isCertificateModalOpen, setIsCertificateModalOpen] = useState(false)\n  const handleDownload = () => {\n    setShowModal(false);\n    // Handle the download logic here\n  };\n\n\n\n  useEffect(() => {\n    renderExamData()\n    renderData();\n    renderQuestionData()\n\n  }, []);\n\n  // render data\n  const renderData = async () => {\n    const response = await renderStudentExamData(id);\n\n    if (response.success) {\n      setData(response.data);\n    }\n\n  };\n\n  //renderExamData\n  const renderExamData = async () => {\n    const response = await renderExamDataById(id);\n    if (response.success) {\n\n      setExamData(response.data);\n\n      setIsExamSchedule(response.data[0].is_schedule)\n\n      //check done or not\n      const startDate = new Date(response.data[0].examDateTime);\n      const endDate = new Date(response.data[0].examEndDateTime);\n      const currentDate = new Date();\n\n\n\n      if (currentDate < startDate) {\n        setIsExamDone(false);\n      } else if (currentDate >= startDate && currentDate <= endDate) {\n        // setIsExamDone(true);\n\n      } else {\n        setIsExamDone(true);\n      }\n\n     \n    }\n\n  };\n\n  //renderQuestionData\n  const renderQuestionData = async () => {\n    const response = await renderExamQuestionData(id); (id);\n    if (response.success) {\n      setQuestionExamData(response.data);\n\n      // setIsExamSchedule(examData[0].exam_id.is_schedule)\n\n\n    }\n\n  };\n\n  // Delete Student From Exam\n  const handleDelete = async (id) => {\n    const confirmDelete = await Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You will not be able to recover this student!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#d33\",\n      cancelButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, delete it!\",\n    });\n\n    if (confirmDelete.isConfirmed) {\n      try {\n        const response = await removedStudentExamData(id);\n        if (response.success) {\n          toast.success(response.message, {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 3000,\n          });\n          renderData();\n        }\n      } catch (error) {\n        toast.error(error.message, {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 3000,\n        });\n      }\n    }\n  };\n\n  //handleQuestionDelete\n  const handleQuestionDelete = async (id) => {\n    const confirmDelete = await Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You will not be able to recover this student!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#d33\",\n      cancelButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, delete it!\",\n    });\n\n    if (confirmDelete.isConfirmed) {\n      try {\n        const response = await removedQuestionExamData(id);\n        if (response.success) {\n          toast.success(response.message, {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 3000,\n          });\n          renderQuestionData();\n        }\n      } catch (error) {\n        toast.error(error.message, {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 3000,\n        });\n      }\n    }\n  };\n\n  //updateData\n  const updateData = async () => {\n    await renderData();\n  };\n\n  //updateQuestionData\n  const updateQuestionData = async () => {\n    await renderQuestionData();\n  };\n\n  //scheduleExam\n  const scheduleExamFunction = async () => {\n    const confirmDelete = await Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You will not be able to recover this!\",\n      icon: \"success\",\n      showCancelButton: true,\n      confirmButtonColor: \"#28a745\",\n      cancelButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, Schedule it!\",\n    });\n\n    if (confirmDelete.isConfirmed) {\n      try {\n        const response = await scheduleExam(id);\n        if (response.success) {\n          toast.success(response.message, {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 3000,\n          });\n          renderQuestionData();\n          setIsExamSchedule(true)\n        }\n      } catch (error) {\n        toast.error(error.message, {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 3000,\n        });\n      }\n    }\n  }\n\n  //downloadCertificate\n  const downloadCertificate = (rowData) => {\n   \n    setExamDataForPrint(rowData)\n    setIsCertificateModalOpen(true)\n  }\n\n\n  //viewAnswerPaper\n  const viewAnswerPaper = (id) => {\n   \n    setStudentExamId(id)\n    setIsModalOpen(true)\n  }\n\n  //closeModal\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  // Function to handle modal close\n  const handleCloseModal = () => {\n    setIsCertificateModalOpen(false);\n  };\n\n  const columns = [\n    { Header: \"Student Name\", accessor: \"student_id.name\" },\n    { Header: \"Mobile Number\", accessor: \"student_id.mobile_number\" },\n    { Header: \"Role Number\", accessor: \"student_id.roll_no\" },\n    { Header: \"Level Name\", accessor: \"exam_id.level_id.name\" },\n    { Header: \"Organization Name\", accessor: \"exam_id.organization_id.name\" },\n    { Header: \"Created Type\", accessor: \"student_id.created_type\" },\n    { Header: \"Exam Marks\", accessor: \"exam_score\", Cell: ({ value }) => (value) },\n    { Header: \"Exam Status\", accessor: \"is_completed\", Cell: ({ value }) => (value ? \"Completed\" : \"Not Attempted\") },\n\n    {\n      Header: \"Actions\",\n      accessor: \"_id\", // Assuming you have an 'id' property in your teacher data\n      Cell: ({ row }) => (\n        <>\n\n\n          {!isExamDone ? <>\n            <CButton\n              color=\"danger\"\n              size=\"sm\"\n              style={{ color: \"white\" }}\n              onClick={() => handleDelete(row.original._id)}\n            >\n              <FaTrash /> Delete\n            </CButton>\n          </> : <>\n\n            {row.original.is_completed ? <>\n              <CButton\n                color=\"success\"\n                size=\"sm\"\n                style={{ color: \"white\" }}\n                onClick={() => downloadCertificate(row.original)}\n              >\n                <FaEye></FaEye> View Certificate\n              </CButton>\n              <CButton\n                color=\"primary\"\n                size=\"sm\"\n                style={{ color: \"white\", margin: \"0 10px\" }}\n                onClick={() => viewAnswerPaper(row.original._id)}\n              >\n                <FaEye /> View Answer Paper\n              </CButton></> : \"-\"}\n\n          </>}\n        </>\n      ),\n    },\n  ];\n\n  const columnsQuestion = [\n    { Header: \"Exam Name\", accessor: \"exam_id.exam_name\" },\n    { Header: \"Question Name\", accessor: \"question_id.question\" },\n    { Header: \"Question Type\", accessor: \"question_id.is_type\" },\n    {\n      Header: \"Actions\",\n      accessor: \"_id\", // Assuming you have an 'id' property in your teacher data\n      Cell: ({ row }) => (\n        <>\n          {!isExamDone ? <>\n            <CButton\n              color=\"danger\"\n              size=\"sm\"\n              style={{ color: \"white\" }}\n              onClick={() => handleQuestionDelete(row.original._id)}\n            >\n              <FaTrash /> Delete\n            </CButton>\n          </> : \"-\"}\n\n        </>\n      ),\n    },\n  ];\n\n\n\n\n  return (\n    <div>\n\n      {!isExamSchedule ? <div className='row my-3'>\n        <div className='col-6'>\n          <h5>Examination Info</h5>\n        </div>\n        <div className='col-6 text-end'>\n          <button className='btn btn-primary' onClick={scheduleExamFunction}> Schedule Exam  </button>\n        </div>\n\n      </div> : \"\"}\n\n      {\n        isExamDone ? <>\n          <div className='row my-3'>\n            <div className='col-12 text-center'>\n              <h5 className='text-danger'>Examination Time End, Now You Can't Delete User And Question Info.\n                Now You Able Download Certificate. Thank You. </h5>\n            </div>\n          </div>\n        </> : \"\"\n      }\n\n      <ExamWidget data={examData}></ExamWidget>\n      <AddStudent updateData={updateData} examData={examData} data={data} isExamDone={isExamDone} />\n      <DataTable columns={columns} data={data} />\n      <AddQuestion renderQuestionData={updateQuestionData} examData={examData} isExamDone={isExamDone} />\n      <DataTable columns={columnsQuestion} data={examQuestionData} name=\"Exam Question Info\" />\n      {isModalOpen ? <ShowAnswerPapper showModal={isModalOpen} closeModal={closeModal} studentExamId={studentExamId} /> : ''}\n      {isCertificateModalOpen ? <CertificateGenerator data={examDataForPrint} setIsCertificateModalOpen={setIsCertificateModalOpen} /> : ''}\n   \n    </div>\n  );\n}\n\nexport default ExamInfo;\n\n","// DataTable.js\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { useTable, usePagination, useSortBy, useGlobalFilter } from 'react-table'\nimport { Table, FormControl, Button } from 'react-bootstrap'\n// import { useState } from 'react'\nimport * as XLSX from 'xlsx'\nimport './DataTable.css' // Import the CSS file\n\nconst DataTable = ({ columns, data, name }) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    state: { pageIndex, pageSize, globalFilter },\n    setGlobalFilter,\n    gotoPage,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0, pageSize: 10 }, // Set initial pageSize to tablePageSize\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n  )\n\n  const downloadExcel = () => {\n    const excelData = data.map((row) =>\n      columns.reduce((acc, column) => {\n        acc[column.Header] = row[column.accessor]\n        return acc\n      }, {}),\n    )\n\n    const ws = XLSX.utils.json_to_sheet(excelData)\n    const wb = XLSX.utils.book_new()\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet 1')\n    XLSX.writeFile(wb, 'data.xlsx')\n  }\n\n  return (\n    <div className=\"data-table-container\">\n        <h5>{name?name:\"\"}</h5>\n      <div className=\"data-table-header\">\n        <div className=\"search-box-container\">\n          <FormControl\n            type=\"text\"\n            value={globalFilter || ''}\n            onChange={(e) => setGlobalFilter(e.target.value)}\n            placeholder=\"Search...\"\n          />\n          <span className=\"search-icon\">&#x1F50D;</span>\n        </div>\n        <Button onClick={() => downloadExcel()} variant=\"success\" className='download_excel' style={{ color: 'white' }}>\n          Download Excel\n        </Button>\n      </div>\n      <div className=\"table-wrapper\">\n      <Table {...getTableProps()} bordered hover responsive>\n        <thead>\n          <tr>\n            <th>Sr. No.</th>\n            {headerGroups.map((headerGroup) => (\n              <React.Fragment key={headerGroup._id}>\n                {headerGroup.headers.map((column) => (\n                  <th key={column._id} {...column.getHeaderProps(column.getSortByToggleProps())}>\n                    {column.render('Header')}\n                    <span>{column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}</span>\n                  </th>\n                ))}\n              </React.Fragment>\n            ))}\n          </tr>\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr key={row._id} {...row.getRowProps()}>\n                <td>{pageIndex * pageSize + i + 1}</td>\n                {row.cells.map((cell) => (\n                  <td key={cell.column._id} {...cell.getCellProps()}>\n                    {cell.render('Cell')}\n                  </td>\n                ))}\n              </tr>\n            )\n          })}\n        </tbody>\n      </Table>\n      </div>\n     \n      <div className=\"pagination-controls\">\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {'<<'}\n        </button>\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n          {'<'}\n        </button>\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n          {'>'}\n        </button>\n        <button onClick={() => gotoPage(page.length - 1)} disabled={!canNextPage}>\n          {'>>'}\n        </button>\n        <span>\n          &nbsp;Page <strong>{pageIndex + 1}</strong> of {Math.ceil(data.length / pageSize)} pages | Showing {data.length} Records\n        </span>\n      </div>\n    </div>\n  )\n}\n\nDataTable.propTypes = {\n  columns: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n}\n\nexport default DataTable"],"names":["BASE_URL","axiosInstance","axios","create","baseURL","headers","setAuthorizationHeader","bearerToken","Cookies","get","defaults","common","concat","interceptors","response","use","error","status","window","location","href","Promise","reject","loginUser","async","post","userData","data","success","accessToken","token","set","secure","sameSite","name","id","console","log","renderOrganizationData","renderOrganizationById","addOrganization","deleteOrganizationData","delete","editOrganization","patch","renderTeacherData","renderTeacherByOrganization","addTeacher","deleteTeacherData","editTeacher","renderLevelData","addLevel","deleteLevelData","editLevel","renderQuestionData","addQuestion","deleteQuestionData","editQuestion","renderStudentData","renderStudentDataByOrganization","addStudent","deleteStudentData","editStudent","renderExamData","renderExamDataById","renderStudentExamData","removedStudentExamData","removedQuestionExamData","addExam","deleteExamData","editExam","renderExamDataByOrganizationForAdmin","renderExamQuestionData","addStudentToExam","renderNotExitStudent","renderNotExitQuestion","addQuestionToExam","scheduleExam","renderStudentExamById","updateStudentCertificate","updateGenerateCertificate","renderDataForDashboard","uploadBulkQuestion","prop","_prop$data$","_prop$data$2","_prop$data$3","_prop$data$4","_prop$data$5","_prop$data$6","_prop$data$7","_prop$data$8","_prop$data$9","convertDate","date","formattedDate","Date","toLocaleDateString","day","month","year","formattedTime","toLocaleTimeString","hour","minute","hour12","_jsx","CRow","children","_jsxs","CCardGroup","className","CCol","md","CWidgetStatsC","icon","CIcon","cilSpeech","height","value","exam_name","title","cilUserFollow","organization_id","cilBasket","level_id","cilChartPie","teacher_id","cilClock","examDateTime","examEndDateTime","cilAvTimer","exam_duration","cilCenterFocus","total_marks","styles","StyleSheet","page","backgroundColor","flexDirection","justifyContent","marginBottom","section","image","width","MyPDF","_ref","imageUrls","Set","map","item","exam_certificate","imagePairs","i","length","push","slice","Document","pair","index","Page","size","style","url","View","Image","src","_ref2","_data$","examId","arrayOfObjects","filter","obj","is_completed","PDFDownloadLink","document","fileName","exam_id","_ref3","blob","loading","_Fragment","type","FaDownload","updateData","examData","isExamDone","useParams","modalOpen","setModalOpen","useState","showDownload","setShowDownload","showSwalLoader","setShowSwalLoader","selectedStudents","setSelectedStudents","studentsData","setStudentData","useNavigate","useEffect","_examData$","_examData$2","_id","renderStudent","Swal","text","showConfirmButton","allowOutsideClick","orgId","toggleModal","options","student","label","handleUpload","imageData","resolve","formData","FormData","append","fetch","method","body","then","json","catch","generateCertificateUpdate","is_generated","DownloadAllCertificate","color","onClick","generateAllCertificate","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","count","count_data","all","info","certificate","onload","canvas","createElement","ctx","getContext","naturalWidth","naturalHeight","drawImage","exam_date","font","fillStyle","fillText","student_id","address","toDataURL","imgData","secure_url","generateCertificateImage","toast","position","POSITION","TOP_RIGHT","autoClose","setTimeout","reload","AiOutlineUndo","Modal","show","onHide","backdrop","Header","closeButton","Title","Body","Select","isMulti","closeMenuOnSelect","onChange","selectedOptions","option","includes","Footer","Button","variant","e","preventDefault","studentId","err","question","allRequestsSuccessful","message","_data$2","_data$3","showModal","closeModal","studentExamId","setData","answer","setAnswer","renderData","question_id","is_answer","is_true","is_question_answer_right","FaCheck","Table","striped","bordered","hover","examination_id","correct_questions","wrong_questions","exam_score","setIsCertificateModalOpen","imageLoaded","setImageLoaded","imageRef","useRef","canvasRef","current","clearRect","dialogClassName","contentClassName","centered","ref","alt","display","onLoad","handleDownload","link","download","click","handlePrint","dataUrl","pdf","jsPDF","img","paddedHeight","padding","addImage","autoPrint","save","FaPrint","setExamData","examQuestionData","setQuestionExamData","setIsExamDone","isExamSchedule","setIsExamSchedule","showAnswerModal","setAnswerModal","isModalOpen","setIsModalOpen","setStudentExamId","examDataForPrint","setExamDataForPrint","setShowModal","setName","isCertificateModalOpen","is_schedule","startDate","endDate","currentDate","columns","accessor","Cell","row","original","CButton","downloadCertificate","rowData","FaEye","margin","viewAnswerPaper","handleDelete","FaTrash","columnsQuestion","_ref4","handleQuestionDelete","ExamWidget","AddStudent","DataTable","AddQuestion","ShowAnswerPapper","CertificateGenerator","getTableProps","getTableBodyProps","headerGroups","prepareRow","state","pageIndex","pageSize","globalFilter","setGlobalFilter","gotoPage","nextPage","previousPage","canNextPage","canPreviousPage","useTable","initialState","useGlobalFilter","useSortBy","usePagination","FormControl","target","placeholder","downloadExcel","excelData","reduce","acc","column","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","responsive","headerGroup","React","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","getRowProps","cells","cell","getCellProps","disabled","Math","ceil"],"sourceRoot":""}