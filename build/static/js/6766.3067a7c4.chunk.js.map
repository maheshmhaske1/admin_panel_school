{"version":3,"file":"static/js/6766.3067a7c4.chunk.js","mappings":"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","sources":["utility/api.js","views/exam/Exam.js","views/ownComponent/DataTable.js","views/ownComponent/FormsCustom.js"],"sourcesContent":["import axios from 'axios'\nimport Cookies from 'js-cookie'\n\n// const BASE_URL = 'http://localhost:5000'\nconst BASE_URL = 'https://leadplanner.lotusx.shop/api/'\n\n\nexport const axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n})\n\n// Add the token to the headers if it exists in cookies\nconst setAuthorizationHeader = () => {\n  const bearerToken = Cookies.get('accessToken')\n  if (bearerToken) {\n    axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${bearerToken}`\n  }\n}\n\n// Call this function to set the Authorization header\nsetAuthorizationHeader()\n\n// Add a response interceptor\naxiosInstance.interceptors.response.use(\n  response => response,\n  error => {\n    if (error.response && error.response.status === 401) {\n      window.location.href = '/admin-login'\n    }\n    return Promise.reject(error);\n  }\n);\n\n\n// --------loginUser-----------//\nexport const loginUser = async (userData) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/admin/login`, userData)\n    if (response.data.success) {\n      // set token\n      const accessToken = response.data.data.token\n      // set the access token in cookie\n      Cookies.set('accessToken', accessToken, { secure: true, sameSite: 'strict' })\n\n      // set token\n      const name = response.data.data.name\n      // set the access token in cookie\n      Cookies.set('name', name, { secure: true, sameSite: 'strict' })\n\n      const id = response.data.data.id\n      Cookies.set('adminId', id, { secure: true, sameSite: 'strict' })\n\n      setAuthorizationHeader();\n    }\n    return response.data\n  } catch (error) {\n    console.log(\"error\", error)\n    throw error\n  }\n}\n\n// --------renderOrganizationData-----------//\nexport const renderOrganizationData = async () => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/organization`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------renderOrganizationById-----------//\nexport const renderOrganizationById = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/organization/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addOrganization-----------//\nexport const addOrganization = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/organization`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteOrganizationData--------\nexport const deleteOrganizationData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/organization/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editOrganization---------//\nexport const editOrganization = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/organization/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n// renderTeacherData\nexport const renderTeacherData = async () => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/teacher`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// renderTeacherByOrganization\nexport const renderTeacherByOrganization = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/teacher/by-organization/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addTeacher-----------//\nexport const addTeacher = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/teacher`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteTeacherData--------\nexport const deleteTeacherData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/teacher/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editOrganization---------//\nexport const editTeacher = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/teacher/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n\n// --------renderLevelData-----------//\nexport const renderLevelData = async () => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/levels`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addLevel-----------//\nexport const addLevel = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/levels`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteLevelData--------\nexport const deleteLevelData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/levels/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editLevel---------//\nexport const editLevel = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/levels/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n\n\n// --------renderQuestionData-----------//\nexport const renderQuestionData = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/question/by_level/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addQuestion-----------//\nexport const addQuestion = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/question`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteQuestionData--------\nexport const deleteQuestionData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/question/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editQuestion---------//\nexport const editQuestion = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/question/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n\n// --------renderStudentData-----------//\nexport const renderStudentData = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/student`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------renderStudentDataByOrganization-----------//\nexport const renderStudentDataByOrganization = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/student/organization/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addStudent-----------//\nexport const addStudent = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/student`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteStudentData--------\nexport const deleteStudentData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/student/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editQuestion---------//\nexport const editStudent = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/student/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n\n// --------renderExamData-----------//\nexport const renderExamData = async () => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderExamDataById\nexport const renderExamDataById = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderStudentExamData\nexport const renderStudentExamData = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/get-exam-student-by-exam-id/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//removedStudentExamData\nexport const removedStudentExamData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/exam/removed-student-from-exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//removedStudentExamData\nexport const removedQuestionExamData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/exam/removed-question-from-exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n// -------addExam-----------//\nexport const addExam = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteExamData--------\nexport const deleteExamData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editExam---------//\nexport const editExam = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/exam/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------renderExamDataByOrganization-----------//\nexport const renderExamDataByOrganization = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/by-organization-id/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderExamDataByOrganizationForAdmin\nexport const renderExamDataByOrganizationForAdmin = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/by-organization-id-for-admin/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------renderExamQuestionData-----------//\nexport const renderExamQuestionData = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/get-exam-qestion-by-exam-id/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n//addStudentToExam\nexport const addStudentToExam = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/add-exam-student`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderNotExitStudent\nexport const renderNotExitStudent = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/organization-student-not-exit`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderNotExitStudent\nexport const renderNotExitQuestion= async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/question-not-exit`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//addStudentToExam\nexport const addQuestionToExam = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/add-exam-question`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------scheduleExam-----------//\nexport const scheduleExam = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/schedule-exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------renderStudentExamById------//\nexport const renderStudentExamById = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam-submission/by-examination-id/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// updateStudentCertificate\nexport const updateStudentCertificate = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/update-student-certificate`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// updateGenerateCertificate\nexport const updateGenerateCertificate = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/update-student-certificate-generate/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n// updateDataForDashboard\nexport const renderDataForDashboard = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/recent/dashboard`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//UpdateExamData\nexport const uploadBulkQuestion = async ( data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/question/bulk`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}","import React, { useState, useEffect, useRef } from \"react\";\nimport { FaEdit, FaTrash, FaEye } from \"react-icons/fa\";\nimport {\n    CButton,\n    CCol,\n    CForm,\n    CFormInput,\n    CFormFeedback,\n    CFormLabel,\n    CFormSelect,\n} from \"@coreui/react\";\nimport DataTable from \"../ownComponent/DataTable\";\nimport FormsCustom from \"../ownComponent/FormsCustom\";\nimport {\n    renderOrganizationData,\n    renderTeacherData,\n    addExam,\n    editExam,\n    deleteExamData,\n    renderExamData,\n    renderLevelData,\n    renderTeacherByOrganization,\n    renderExamDataByOrganization,\n    renderExamDataByOrganizationForAdmin\n} from \"src/utility/api\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport PropTypes from \"prop-types\";\nimport Swal from \"sweetalert2\";\nimport Select from \"react-select\";\nimport Cookies from 'js-cookie'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useNavigate } from 'react-router-dom'\n\n\n\nfunction Exam(props) {\n\n    // all useState\n    const [data, setData] = useState([]);\n    const [editId, setEditId] = useState(null);\n    const [btnText, setBtnText] = useState(\"Add Examination\");\n    const [isTypeSelected, setIsTypeSelected] = useState(false);\n    const [isTypeSelectedOrganization, setIsTypeSelectedOrganization] = useState(false);\n    const [isTypeSelectedLevel, setIsTypeSelectedLevel] = useState(false);\n    const [organization_option, setOrganizationOption] = useState([]);\n    const [level_option, setLevelOption] = useState([]);\n    const [teacher_option, setTeacherOption] = useState([]);\n    const [isTypeSelectedTeacher, setIsTypeSelectedTeacher] = useState(false);\n    const [isTeacherDisabled, setIsTeacherDisabled] = useState(true);\n    const [isOrgDisabled, setIsOrgDisabled] = useState(false);\n    const [isExamDone, setIsExamDone] = useState(false);\n\n\n\n\n    const navigate = useNavigate()\n    const created_by = Cookies.get('adminId')\n\n    const [formData, setFormData] = useState({\n        exam_name: \"\",\n        total_marks: \"\",\n        level_id: \"\",\n        created_by: created_by,\n        organization_value: null,\n        organization_id: props.id ? props.id : null,\n        level_value: null,\n        level_id: null,\n        examDateTime: null,\n        examEndDateTime: null,\n        teacher_value: null,\n        teacher_id: null,\n        exam_duration: null,\n        duration_value: null\n\n    });\n\n    useEffect(() => {\n        renderData();\n        renderOrganization();\n        renderLevel();\n    }, []);\n\n\n\n\n    // render data\n    const renderData = async () => {\n\n        if (props.id) {\n            const response = await renderExamDataByOrganizationForAdmin(props.id);\n            if (response.success) {\n                setData(response.data);\n            }\n\n            renderTeacherData(props.id)\n            setIsTeacherDisabled(false)\n\n\n        } else {\n            const response = await renderExamData();\n            if (response.success) {\n                setData(response.data);\n            }\n        }\n\n    };\n\n    // render organization\n    const renderOrganization = async () => {\n        const response = await renderOrganizationData();\n        console.log(response);\n        if (response.success) {\n            response.data.map((org) => {\n                org.label = org.name;\n                org.value = org._id;\n            });\n            setOrganizationOption(response.data);\n        }\n    };\n\n    // render level\n    const renderLevel = async () => {\n\n        const response = await renderLevelData();\n        console.log(response);\n        if (response.success) {\n            response.data.map((org) => {\n                org.label = org.name;\n                org.value = org._id;\n            });\n            setLevelOption(response.data);\n        }\n    };\n    const renderTeacherData = async (id) => {\n        const response = await renderTeacherByOrganization(id);\n        console.log(response);\n        if (response.success) {\n            response.data.map((org) => {\n                org.label = org.name;\n                org.value = org._id;\n            });\n            setTeacherOption(response.data);\n        }\n    }\n\n    //edit Student\n    const handleEdit = (id) => {\n        setBtnText(\"Update Examination\");\n        const studentToUpdate = data.find((org) => org._id === id);\n        console.log(studentToUpdate);\n\n        // Extract date and time from examDateTime \n        const examDateTime = new Date(studentToUpdate.examDateTime);\n        const examEndDateTime = new Date(studentToUpdate.examEndDateTime);\n\n\n        setEditId(studentToUpdate._id);\n        setIsTeacherDisabled(false);\n        setIsOrgDisabled(true);\n        setFormData({\n            exam_name: studentToUpdate.exam_name,\n            total_marks: studentToUpdate.total_marks,\n            organization_value: {\n                value: studentToUpdate.organization_id._id,\n                label: studentToUpdate.organization_id.name,\n            },\n            organization_id: studentToUpdate.organization_id._id,\n            level_value: {\n                value: studentToUpdate.level_id._id,\n                label: studentToUpdate.level_id.name,\n            },\n            level_id: studentToUpdate.level_id._id,\n            duration_value: {\n                value: studentToUpdate.exam_duration,\n                label: studentToUpdate.exam_duration,\n            },\n            exam_duration: studentToUpdate.exam_duration,\n\n            teacher_value: {\n                value: studentToUpdate.teacher_id._id,\n                label: studentToUpdate.teacher_id.name,\n            },\n            teacher_id: studentToUpdate.teacher_id._id,\n            examDateTime: examDateTime,\n            examEndDateTime: examEndDateTime\n        });\n    };\n\n\n    // Delete Exam\n    const handleDelete = async (id) => {\n        const confirmDelete = await Swal.fire({\n            title: \"Are you sure?\",\n            text: \"You will not be able to recover this student!\",\n            icon: \"warning\",\n            showCancelButton: true,\n            confirmButtonColor: \"#d33\",\n            cancelButtonColor: \"#3085d6\",\n            confirmButtonText: \"Yes, delete it!\",\n        });\n\n        if (confirmDelete.isConfirmed) {\n            try {\n                const response = await deleteExamData(id);\n                if (response.success) {\n                    toast.success(response.message, {\n                        position: toast.POSITION.TOP_RIGHT,\n                        autoClose: 3000,\n                    });\n                    renderData();\n                }\n            } catch (error) {\n                toast.error(error.message, {\n                    position: toast.POSITION.TOP_RIGHT,\n                    autoClose: 3000,\n                });\n            }\n        }\n    };\n\n    // handleExamView\n    const handleExamView = async (id) => {\n        console.log(id)\n        navigate(`/examination-info/${id}`);\n    }\n\n    const columns = [\n        { Header: \"Exam Name\", accessor: \"exam_name\" },\n        { Header: \"Level Name\", accessor: \"level_id.name\" },\n        { Header: \"Organization Name\", accessor: \"organization_id.name\" },\n        { Header: \"Incharge Teacher\", accessor: \"teacher_id.name\" },\n        { Header: \"Exam Duration\", accessor: \"exam_duration\" },\n        { Header: \"Total Marks\", accessor: \"total_marks\" },\n        {\n            Header: \"Exam Start Date & Time\",\n            accessor: \"examDateTime\",\n            Cell: ({ value }) => {\n                // Format the date\n                const formattedDate = new Date(value).toLocaleDateString(\"en-GB\", {\n                    day: \"numeric\",\n                    month: \"short\",\n                    year: \"numeric\",\n                });\n\n                // Format the time\n                const formattedTime = new Date(value).toLocaleTimeString(\"en-US\", {\n                    hour: \"numeric\",\n                    minute: \"numeric\",\n                    hour12: true,\n                });\n\n                return `${formattedDate} ${formattedTime}`;\n            },\n        },\n        {\n            Header: \"Exam End Date & Time\",\n            accessor: \"examEndDateTime\",\n            Cell: ({ value }) => {\n                // Format the date\n                const formattedDate = new Date(value).toLocaleDateString(\"en-GB\", {\n                    day: \"numeric\",\n                    month: \"short\",\n                    year: \"numeric\",\n                });\n\n                // Format the time\n                const formattedTime = new Date(value).toLocaleTimeString(\"en-US\", {\n                    hour: \"numeric\",\n                    minute: \"numeric\",\n                    hour12: true,\n                });\n\n                return `${formattedDate} ${formattedTime}`;\n            },\n        },\n        { Header: \"Created By\", accessor: \"created_by.admin_name\" },\n        {\n            Header: \"Created At\",\n            accessor: \"createdAt\",\n            Cell: ({ value }) => {\n                // Format the date\n                const formattedDate = new Date(value).toLocaleDateString(\"en-GB\", {\n                    day: \"numeric\",\n                    month: \"short\",\n                    year: \"numeric\",\n                });\n\n                // Format the time\n                const formattedTime = new Date(value).toLocaleTimeString(\"en-US\", {\n                    hour: \"numeric\",\n                    minute: \"numeric\",\n                    hour12: true,\n                });\n\n                return `${formattedDate} ${formattedTime}`;\n            },\n        },\n        {\n            Header: \"Schedule\",\n            accessor: \"is_schedule\",\n            Cell: ({ value }) => (\n                <CButton\n                    color={value ? \"success\" : \"danger\"}\n                    size=\"sm\"\n                    style={{ color: \"white\", borderRadius: \"20px\", minWidth: \"110px\" }} // Set a fixed width\n                >\n                    {value ? \"Schedule\" : \"Not Schedule\"}\n                </CButton>\n            ),\n        },\n        {\n            Header: \"Status\",\n            accessor: \"\",\n            Cell: ({ row }) => {\n                // const endDate = new Date(row.original.examEndDateTime);\n                // const currentDate = new Date();\n\n                // if (endDate > currentDate) {\n                //     return \"Upcoming\";\n                // } else if (endDate.getDate() === currentDate.getDate()) {\n                //     setIsExamDone(true);\n                //     return \"Ongoing\";\n                // } else {\n                //     setIsExamDone(true);\n                //     return \"Completed\";\n                // }\n\n\n\n                const startDate = new Date(row.original.examDateTime);\n                const endDate = new Date(row.original.examEndDateTime);\n                const currentDate = new Date();\n\n                if (currentDate < startDate) {\n                    return \"Upcoming.\";\n                } else if (currentDate >= startDate && currentDate <= endDate) {\n                    setIsExamDone(true);\n                    return \"Ongoing.\";\n                } else {\n                    setIsExamDone(true);\n                    return \"Completed.\";\n                }\n            },\n        },\n\n        {\n            Header: \"Actions\",\n            accessor: \"_id\", // Assuming you have an 'id' property in your teacher data\n            Cell: ({ row }) =>\n            // (\n\n            {\n                // const startDate = new Date(row.original.examDateTime);\n                // const endDate = new Date(row.original.examEndDateTime);\n                // const currentDate = new Date();\n\n                // if (currentDate < startDate) {\n                //     return <>\n                //         <CButton\n                //             color=\"success\"\n                //             size=\"sm\"\n                //             style={{ color: \"white\" }}\n                //             onClick={() => handleExamView(row.original._id)}\n                //         >\n                //             <FaEye /> View Details\n                //         </CButton>{\" \"}\n                //         <CButton\n                //             color=\"info\"\n                //             size=\"sm\"\n                //             style={{ color: \"white\" }}\n                //             onClick={() => handleEdit(row.original._id)}\n                //         >\n                //             <FaEdit /> Edit\n                //         </CButton>{\" \"}\n                //         <CButton\n                //             color=\"danger\"\n                //             size=\"sm\"\n                //             style={{ color: \"white\" }}\n                //             onClick={() => handleDelete(row.original._id)}\n                //         >\n                //             <FaTrash /> Delete\n                //         </CButton>\n\n                //     </>\n                // } else if (currentDate >= startDate && currentDate <= endDate) {\n                //     return <>\n                //         <CButton\n                //             color=\"success\"\n                //             size=\"sm\"\n                //             style={{ color: \"white\" }}\n                //             onClick={() => handleExamView(row.original._id)}\n                //         >\n                //             <FaEye /> View Details\n                //         </CButton>{\" \"}\n                //     </>\n\n                // } else {\n                //     return <>\n                //     <CButton\n                //         color=\"success\"\n                //         size=\"sm\"\n                //         style={{ color: \"white\" }}\n                //         onClick={() => handleExamView(row.original._id)}\n                //     >\n                //         <FaEye /> View Details\n                //     </CButton>{\" \"}\n                // </>\n                // }\n\n                const is_schedule = row.original.is_schedule\n                if (is_schedule) {\n                    return <>\n                        <CButton\n                            color=\"success\"\n                            size=\"sm\"\n                            style={{ color: \"white\" }}\n                            onClick={() => handleExamView(row.original._id)}\n                        >\n                            <FaEye /> View Details\n                        </CButton>{\" \"}\n\n                        <CButton\n                            color=\"danger\"\n                            size=\"sm\"\n                            style={{ color: \"white\" }}\n                            onClick={() => handleDelete(row.original._id)}\n                        >\n                            <FaTrash /> Delete\n                        </CButton>\n                    </>\n                } else {\n                    return <>\n                        <CButton\n                            color=\"success\"\n                            size=\"sm\"\n                            style={{ color: \"white\" }}\n                            onClick={() => handleExamView(row.original._id)}\n                        >\n                            <FaEye /> View Details\n                        </CButton>{\" \"}\n                        <CButton\n                            color=\"info\"\n                            size=\"sm\"\n                            style={{ color: \"white\" }}\n                            onClick={() => handleEdit(row.original._id)}\n                        >\n                            <FaEdit /> Edit\n                        </CButton>{\" \"}\n                        <CButton\n                            color=\"danger\"\n                            size=\"sm\"\n                            style={{ color: \"white\" }}\n                            onClick={() => handleDelete(row.original._id)}\n                        >\n                            <FaTrash /> Delete\n                        </CButton>\n\n                    </>\n                }\n            }\n        },\n    ];\n\n    const CustomStyles = () => {\n        const formRef = useRef();\n\n        const handleChange = (e) => {\n            const { name, value, files } = e.target;\n\n            if (name === 'examDateTime' || name === 'examEndDateTime') {\n                setFormData((prevData) => ({\n                    ...prevData,\n                    [name]: new Date(value),\n                }));\n            } else {\n                setFormData((prevData) => ({\n                    ...prevData,\n                    [name]: name === \"file\" ? files[0] : value,\n                }));\n            }\n        };\n\n\n\n        const handleChangeSelectOrganization = (selectedOption) => {\n            console.log(selectedOption);\n            setFormData((prevData) => ({\n                ...prevData,\n                organization_value: selectedOption,\n                organization_id: selectedOption.value,\n            }));\n            renderTeacherData(selectedOption.value)\n            setIsTeacherDisabled(false)\n            setIsTypeSelectedOrganization(false);\n        };\n\n\n        //handleChangeSelectTeacher\n        const handleChangeSelectTeacher = (selectedOption) => {\n            console.log(selectedOption);\n            setFormData((prevData) => ({\n                ...prevData,\n                teacher_value: selectedOption,\n                teacher_id: selectedOption.value,\n            }));\n            setIsTypeSelectedTeacher(false);\n        };\n\n        // handleChangeSelectLevel\n        const handleChangeSelectLevel = (selectedOption) => {\n            console.log(selectedOption);\n            setFormData((prevData) => ({\n                ...prevData,\n                level_value: selectedOption,\n                level_id: selectedOption.value,\n            }));\n            setIsTypeSelectedLevel(false);\n        };\n\n        // Handler for duration change\n        const handleDurationChange = (selectedOption) => {\n            console.log(selectedOption);\n            setFormData((prevData) => ({\n                ...prevData,\n                duration_value: selectedOption,\n                exam_duration: selectedOption.value,\n            }));\n            // setIsTypeSelectedLevel(false);\n        };\n\n\n        const handleStartDateChange = (date) => {\n            setFormData((prevData) => ({ ...prevData, examDateTime: date }));\n        };\n\n        const handleEndDateChange = (date) => {\n            setFormData((prevData) => ({ ...prevData, examEndDateTime: date }));\n        };\n\n        const handleSubmit = async (event) => {\n            event.preventDefault();\n            event.stopPropagation();\n            const form = formRef.current;\n\n            if (form.checkValidity() === false) {\n                form.classList.add(\"was-validated\");\n                if (formData.level_id == \"\" || formData.level_id == null) {\n                    setIsTypeSelectedLevel(true);\n                    return;\n                } else if (\n                    formData.organization_id == \"\" ||\n                    formData.organization_id == null\n                ) {\n                    setIsTypeSelectedOrganization(true);\n                    return;\n                }\n                return;\n            }\n            // Convert examDateTime and examEndDateTime to Date objects\n            formData.examDateTime = new Date(formData.examDateTime).toISOString();\n            formData.examEndDateTime = new Date(formData.examEndDateTime).toISOString();\n\n\n            let response = null;\n            formData.total_marks = parseInt(formData.total_marks)\n            console.log(formData);\n\n            //   return\n            if (editId) {\n                response = await editExam(editId, formData);\n            } else {\n                response = await addExam(formData);\n                setEditId(null);\n            }\n\n            if (response.success) {\n                toast.success(response.message, {\n                    position: toast.POSITION.TOP_RIGHT,\n                    autoClose: 3000,\n                });\n                renderData();\n\n                setBtnText(\"Add Teacher\");\n                setFormData({\n                    exam_name: \"\",\n                    total_marks: \"\",\n                    examDateTime: \"\",\n                    examEndDateTime: \"\",\n                    organization_value: null,\n                    organization_id: null,\n                    level_value: null,\n                    level_id: null,\n                    teacher_id: null,\n                    teacher_value: null,\n                    duration_value: null,\n                    exam_duration: null,\n                });\n\n                form.classList.remove(\"was-validated\");\n                setIsOrgDisabled(false);\n            } else {\n                toast.error(response.message, {\n                    position: toast.POSITION.TOP_RIGHT,\n                    autoClose: 3000,\n                });\n            }\n        };\n\n        return (\n            <CForm\n                ref={formRef}\n                className=\"row g-3 needs-validation\"\n                noValidate\n                onSubmit={handleSubmit}\n            >\n                <CCol md={4}>\n                    <CFormLabel>Examination Name</CFormLabel>\n                    <CFormInput\n                        type=\"text\"\n                        placeholder=\"Enter Examination Name\"\n                        name=\"exam_name\"\n                        required\n                        value={formData.exam_name}\n                        onChange={handleChange}\n                    />\n                    <CFormFeedback invalid>Please enter examination  name</CFormFeedback>\n                </CCol>\n                <CCol md={4}>\n                    <CFormLabel>Select Level</CFormLabel>\n                    <Select\n                        name=\"is_type\"\n                        value={formData.level_value}\n                        options={level_option}\n                        onChange={handleChangeSelectLevel}\n                        placeholder=\"Select Level\"\n                        required\n                    />\n                    <CFormFeedback className=\"text-danger\" style={{ fontSize: \"14px\" }}>\n                        {\" \"}\n                        {isTypeSelectedLevel ? \"Please select level\" : \"\"}\n                    </CFormFeedback>\n                </CCol>\n\n                {!props.id ? <CCol md={4}>\n                    <CFormLabel>Select Organization</CFormLabel>\n                    <Select\n                        name=\"is_type\"\n                        value={formData.organization_value}\n                        options={organization_option}\n                        onChange={handleChangeSelectOrganization}\n                        placeholder=\"Select Type\"\n                        isDisabled={isOrgDisabled}\n                        required\n                    />\n                    <CFormFeedback className=\"text-danger\" style={{ fontSize: \"14px\" }}>\n                        {\" \"}\n                        {isTypeSelectedOrganization ? \"Please select organization\" : \"\"}\n                    </CFormFeedback>\n                </CCol> : null}\n\n\n                <CCol md={4}>\n                    <CFormLabel>Select Incharge Teacher</CFormLabel>\n                    <Select\n                        name=\"teacher_id\"\n                        value={formData.teacher_value}\n                        options={teacher_option}\n                        onChange={handleChangeSelectTeacher}\n                        placeholder=\"Select Teacher\"\n                        required\n                        isDisabled={isTeacherDisabled}\n                    />\n                    <CFormFeedback className=\"text-danger\" style={{ fontSize: \"14px\" }}>\n                        {\" \"}\n                        {isTypeSelectedTeacher ? \"Please select teacher\" : \"\"}\n                    </CFormFeedback>\n                </CCol>\n\n                <CCol md={4}>\n                    <CFormLabel>Select Examination Start Date and Time</CFormLabel>\n                    <div className=\"d-flex\">\n                        <DatePicker\n                            selected={formData.examDateTime}\n                            onChange={handleStartDateChange}\n                            showTimeSelect\n                            timeFormat=\"HH:mm\"\n                            timeIntervals={15}\n                            dateFormat=\"yyyy-MM-dd HH:mm:ss\"\n                            placeholderText=\"Select Examination Date and Time\"\n                            className=\"form-control\"\n                            required\n                            minDate={new Date()} // Set minimum date to today\n                            filterDate={(date) => {\n                                const currentDate = new Date();\n                                return date >= currentDate.setHours(0, 0, 0, 0); // Set current date to midnight\n                            }}\n                        />\n                    </div>\n                    <CFormFeedback invalid>Please select examination date and time</CFormFeedback>\n                </CCol>\n\n                <CCol md={4}>\n                    <CFormLabel>Select Examination End Date and Time</CFormLabel>\n                    <div className=\"d-flex\">\n                        <DatePicker\n                            selected={formData.examEndDateTime}\n                            onChange={handleEndDateChange}\n                            showTimeSelect\n                            timeFormat=\"HH:mm\"\n                            timeIntervals={15}\n                            dateFormat=\"yyyy-MM-dd HH:mm:ss\"\n                            placeholderText=\"Select Examination Date and Time\"\n                            className=\"form-control\"\n                            required\n                            minDate={formData.examDateTime} // Set minimum date to selected start date\n                            filterDate={(date) => {\n                                const currentDate = new Date();\n                                return date >= currentDate.setHours(0, 0, 0, 0); // Set current date to midnight\n                            }}\n                            filterTime={(time) => {\n                                const currentStartDate = formData.examDateTime || new Date();\n                                const selectedEndDate = formData.examEndDateTime || currentStartDate;\n\n                                // Check if the selected date is the same as the start date\n                                if (selectedEndDate.getDate() === currentStartDate.getDate() &&\n                                    selectedEndDate.getMonth() === currentStartDate.getMonth() &&\n                                    selectedEndDate.getFullYear() === currentStartDate.getFullYear()) {\n                                    // If the date is the same, make sure the selected time is greater than the start time\n                                    return time > currentStartDate;\n                                } else {\n                                    // If the date is different, allow any time on the selected end date\n                                    return true;\n                                }\n                            }}\n                        />\n                    </div>\n                    <CFormFeedback invalid>Please select examination date and time</CFormFeedback>\n                </CCol>\n\n                <CCol md={4}>\n                    <CFormLabel>Select Duration</CFormLabel>\n                    <Select\n                        name=\"exam_duration\"\n                        value={formData.duration_value}\n                        options={[\n                            { value: '30M', label: '30 M' },\n                            { value: '1H', label: '1 H' },\n                            { value: '1.5H', label: '1.5 H' },\n                            { value: '2H', label: '2 H' },\n                            { value: '2.5H', label: '2.5 H' },\n                            { value: '3H', label: '3 H' },\n                            { value: '3.5H', label: '3.5 H' },\n                            { value: '4H', label: '4 H' },\n                            { value: '4.5H', label: '4.5 H' }\n\n\n                            // Add more options as needed\n                        ]}\n                        onChange={handleDurationChange}\n                        placeholder=\"Select Duration\"\n\n                    />\n\n                </CCol>\n\n                <CCol md={4}>\n                    <CFormLabel>Total Marks</CFormLabel>\n                    <CFormInput\n                        type=\"number\"\n                        placeholder=\"Enter total marks\"\n                        name=\"total_marks\"\n                        required\n                        value={formData.total_marks}\n                        onChange={handleChange}\n                    />\n                    <CFormFeedback invalid>Please enter total marks</CFormFeedback>\n                </CCol>\n\n                <CCol xs={12} className=\"d-flex justify-content-end\">\n                    <CButton color=\"primary\" type=\"submit\">\n                        {btnText}\n                    </CButton>\n                </CCol>\n            </CForm>\n        );\n    };\n\n    return (\n        <>\n            <FormsCustom customStyles={CustomStyles} title=\"Examination Master\" />\n\n            <DataTable columns={columns} data={data} />\n\n        </>\n    );\n}\n\nexport default Exam;\n\nExam.propTypes = {\n    row: PropTypes.shape({\n        original: PropTypes.shape({\n            _id: PropTypes.number.isRequired,\n        }),\n    }),\n};\n","// DataTable.js\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { useTable, usePagination, useSortBy, useGlobalFilter } from 'react-table'\nimport { Table, FormControl, Button } from 'react-bootstrap'\n// import { useState } from 'react'\nimport * as XLSX from 'xlsx'\nimport './DataTable.css' // Import the CSS file\n\nconst DataTable = ({ columns, data, name }) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    state: { pageIndex, pageSize, globalFilter },\n    setGlobalFilter,\n    gotoPage,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0, pageSize: 10 }, // Set initial pageSize to tablePageSize\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n  )\n\n  const downloadExcel = () => {\n    const excelData = data.map((row) =>\n      columns.reduce((acc, column) => {\n        acc[column.Header] = row[column.accessor]\n        return acc\n      }, {}),\n    )\n\n    const ws = XLSX.utils.json_to_sheet(excelData)\n    const wb = XLSX.utils.book_new()\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet 1')\n    XLSX.writeFile(wb, 'data.xlsx')\n  }\n\n  return (\n    <div className=\"data-table-container\">\n        <h5>{name?name:\"\"}</h5>\n      <div className=\"data-table-header\">\n        <div className=\"search-box-container\">\n          <FormControl\n            type=\"text\"\n            value={globalFilter || ''}\n            onChange={(e) => setGlobalFilter(e.target.value)}\n            placeholder=\"Search...\"\n          />\n          <span className=\"search-icon\">&#x1F50D;</span>\n        </div>\n        <Button onClick={() => downloadExcel()} variant=\"success\" className='download_excel' style={{ color: 'white' }}>\n          Download Excel\n        </Button>\n      </div>\n      <div className=\"table-wrapper\">\n      <Table {...getTableProps()} bordered hover responsive>\n        <thead>\n          <tr>\n            <th>Sr. No.</th>\n            {headerGroups.map((headerGroup) => (\n              <React.Fragment key={headerGroup._id}>\n                {headerGroup.headers.map((column) => (\n                  <th key={column._id} {...column.getHeaderProps(column.getSortByToggleProps())}>\n                    {column.render('Header')}\n                    <span>{column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}</span>\n                  </th>\n                ))}\n              </React.Fragment>\n            ))}\n          </tr>\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr key={row._id} {...row.getRowProps()}>\n                <td>{pageIndex * pageSize + i + 1}</td>\n                {row.cells.map((cell) => (\n                  <td key={cell.column._id} {...cell.getCellProps()}>\n                    {cell.render('Cell')}\n                  </td>\n                ))}\n              </tr>\n            )\n          })}\n        </tbody>\n      </Table>\n      </div>\n     \n      <div className=\"pagination-controls\">\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {'<<'}\n        </button>\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n          {'<'}\n        </button>\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n          {'>'}\n        </button>\n        <button onClick={() => gotoPage(page.length - 1)} disabled={!canNextPage}>\n          {'>>'}\n        </button>\n        <span>\n          &nbsp;Page <strong>{pageIndex + 1}</strong> of {Math.ceil(data.length / pageSize)} pages | Showing {data.length} Records\n        </span>\n      </div>\n    </div>\n  )\n}\n\nDataTable.propTypes = {\n  columns: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n}\n\nexport default DataTable","// FormsCustom.js\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { CCard, CCardBody, CCardHeader, CCol, CRow } from '@coreui/react'\n\nconst FormsCustom = ({ customStyles, title }) => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>{title}</strong>\n          </CCardHeader>\n          <CCardBody>\n            {/* Call the customStyles function if it's provided */}\n            {customStyles ? customStyles() : null}\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\n// Add prop validation\nFormsCustom.propTypes = {\n  customStyles: PropTypes.func, // Ensure customStyles is a function\n  title: PropTypes.func, // Ensure customStyles is a function\n}\n\nexport default FormsCustom\n"],"names":["BASE_URL","axiosInstance","axios","create","baseURL","headers","setAuthorizationHeader","bearerToken","Cookies","get","defaults","common","concat","interceptors","response","use","error","status","window","location","href","Promise","reject","loginUser","async","post","userData","data","success","accessToken","token","set","secure","sameSite","name","id","console","log","renderOrganizationData","renderOrganizationById","addOrganization","deleteOrganizationData","delete","editOrganization","patch","renderTeacherData","renderTeacherByOrganization","addTeacher","deleteTeacherData","editTeacher","renderLevelData","addLevel","deleteLevelData","editLevel","renderQuestionData","addQuestion","deleteQuestionData","editQuestion","renderStudentData","renderStudentDataByOrganization","addStudent","deleteStudentData","editStudent","renderExamData","renderExamDataById","renderStudentExamData","removedStudentExamData","removedQuestionExamData","addExam","deleteExamData","editExam","renderExamDataByOrganizationForAdmin","renderExamQuestionData","addStudentToExam","renderNotExitStudent","renderNotExitQuestion","addQuestionToExam","scheduleExam","renderStudentExamById","updateStudentCertificate","updateGenerateCertificate","renderDataForDashboard","uploadBulkQuestion","props","setData","useState","editId","setEditId","btnText","setBtnText","isTypeSelected","setIsTypeSelected","isTypeSelectedOrganization","setIsTypeSelectedOrganization","isTypeSelectedLevel","setIsTypeSelectedLevel","organization_option","setOrganizationOption","level_option","setLevelOption","teacher_option","setTeacherOption","isTypeSelectedTeacher","setIsTypeSelectedTeacher","isTeacherDisabled","setIsTeacherDisabled","isOrgDisabled","setIsOrgDisabled","isExamDone","setIsExamDone","navigate","useNavigate","created_by","formData","setFormData","exam_name","total_marks","level_id","organization_value","organization_id","level_value","examDateTime","examEndDateTime","teacher_value","teacher_id","exam_duration","duration_value","useEffect","renderData","renderOrganization","renderLevel","map","org","label","value","_id","handleDelete","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","toast","message","position","POSITION","TOP_RIGHT","autoClose","handleExamView","columns","Header","accessor","Cell","_ref","formattedDate","Date","toLocaleDateString","day","month","year","formattedTime","toLocaleTimeString","hour","minute","hour12","_ref2","_ref3","_ref4","_jsx","CButton","color","size","style","borderRadius","minWidth","children","_ref5","row","startDate","original","endDate","currentDate","_ref6","is_schedule","_jsxs","_Fragment","onClick","FaEye","FaTrash","studentToUpdate","find","handleEdit","FaEdit","FormsCustom","customStyles","CustomStyles","formRef","useRef","handleChange","e","files","target","prevData","CForm","ref","className","noValidate","onSubmit","event","preventDefault","stopPropagation","form","current","checkValidity","classList","add","toISOString","parseInt","remove","CCol","md","CFormLabel","CFormInput","type","placeholder","required","onChange","CFormFeedback","invalid","Select","options","selectedOption","fontSize","isDisabled","DatePicker","selected","date","showTimeSelect","timeFormat","timeIntervals","dateFormat","placeholderText","minDate","filterDate","setHours","filterTime","time","currentStartDate","selectedEndDate","getDate","getMonth","getFullYear","xs","DataTable","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","state","pageIndex","pageSize","globalFilter","setGlobalFilter","gotoPage","nextPage","previousPage","canNextPage","canPreviousPage","useTable","initialState","useGlobalFilter","useSortBy","usePagination","FormControl","Button","downloadExcel","excelData","reduce","acc","column","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","variant","Table","bordered","hover","responsive","headerGroup","React","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","i","getRowProps","cells","cell","getCellProps","disabled","length","Math","ceil","CRow","CCard","CCardHeader","CCardBody"],"sourceRoot":""}